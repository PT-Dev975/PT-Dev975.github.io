swagger: '2.0'
info:
  description: baasPartyManagement
  version: vR18.0.1
  title: baasPartyManagement
host: 'localhost:8080'
basePath: /baasPartyManagement/api/vR18.0.1
schemes:
  - http
  - https
paths:
  /party/appointment:
    post:
      operationId: createAppointment
      produces:
        - application/json
      parameters:
        - in: body
          name: payload
          required: true
          schema:
            $ref: '#/definitions/createAppointment'
        - name: validate_only
          in: query
          required: false
          type: boolean
      responses:
        '200':
          description: createAppointmentResponse
          schema:
            $ref: '#/definitions/createAppointmentResponse'
        default:
          description: createAppointmentErrorResponse
          schema:
            $ref: '#/definitions/createAppointmentErrorResponse'
  '/party/appointment/{appointmentId}':
    get:
      operationId: getAppointment
      produces:
        - application/json
      parameters:
        - name: appointmentId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: getAppointmentResponse
          schema:
            $ref: '#/definitions/getAppointmentResponse'
        default:
          description: getAppointmentErrorResponse
          schema:
            $ref: '#/definitions/getAppointmentErrorResponse'
  /party/callReport:
    post:
      operationId: createCallReport
      produces:
        - application/json
      parameters:
        - in: body
          name: payload
          required: true
          schema:
            $ref: '#/definitions/createCallReport'
        - name: validate_only
          in: query
          required: false
          type: boolean
      responses:
        '200':
          description: createCallReportResponse
          schema:
            $ref: '#/definitions/createCallReportResponse'
        default:
          description: createCallReportErrorResponse
          schema:
            $ref: '#/definitions/createCallReportErrorResponse'
  '/party/callReport/{callReportId}':
    get:
      operationId: getCallReport
      produces:
        - application/json
      parameters:
        - name: callReportId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: getCallReportResponse
          schema:
            $ref: '#/definitions/getCallReportResponse'
        default:
          description: getCallReportErrorResponse
          schema:
            $ref: '#/definitions/getCallReportErrorResponse'
  /party/corporateCustomer:
    post:
      operationId: createCorporateCustomer
      produces:
        - application/json
      parameters:
        - in: body
          name: payload
          required: true
          schema:
            $ref: '#/definitions/createCorporateCustomer'
        - name: validate_only
          in: query
          required: false
          type: boolean
      responses:
        '200':
          description: createCorporateCustomerResponse
          schema:
            $ref: '#/definitions/createCorporateCustomerResponse'
        default:
          description: createCorporateCustomerErrorResponse
          schema:
            $ref: '#/definitions/createCorporateCustomerErrorResponse'
  '/party/corporateCustomer/{customerId}':
    get:
      operationId: getCorporateCustomer
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: getCorporateCustomerResponse
          schema:
            $ref: '#/definitions/getCorporateCustomerResponse'
        default:
          description: getCorporateCustomerErrorResponse
          schema:
            $ref: '#/definitions/getCorporateCustomerErrorResponse'
    put:
      operationId: updateCorporateCustomer
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          required: true
          type: string
        - in: body
          name: payload
          required: true
          schema:
            $ref: '#/definitions/updateCorporateCustomer'
        - name: validate_only
          in: query
          required: false
          type: boolean
      responses:
        '200':
          description: updateCorporateCustomerResponse
          schema:
            $ref: '#/definitions/updateCorporateCustomerResponse'
        default:
          description: updateCorporateCustomerErrorResponse
          schema:
            $ref: '#/definitions/updateCorporateCustomerErrorResponse'
  /party/individualCustomer:
    post:
      operationId: createIndividualCustomer
      produces:
        - application/json
      parameters:
        - in: body
          name: payload
          required: true
          schema:
            $ref: '#/definitions/createIndividualCustomer'
        - name: validate_only
          in: query
          required: false
          type: boolean
      responses:
        '200':
          description: createIndividualCustomerResponse
          schema:
            $ref: '#/definitions/createIndividualCustomerResponse'
        default:
          description: createIndividualCustomerErrorResponse
          schema:
            $ref: '#/definitions/createIndividualCustomerErrorResponse'
  '/party/individualCustomer/{customerId}':
    get:
      operationId: getIndividualCustomer
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: getIndividualCustomerResponse
          schema:
            $ref: '#/definitions/getIndividualCustomerResponse'
        default:
          description: getIndividualCustomerErrorResponse
          schema:
            $ref: '#/definitions/getIndividualCustomerErrorResponse'
    put:
      operationId: updateIndividualCustomer
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          required: true
          type: string
        - in: body
          name: payload
          required: true
          schema:
            $ref: '#/definitions/updateIndividualCustomer'
        - name: validate_only
          in: query
          required: false
          type: boolean
      responses:
        '200':
          description: updateIndividualCustomerResponse
          schema:
            $ref: '#/definitions/updateIndividualCustomerResponse'
        default:
          description: updateIndividualCustomerErrorResponse
          schema:
            $ref: '#/definitions/updateIndividualCustomerErrorResponse'
  '/party/customerRelation/{fromCustomer}/{toCustomer}':
    get:
      operationId: findCustomerRelation
      produces:
        - application/json
      parameters:
        - name: fromCustomer
          in: path
          required: true
          type: string
        - name: toCustomer
          in: path
          required: true
          type: string
        - name: page_size
          in: query
          description: The total number of records per page
          required: false
          type: integer
          format: int32
        - name: page_start
          in: query
          description: The record from which the response should be displayed
          required: false
          type: integer
          format: int32
        - name: page_token
          in: query
          description: Random and unique string for each page. Used for security purpose
          required: false
          type: string
      responses:
        '200':
          description: findCustomerRelationResponse
          schema:
            $ref: '#/definitions/findCustomerRelationResponse'
        default:
          description: findCustomerRelationErrorResponse
          schema:
            $ref: '#/definitions/findCustomerRelationErrorResponse'
  '/party/carrierAddress/{customerNo}':
    get:
      operationId: getCarrierAddress
      produces:
        - application/json
      parameters:
        - name: customerNo
          in: path
          required: true
          type: string
        - name: page_size
          in: query
          description: The total number of records per page
          required: false
          type: integer
          format: int32
        - name: page_start
          in: query
          description: The record from which the response should be displayed
          required: false
          type: integer
          format: int32
        - name: page_token
          in: query
          description: Random and unique string for each page. Used for security purpose
          required: false
          type: string
      responses:
        '200':
          description: getCarrierAddressResponse
          schema:
            $ref: '#/definitions/getCarrierAddressResponse'
        default:
          description: getCarrierAddressErrorResponse
          schema:
            $ref: '#/definitions/getCarrierAddressErrorResponse'
  '/party/customerByLegalID/{legalIdDocName}':
    get:
      operationId: getCustomerByLegalID
      produces:
        - application/json
      parameters:
        - name: legalIdDocName
          in: path
          required: true
          type: string
        - name: page_size
          in: query
          description: The total number of records per page
          required: false
          type: integer
          format: int32
        - name: page_start
          in: query
          description: The record from which the response should be displayed
          required: false
          type: integer
          format: int32
        - name: page_token
          in: query
          description: Random and unique string for each page. Used for security purpose
          required: false
          type: string
      responses:
        '200':
          description: getCustomerByLegalIDResponse
          schema:
            $ref: '#/definitions/getCustomerByLegalIDResponse'
        default:
          description: getCustomerByLegalIDErrorResponse
          schema:
            $ref: '#/definitions/getCustomerByLegalIDErrorResponse'
  '/party/getAccountSignatoryCustomers/{customerAccountNumber}':
    get:
      operationId: getAccountSignatoryCustomers
      produces:
        - application/json
      parameters:
        - name: customerAccountNumber
          in: path
          required: true
          type: string
        - name: page_size
          in: query
          description: The total number of records per page
          required: false
          type: integer
          format: int32
        - name: page_start
          in: query
          description: The record from which the response should be displayed
          required: false
          type: integer
          format: int32
        - name: page_token
          in: query
          description: Random and unique string for each page. Used for security purpose
          required: false
          type: string
      responses:
        '200':
          description: getAccountSignatoryCustomersResponse
          schema:
            $ref: '#/definitions/getAccountSignatoryCustomersResponse'
        default:
          description: getAccountSignatoryCustomersErrorResponse
          schema:
            $ref: '#/definitions/getAccountSignatoryCustomersErrorResponse'
  '/party/limit/{limitId}':
    get:
      operationId: getLimit
      produces:
        - application/json
      parameters:
        - name: limitId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: getLimitResponse
          schema:
            $ref: '#/definitions/getLimitResponse'
        default:
          description: getLimitErrorResponse
          schema:
            $ref: '#/definitions/getLimitErrorResponse'
    post:
      operationId: createLimit
      produces:
        - application/json
      parameters:
        - name: limitId
          in: path
          required: true
          type: string
        - in: body
          name: payload
          required: true
          schema:
            $ref: '#/definitions/createLimit'
        - name: validate_only
          in: query
          required: false
          type: boolean
      responses:
        '200':
          description: createLimitResponse
          schema:
            $ref: '#/definitions/createLimitResponse'
        default:
          description: createLimitErrorResponse
          schema:
            $ref: '#/definitions/createLimitErrorResponse'
    put:
      operationId: updateLimit
      produces:
        - application/json
      parameters:
        - name: limitId
          in: path
          required: true
          type: string
        - in: body
          name: payload
          required: true
          schema:
            $ref: '#/definitions/updateLimit'
        - name: validate_only
          in: query
          required: false
          type: boolean
      responses:
        '200':
          description: updateLimitResponse
          schema:
            $ref: '#/definitions/updateLimitResponse'
        default:
          description: updateLimitErrorResponse
          schema:
            $ref: '#/definitions/updateLimitErrorResponse'
definitions:
  PayloadHeader:
    type: object
    properties:
      override_acceptId:
        type: string
  createAppointment:
    properties:
      header:
        $ref: '#/definitions/PayloadHeader'
      body:
        $ref: '#/definitions/createAppointmentBody'
    description: createAppointment
  createAppointmentBody:
    type: object
    properties:
      notesList:
        type: array
        items:
          type: object
          properties:
            notes:
              type: string
              description: Descriptive notes on customer interaction with the bank Validation Rules- Optional input. Maximum of 40 characters allowed.
      contactChannel:
        type: string
        description: Specifies the channel for communication between customer and bank Different types channels has been described below- Channel Description BRANCH When the customer visits the bank CALLCENTER Marketed through call center EMAIL Campaigned through email IM Campaigned through instant messenger INTERNET Communicated through internet NONE No channel used PERSONAL By meeting the customer personally POST Launched by mail service SKYPE Instant messenger service SMS By Short messaging service OTHER Channel not mentioned above Validation Rules- Input should have an entry on EB.LOOKUP table
      contactStatus:
        type: string
        description: 'Identifies the status of the customer contact log. e.g NEW,CONFIRMED,PENDING. Validation Rules- Input must have valid entry on EB.LOOKUP table'
      contactDirection:
        type: string
        description: Direction of contact initiation. Default value is INWARD. Validation Rules- Allowed values are INWARD OUTWARD
      contactClient:
        type: string
        description: Specifies the ID of the customer or a prospect customer who interacts with the bank. Validation Rules Input to this field is based on options in the field WALK.IN.CUSTOMER Can be a valid ID from the CUSTOMER or PERSON.ENTITY table.
      description:
        type: string
        description: 'A free format field, that should be meaningful to the user.'
      dueDate:
        type: string
        format: date
        description: Stores the client contact date. System date will be defaulted. Validation Rules- Standard date format (YYYYMMDD)
      time:
        type: string
        description: Stores the client contact time. System date will be defaulted. Validation Rules- Standard time format (hh-mm)
  ScreenHeader:
    properties:
      id:
        type: string
      status:
        type: string
      transactionStatus:
        type: string
      audit:
        type: object
        properties:
          T24_time:
            type: integer
            format: int32
          parse_time:
            type: integer
            format: int32
  createAppointmentResponse:
    properties:
      header:
        $ref: '#/definitions/ScreenHeader'
      body:
        $ref: '#/definitions/createAppointmentResponseBody'
    description: createAppointmentResponse
  createAppointmentResponseBody:
    type: object
    properties:
      notesList:
        type: array
        items:
          type: object
          properties:
            notes:
              type: string
              description: Descriptive notes on customer interaction with the bank Validation Rules- Optional input. Maximum of 40 characters allowed.
      contactType:
        type: string
        description: 'Defines the type of contact made between customer and bank. If the contact is created by T24 application then this field will be set to TRANSACTION. e.g MAIL,LETTER,CALLCENTRE Validation Rules- Input must have an existing code on EB.LOOKUP table'
      contactChannel:
        type: string
        description: Specifies the channel for communication between customer and bank Different types channels has been described below- Channel Description BRANCH When the customer visits the bank CALLCENTER Marketed through call center EMAIL Campaigned through email IM Campaigned through instant messenger INTERNET Communicated through internet NONE No channel used PERSONAL By meeting the customer personally POST Launched by mail service SKYPE Instant messenger service SMS By Short messaging service OTHER Channel not mentioned above Validation Rules- Input should have an entry on EB.LOOKUP table
      contactStatus:
        type: string
        description: 'Identifies the status of the customer contact log. e.g NEW,CONFIRMED,PENDING. Validation Rules- Input must have valid entry on EB.LOOKUP table'
      contactDirection:
        type: string
        description: Direction of contact initiation. Default value is INWARD. Validation Rules- Allowed values are INWARD OUTWARD
      contactClient:
        type: string
        description: Specifies the ID of the customer or a prospect customer who interacts with the bank. Validation Rules Input to this field is based on options in the field WALK.IN.CUSTOMER Can be a valid ID from the CUSTOMER or PERSON.ENTITY table.
      description:
        type: string
        description: 'A free format field, that should be meaningful to the user.'
      dueDate:
        type: string
        format: date
        description: Stores the client contact date. System date will be defaulted. Validation Rules- Standard date format (YYYYMMDD)
      time:
        type: string
        description: Stores the client contact time. System date will be defaulted. Validation Rules- Standard time format (hh-mm)
  ErrorHeader:
    properties:
      id:
        type: string
      status:
        type: string
      transactionStatus:
        type: string
      audit:
        type: object
        properties:
          T24_time:
            type: integer
            format: int32
          parse_time:
            type: integer
            format: int32
  createAppointmentErrorResponse:
    properties:
      header:
        $ref: '#/definitions/ErrorHeader'
      error:
        $ref: '#/definitions/createAppointmentErrorResponseBody'
    description: createAppointmentErrorResponse
  createAppointmentErrorResponseBody:
    type: object
    properties:
      errorDetails:
        type: array
        items:
          type: object
          properties:
            fieldName:
              type: string
            code:
              type: string
            message:
              type: string
      type:
        type: string
  getAppointmentResponse:
    properties:
      header:
        $ref: '#/definitions/ScreenHeader'
      body:
        $ref: '#/definitions/getAppointmentResponseBody'
    description: getAppointmentResponse
  getAppointmentResponseBody:
    type: object
    properties:
      notesList:
        type: array
        items:
          type: object
          properties:
            notes:
              type: string
              description: Descriptive notes on customer interaction with the bank Validation Rules- Optional input. Maximum of 40 characters allowed.
      contactType:
        type: string
        description: 'Defines the type of contact made between customer and bank. If the contact is created by T24 application then this field will be set to TRANSACTION. e.g MAIL,LETTER,CALLCENTRE Validation Rules- Input must have an existing code on EB.LOOKUP table'
      contactChannel:
        type: string
        description: Specifies the channel for communication between customer and bank Different types channels has been described below- Channel Description BRANCH When the customer visits the bank CALLCENTER Marketed through call center EMAIL Campaigned through email IM Campaigned through instant messenger INTERNET Communicated through internet NONE No channel used PERSONAL By meeting the customer personally POST Launched by mail service SKYPE Instant messenger service SMS By Short messaging service OTHER Channel not mentioned above Validation Rules- Input should have an entry on EB.LOOKUP table
      contactStatus:
        type: string
        description: 'Identifies the status of the customer contact log. e.g NEW,CONFIRMED,PENDING. Validation Rules- Input must have valid entry on EB.LOOKUP table'
      contactDirection:
        type: string
        description: Direction of contact initiation. Default value is INWARD. Validation Rules- Allowed values are INWARD OUTWARD
      contactClient:
        type: string
        description: Specifies the ID of the customer or a prospect customer who interacts with the bank. Validation Rules Input to this field is based on options in the field WALK.IN.CUSTOMER Can be a valid ID from the CUSTOMER or PERSON.ENTITY table.
      description:
        type: string
        description: 'A free format field, that should be meaningful to the user.'
      dueDate:
        type: string
        format: date
        description: Stores the client contact date. System date will be defaulted. Validation Rules- Standard date format (YYYYMMDD)
      time:
        type: string
        description: Stores the client contact time. System date will be defaulted. Validation Rules- Standard time format (hh-mm)
  getAppointmentErrorResponse:
    properties:
      header:
        $ref: '#/definitions/ErrorHeader'
      error:
        $ref: '#/definitions/getAppointmentErrorResponseBody'
    description: getAppointmentErrorResponse
  getAppointmentErrorResponseBody:
    type: object
    properties:
      errorDetails:
        type: array
        items:
          type: object
          properties:
            fieldName:
              type: string
            code:
              type: string
            message:
              type: string
      type:
        type: string
  createCallReport:
    properties:
      header:
        $ref: '#/definitions/PayloadHeader'
      body:
        $ref: '#/definitions/createCallReportBody'
    description: createCallReport
  createCallReportBody:
    type: object
    properties:
      contactNotesList:
        type: array
        items:
          type: object
          properties:
            contactNotes:
              type: string
              description: Descriptive notes on customer interaction with the bank Validation Rules- Optional input. Maximum of 40 characters allowed.
      contactStaffList:
        type: array
        items:
          type: object
          properties:
            contactStaff:
              type: string
              description: Specifies the bank staff who dealt with the customer. By default operator id will be assigned. Validation Rules- Input must have an entry on USER table
      contactClient:
        type: string
        description: Specifies the ID of the customer or a prospect customer who interacts with the bank. Validation Rules Input to this field is based on options in the field WALK.IN.CUSTOMER Can be a valid ID from the CUSTOMER or PERSON.ENTITY table.
      contactStatus:
        type: string
        description: 'Identifies the status of the customer contact log. e.g NEW,CONFIRMED,PENDING. Validation Rules- Input must have valid entry on EB.LOOKUP table'
      channel:
        type: string
        description: 'This field is used to describe the communication channel of the customer. Dropdown. Optional Field Multi-value field along with ADDRESS.GROUP and ADDRESS.STATUS fields Options are POST, EMAIL, SMS, PHONE or FAX'
      description:
        type: string
        description: 'A free format field, that should be meaningful to the user.'
      date:
        type: string
        format: date
        description: Stores the client contact date. System date will be defaulted.Validation Rules- Standard date format (YYYYMMDD)
      contactTime:
        type: string
        description: Stores the client contact time. System date will be defaulted. Validation Rules- Standard time format (hh-mm)
      contactDirection:
        type: string
        description: Direction of contact initiation. Default value is INWARD. Validation Rules- Allowed values are INWARD OUTWARD
  createCallReportResponse:
    properties:
      header:
        $ref: '#/definitions/ScreenHeader'
      body:
        $ref: '#/definitions/createCallReportResponseBody'
    description: createCallReportResponse
  createCallReportResponseBody:
    type: object
    properties:
      contactNotesList:
        type: array
        items:
          type: object
          properties:
            contactNotes:
              type: string
              description: Descriptive notes on customer interaction with the bank Validation Rules- Optional input. Maximum of 40 characters allowed.
      contactStaffList:
        type: array
        items:
          type: object
          properties:
            contactStaff:
              type: string
              description: Specifies the bank staff who dealt with the customer. By default operator id will be assigned. Validation Rules- Input must have an entry on USER table
      contactClient:
        type: string
        description: Specifies the ID of the customer or a prospect customer who interacts with the bank. Validation Rules Input to this field is based on options in the field WALK.IN.CUSTOMER Can be a valid ID from the CUSTOMER or PERSON.ENTITY table.
      contactType:
        type: string
        description: 'Defines the type of contact made between customer and bank. If the contact is created by T24 application then this field will be set to TRANSACTION. e.g MAIL,LETTER,CALLCENTRE Validation Rules- Input must have an existing code on EB.LOOKUP table'
      contactStatus:
        type: string
        description: 'Identifies the status of the customer contact log. e.g NEW,CONFIRMED,PENDING. Validation Rules- Input must have valid entry on EB.LOOKUP table'
      channel:
        type: string
        description: 'This field is used to describe the communication channel of the customer. Dropdown. Optional Field Multi-value field along with ADDRESS.GROUP and ADDRESS.STATUS fields Options are POST, EMAIL, SMS, PHONE or FAX'
      description:
        type: string
        description: 'A free format field, that should be meaningful to the user.'
      date:
        type: string
        format: date
        description: Stores the client contact date. System date will be defaulted.Validation Rules- Standard date format (YYYYMMDD)
      contactTime:
        type: string
        description: Stores the client contact time. System date will be defaulted. Validation Rules- Standard time format (hh-mm)
      contactDirection:
        type: string
        description: Direction of contact initiation. Default value is INWARD. Validation Rules- Allowed values are INWARD OUTWARD
  createCallReportErrorResponse:
    properties:
      header:
        $ref: '#/definitions/ErrorHeader'
      error:
        $ref: '#/definitions/createCallReportErrorResponseBody'
    description: createCallReportErrorResponse
  createCallReportErrorResponseBody:
    type: object
    properties:
      errorDetails:
        type: array
        items:
          type: object
          properties:
            fieldName:
              type: string
            code:
              type: string
            message:
              type: string
      type:
        type: string
  getCallReportResponse:
    properties:
      header:
        $ref: '#/definitions/ScreenHeader'
      body:
        $ref: '#/definitions/getCallReportResponseBody'
    description: getCallReportResponse
  getCallReportResponseBody:
    type: object
    properties:
      contactNotesList:
        type: array
        items:
          type: object
          properties:
            contactNotes:
              type: string
              description: Descriptive notes on customer interaction with the bank Validation Rules- Optional input. Maximum of 40 characters allowed.
      contactStaffList:
        type: array
        items:
          type: object
          properties:
            contactStaff:
              type: string
              description: Specifies the bank staff who dealt with the customer. By default operator id will be assigned. Validation Rules- Input must have an entry on USER table
      contactClient:
        type: string
        description: Specifies the ID of the customer or a prospect customer who interacts with the bank. Validation Rules Input to this field is based on options in the field WALK.IN.CUSTOMER Can be a valid ID from the CUSTOMER or PERSON.ENTITY table.
      contactType:
        type: string
        description: 'Defines the type of contact made between customer and bank. If the contact is created by T24 application then this field will be set to TRANSACTION. e.g MAIL,LETTER,CALLCENTRE Validation Rules- Input must have an existing code on EB.LOOKUP table'
      contactStatus:
        type: string
        description: 'Identifies the status of the customer contact log. e.g NEW,CONFIRMED,PENDING. Validation Rules- Input must have valid entry on EB.LOOKUP table'
      channel:
        type: string
        description: 'This field is used to describe the communication channel of the customer. Dropdown. Optional Field Multi-value field along with ADDRESS.GROUP and ADDRESS.STATUS fields Options are POST, EMAIL, SMS, PHONE or FAX'
      description:
        type: string
        description: 'A free format field, that should be meaningful to the user.'
      date:
        type: string
        format: date
        description: Stores the client contact date. System date will be defaulted.Validation Rules- Standard date format (YYYYMMDD)
      contactTime:
        type: string
        description: Stores the client contact time. System date will be defaulted. Validation Rules- Standard time format (hh-mm)
      contactDirection:
        type: string
        description: Direction of contact initiation. Default value is INWARD. Validation Rules- Allowed values are INWARD OUTWARD
  getCallReportErrorResponse:
    properties:
      header:
        $ref: '#/definitions/ErrorHeader'
      error:
        $ref: '#/definitions/getCallReportErrorResponseBody'
    description: getCallReportErrorResponse
  getCallReportErrorResponseBody:
    type: object
    properties:
      errorDetails:
        type: array
        items:
          type: object
          properties:
            fieldName:
              type: string
            code:
              type: string
            message:
              type: string
      type:
        type: string
  createCorporateCustomer:
    properties:
      header:
        $ref: '#/definitions/PayloadHeader'
      body:
        $ref: '#/definitions/createCorporateCustomerBody'
    description: createCorporateCustomer
  createCorporateCustomerBody:
    type: object
    properties:
      customerRatings:
        type: array
        description: Field identifies the rating of the customer.It is linked to EB.RATING table and must have an existing code on EB.RATING table.
        items:
          type: object
          properties:
            customerRating:
              type: string
              description: Field identifies the rating of the customer.It is linked to EB.RATING table and must have an existing code on EB.RATING table.
      address:
        type: array
        items:
          type: object
          properties:
            addressType:
              type: string
              description: 'This is field is used to select the Address type. Drop box. Options are POSTAL, Primary Residence / Registered Business and Blank. Optional Field.'
            addressLine_:
              type: string
              description: 'Address of the customer will be recorded here, based on Address type'
            locality:
              type: string
              description: This field mentions the Locality in which the customer has bought the new house.
            state:
              type: string
              description: This field mentions the State in which the customer has bought the new house.
            postCode:
              type: string
              description: The postcode of the new house purchased by the customer will be recorded here
            country:
              type: string
              description: This field mentions the Country in which the customer has bought the new house.
            dpID:
              type: string
              description: This field contains the Australia Post DPID returned from QAS after verifying an address. No input field at version level.
            addressFormatted:
              type: string
              description: This field captures the formatted Address response from QAS. Drop box Field. No input field at version level.
            addressValidated:
              type: string
              format: date
              description: This field denotes if the address if validated or not.
            addressDate:
              type: string
              format: date
              description: This field displays the date on which the QAS verification was done by the Address Interface. Standard Date Format. No input field at version level.
            addressReferenceId:
              type: string
              description: 'This field will store the Address Reference ID associated with one/multiple address returned by ESB (SearchAddress service). Upon selecting a closely matched address from the ADD.FORMATTED dropdown list, using the Address Reference ID an interface call (GetAddress service) is made which will return data for fields from ADD.LINE.1 to ADD.DP.ID.'
      preferredContactMethod:
        type: array
        items:
          type: object
          properties:
            channel:
              type: string
              description: 'This field is used to describe the communication channel of the customer. Dropdown. Optional Field Multi-value field along with ADDRESS.GROUP and ADDRESS.STATUS fields Options are POST, EMAIL, SMS, PHONE or FAX'
            addressGroup:
              type: string
              description: 'This field is used to select the Address Group for a particular Channel. Dropdown field. Optional Field. Options are ''Primary Residence / Registered Business'' or ''Postal'' when the Channel Select is ''Postal''. Or if the Channel Select is SMS/Email/PHONE the options are ''Primary'', ''Secondary'' or ''Office''.'
            addressStatus:
              type: string
              description: This field is used to select if the respective address is Undeliverable or not.Dropdown field. Optional. Options are Blank or 'Undeliverable'
      contactChannel:
        type: array
        description: Specifies the channel for communication between customer and bank Different types channels has been described below- Channel Description BRANCH When the customer visits the bank CALLCENTER Marketed through call center EMAIL Campaigned through email IM Campaigned through instant messenger INTERNET Communicated through internet NONE No channel used PERSONAL By meeting the customer personally POST Launched by mail service SKYPE Instant messenger service SMS By Short messaging service OTHER Channel not mentioned above Validation Rules- Input should have an entry on EB.LOOKUP table
        items:
          type: object
          properties:
            phone:
              type: string
              description: This field can contain phone number of the customer.
            sms:
              type: string
              description: This field can contain mobile number of the customer.
            email:
              type: string
              description: This field can contain e-mail addresses of the customer.
            addressLocation:
              type: string
              description: 'Address of the customer will be recorded here, based on Address type'
      fax:
        type: array
        description: This field can contain fax number of the customer.
        items:
          type: object
          properties:
            fax:
              type: string
              description: This field can contain fax number of the customer.
      idDocument:
        type: array
        items:
          type: object
          properties:
            legalId:
              type: string
              description: 'Part of the LEGAL multi-value set. Specifies any legal identification of the Customer. This field is for information only and specifies, for example, passport number, identity card number, PIN number etc.Validation Rules- 1-20 type A (alphanumeric) characters. (Optional input. No default value.)'
              enum:
                - Specifies any legal identification type
            legalDocumentName:
              type: string
              description: Part of the LEGAL multi-value set. Valdiated against EB.LOOKUP table CUS.LEGAL.DOC.NAME.
              enum:
                - Specifies the Legal Document name
            nameOnId:
              type: string
              description: 'Part of the LEGAL multi-value set. To support passports, enabling a holders name to be stored.'
              enum:
                - Specifies any legal identification of the Customer
            issueAuthority:
              type: string
              description: Part of the LEGAL multi-value set. Validated against EB.LOOKUP table CUS.LEGAL.ISS.AUTH.
              enum:
                - Specifies legal issuing authority
            issueDate:
              type: string
              format: date
              description: Defines the date of issue of cheques.Validation Rules-8 numeric characters.Standard date field.Optional Input (If not entered defaults to TODAY).No-change field.
            expiryDate:
              type: string
              format: date
              description: 'Part of the LEGAL multi-value set. Not mandatory, but if input must be greater than TODAY and greater than LEGAL.ISS.DATE.'
      relation:
        type: array
        description: This field is used to enumerate the customers marketing delivery preferences.Options are Marketing and Email Marketing
        items:
          type: object
          properties:
            relationCode:
              type: string
              description: Identifies the inter-relationship between Customer records and enables a link to be formed for the purpose of evaluating the overall Customer position. Input must be a valid Relation code and the reverse relationship will be shown automatically on the REVERS.REL.CODE when it has been defined in the RELATION table. An on-line display (internal file 'RELATION.CUSTOMER') also allows the User to check all the relationships of a Customer with other Customers within the same database. The relationship entered is that of the customer being created to that of the Customer defined in REL.CUSTOMER.Validation Rules- 1-3 numeric characters. Multivalue field associated with REL.CUSTOMER and REVERS.REL.CODE. (Optional input. No default value.)
              enum:
                - Identified relationship code
            relationCustomer:
              type: string
              description: 'Identifies the Customer Code or the Mnemonic of the Related Customer.Validation Rules- 1-10 numeric character Customer Number or 3-10 type SS (uppercase alpha or numeric, first character alpha) character Customer Mnemonic. Multivalue field associated with RELATION.CODE and REVERS.REL.CODE. (Mandatory input if corresponding RELATION.CODE is entered, otherwise not allowed.) Input must be a valid Customer code or mnemonic. The relationship between 2 customers may only be entered in one of the Customer records, not both.'
              enum:
                - Specifies inter-relationship Customer
            reverseRelation:
              type: string
              description: Identifies the Relationship code for the Related Customer. This field is generated automatically by the System according to the values defined in the RELATION table. No access to this field will be permitted to the User.Validation Rules- 1-3 numeric character Relation code. Multivalue field associated with RELATION.CODE and REL.CUSTOMER. This is a NOINPUT field.
              enum:
                - Relationship code for the related Customer
            role:
              type: string
              description: 'Part of the ROLE sub-value set. Role customer plays with this customer. Must exist on EB.ROLE table. Not a mandatory field, only if this customer has a role with the customer of the record.'
            moreRoleInfo:
              type: string
              description: 'Part of the ROLE sub-value set. When ROLE requires more information (see ROLE table), this field becomes mandatory. Otherwise it is optional.'
            roleNotes:
              type: string
              description: Part of the ROLE sub-value set. Additional notes that can be entered about this role.
            deliveryOptions:
              type: array
              items:
                type: object
                properties:
                  relationDeliveryOption:
                    type: string
                    description: 'Part of the ROLE sub-value set. Used on selected CUSTOMER records that are setup to be ''container'' type records which group together a set of clients, such as a joint customer relationship. Each of the clients has their own record which can be linked to the container. This field is used to specify what delivery addressing is to be used for the link customer. Only the first delivery option is used in a sub valued role list. There are three options- 1. - P.n (Use full name &amp; address of linked customer as the container PRINT.n address.) 2. - A.n (Only use address of linked customer as the container PRINT.n address. .Name &amp; short.name of the container is kept) 3.- C (Copy option - sends a copy of delivery messages using the MDR.CUSTOMER option on DE.PRODUCT). When the container customer is authorised the system creates the DE.ADDRESS records as indicated and where required will also create a DE.PRODUCT record.Validation Rules- Only one primary (PRINT.1) address can be entered, either as A.1 or P.1 If no primary address is entered the here the standard PRINT.1 address for this customer record will be created. Input only allowed if REL.CUSTOMER is present Only delivery options created in the EB.LOOKUP CUS.REL.DELIV.OPT table will be accepted.'
      otherFinDetails:
        type: array
        items:
          type: object
          properties:
            otherFinRelation:
              type: string
              description: Defines the connection to any other financial relationship if the customer hasValidation Rules-- 1-35 type (alphabet characters). (Optional input. No default value.)
            otherFinInstitution:
              type: string
              description: Defines the connection to any other financial institution if the customer hasValidation Rules-- 1-35 type (alphabetical characters). (Optional input. No default value.)
      furtherDetails:
        type: string
        description: Any relevant further details about customer.
      otherNationalityList:
        type: array
        items:
          type: object
          properties:
            otherNationality:
              type: string
              description: 'The customer has to indicate a primary nationality, these ''THER.NATIONALITY'' fields are for information purposes only. If input, must exist on COUNTRY table.'
      deliveryPreferences:
        type: array
        items:
          type: object
          properties:
            deliveryOption:
              type: string
              description: This field is used to enumerate the customers marketing delivery preferences.Options are Marketing and Email Marketing
            deliveryPref:
              type: string
              description: This field is used to select preference for the respective Delivery Option.Options are Opt-Out or blank.
      riskDetails:
        type: array
        items:
          type: object
          properties:
            riskAssetType:
              type: string
              description: Multi-value set indicating a customer's expertise in use with different asset classes. If the SC product is installed then the input must exist on ASSET.TYPE otherwise anything can be entered here.
            riskLevel:
              type: string
              description: Risk level. Values from 0 to 99 are valid.
            riskTolerance:
              type: string
              description: Indicates the tolerance in this risk class. Values from 0 to 99 are valid.
            riskFromDate:
              type: string
              format: date
              description: Date from which customer builds expertise in this risk class.
      overrideList:
        type: array
        items:
          type: object
          properties:
            override:
              type: string
              description: |-
                Records the overrides generated during processing of an activity. All the overrides generated in the property class templates (AA.ARR.XXXX, where XXXX - Property Class) for the Activity input are updated in this field.
                Standard override field, Multi-valued.
      inputterList:
        type: array
        items:
          type: object
          properties:
            inputter:
              type: string
              description: The users that have modified this record.Validation Rules-No input fieldSystem generated.
      dateTimeList:
        type: array
        items:
          type: object
          properties:
            dateTime:
              type: string
              format: date
              description: |-
                This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
                Validation Rules-No input fieldSystem generated.
      fullName:
        type: string
        description: This field is used to capture the full Name of the Customer.
      fullName__:
        type: string
        description: 'Continuation of NAME LINE 1. This field together with the previous and next two fields form the address for the Customer. The SWIFT standard of 4 lines of 35 characters each has been chosen by T24. Only in the fields NAME 1 and STREET is input mandatory. The input to field STREET is non mandatory if the field STREET.NON.MANDAT is defined as ''Y'', in the CUSTOMER.DEFAULT record whose ID is equal to the value of the SECTOR field. Where no other additional address has been defined in the DELIVERY file, the address defined in these four fields will be used on any correspondence sent to the Customer. After authorisation of the Customer record, this address will be automatically created in the DELIVERY file as the Address No. 1 and further maintenance of the Customer Address No. 1 will be performed directly in the Customer file. Any additional address to be opened or to be maintained will be done by means of the DELIVERY file.Validation Rules- 1-35 type S (uppercase alpha or numeric) characters. Special Characters ''&amp;'' and ''/'' are also allowed, with the exception that ''/'' cannot be entered as first character. If NAME.2 is reported in SWIFT Messages, the character ''&amp;'' would be replaced with spaces. (Optional input. No default value.)'
      organisationName:
        type: string
        description: 'This field is used to capture the Legal name or Trading Name of a company/organisation/Trust.3 - 200 Alphanumeric characters, Mandatory Field'
      mnemonic:
        type: string
        description: 'Specifies an alternative easy means of referencing the Customer. For countries where the Customer name should not be recorded (e.g. numbered Customers/accounts) any value can be entered in this field with the exception that the first character must be alpha. Like the ID, the Mnemonic must be unique across T24. Care should be taken when assigning Mnemonics to Customers and some rules should ideally be defined across the bank to allow easy identification of the Customers by their Mnemonics. Note - For each Customer, the System will automatically update the internal file ''MNEMONIC.CUSTOMER'' which allows the User to displaythe Customers in Mnemonic sequence instead of Customer number.Validation Rules- 3-10 type MNE (Uppercase alpha or numeric, first character alpha, or ''.'') characters. (Mandatory input)'
        enum:
          - Specifies an easy means of referencing Customer
      shortName:
        type: string
        description: 'Identifies the name of the Customer in a more descriptive form, and will be used for on-line enrichments in any field where a Customer ID or Mnemonic has been input. For countries where the Customer name should not be recorded (e.g. numbered Customers/ Accounts) any valid SWIFT character can be entered in this field with the exception that all characters cannot be spaces. A clear and unique identification of the Customer must be entered in this field. When entering or displaying data where a Customer ID or Mnemonic is involved, the content of this field will be used as the enrichment of the Customer number/Mnemonic.Validation Rules- 3-35 type S (uppercase alpha or numeric) characters. Special Characters ''&amp;'' and ''/'' are also allowed, with the exception that ''/'' cannot be entered as first character. If SHORT.NAME is reported in SWIFT Messages, the character ''&amp;'' would be replaced with spaces. (Mandatory input)'
        enum:
          - Short name of the customer
      accountOfficer:
        type: string
        description: 'Identifies the main Account Officer responsible for the Customer. his code will be defaulted on all Customer transactions within T24 except if it is overriden by another Account Officer code at the transaction or product level. The existence of the Account Officer code on every Customer transaction will allow generation of M.I.S. information at the Account Officer level.Validation Rules- 1-4 numeric character Account Officer code. (Mandatory input if no default value has been specified on the Customer DEFAULT Table for the corresponding sector code or the VERSION File [Ref- UTILITIES]. Otherwise Input is optional and will override default value.) It must be a valid code on the DEPT.ACCT.OFFICER table (Ref- GENERAL TABLES).'
        enum:
          - Account Officer responsible for the Customer
      secondOfficer:
        type: string
        description: 'Identifies the other Account Officer(s) responsible for the Customer. Only codes included in the DEPT.ACCT.OFFICER table (Ref- GENERAL TABLES) are allowed. The definition of a second Account Officer should serve the purpose of indicating who will take care of the Customer Relationship when the main ACCOUNT.OFFICER is on holiday, sick, or absent for any other reason.Validation Rules- 1-4 numeric character Account Officer code. Multivalue field. (Optional input. No default value.)'
      sector:
        type: string
        description: Identifies the Sector code relating to the Customer. If the Sector code is defined on the Customer DEFAULT table the associated default values will be retrieved and added to a new Customer record during the Validation process except if some specific values have been input by the User.Validation Rules- 1-4 numeric character Sector code. (Mandatory input) It must be a valid code on the SECTOR table. The field must not be blank.
        enum:
          - Sector code relating to the Customer
      industry:
        type: string
        description: 'Identifies the Industry in which the Customer is trading. Each User can define their own industry codes according to the use they want to make of them. Production of central bank reports classified by Industry codes or the monitoring of the overall credit exposure by Industry type are typical examples of uses of this code.Validation Rules- 1-4 numeric character Industry code. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION File [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the INDUSTRY code table.'
        enum:
          - Industry in which Customer is trading
      segment:
        type: string
        description: 'Specifies how the Customer is considered by the bank and how he fits in with the Account Officer''s overall marketing strategy. Examples of this field are- ''Prime Customer'', ''No Potential'', etc. but it must be a valid code on the TARGET code table. The values of the field should be defined according to the bank''s overall marketing strategy.Validation Rules- 1-4 numeric characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code, or the VERSION File [Ref- UTILITIES]. Otherwise input is optional and will override default value.)'
        enum:
          - Specifies how the cus is considered by the bank
      customerstatus:
        type: string
        description: 'Identifies the Status of the Customer. The values applicable to this field can be defined by each bank/branch according to the their own practice.Validation Rules- 1-4 numeric characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the Customer STATUS table.'
        enum:
          - Identifies the Status of the Customer
      nationality:
        type: string
        description: 'Identifies the Nationality of the Customer.Validation Rules- 2 type SSS (uppercase alpha) Country code characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector Code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the COUNTRY table (Ref- GENERAL TABLES).'
        enum:
          - Nationality of the Customer
      residence:
        type: string
        description: 'Identifies the Country of Residence of the Customer. Any change in the value of this field will prompt a message reminding the User that the Town Country defined in line 4 of the SWIFT address should also be changed. If the User, for any reason, does not want to change the content of line 4 of the SWIFT address, he will be forced to confirm it by entering an Override.Validation Rules- 2 type SSS (uppercase alpha) Country code characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the COUNTRY table (Ref- GENERAL TABLES).'
        enum:
          - Country of Residence of the Customer
      customertype:
        type: string
        description: 'Indicates the type of customer, and is dependant on the CR (Customer Relationship Management) module being installed. The values of PROSPECT, EXTERNAL.USER, ACTIVE or null (the equivalent of ACTIVE) are allowed. If PROSPECT is entered then if the customer does not form a business relationship with the bank, such as opening an account, limit or contract then after a period of time defined on the CUST.RETENTION field on COMPANY the customer record and all associated data will be removed from the system. If the customer forms a business relationship with the bank then the wll be activated and after this point the customer record cannot be deleted. If opted for External.user then the customer can only be used as a signatory in applications EB.SIGNATORY.GROUP and EB.EXTERNAL.USER and then in field named SIGNATORY if used in any other applications, and restricted for use in any other fields in all remaining applications.'
        enum:
          - Indicates Customer's Type
      abn:
        type: string
        description: Register Number used by Australian Businesses for their transactions. 11 digit numeric.
      acn:
        type: string
        description: Register Number used by Australian Corporates for their transactions. 9 digit numeric.
      customerStartDate:
        type: string
        format: date
        description: Contains the date on which individual/corporate becomes the customer of the bankValidation Rules-- Standard date format (YYYYMMDD). (Optional input. No default value.)
      taxFileNumber:
        type: string
        description: Standard Free Text fieldOnly 1 field required for both TFN and Exempt code with no encryption. This field should be a multi purpose field with a dropdown enquiry but the user can still key in any value without it being validated
      taxIdentificationNumber:
        type: string
        description: This field identifies the number used for Tax purposes in Australia.
      countryOfResidenceOfTaxPurposes:
        type: string
        description: This field displays the country of tax residence
      dateOfIncorporation:
        type: string
        format: date
        description: Specifies the Customer's date of birth or the date on which the Company was registered. Any birth or incorporation date which is before 1950 should be entered yyyymmdd.Validation Rules- Standard date format - type DD (Date format in range 1000-2049). (Optional input. No default value.) It must be a valid date which is less than or equal to today.
      issueCheques:
        type: string
        description: This field denotes whether the customer is eligible for cheque issue facility and to know first cheque book issued or not. System automatically changes the value to 'YES' once first cheque book is issued to an account for the customer. Input 'No' if the customer is not eligible for the cheque issue facility. To make cheque facility available to the customer change 'NO' to Null.Validation Rules- User can only input 'NO' or Null. Value 'YES' is updated by the system.
      hardShip:
        type: string
        description: This field if used to denote if the customer is in hardship. Accept Y or N.
      customerLiability:
        type: string
        description: 'Indicates the Customer consolidation number for credit grouping purposes, within the same branch/country. This field allows Customer exposure to be consolidated at the branch or country level when analysing the risk by the LIMIT Application. If entered it must be a valid Customer code or Mnemonic. Note - This is a no change field. Any change must be done using theLIMIT.CHANGE application.Validation Rules- 1-10 numeric character Customer Number or 3-10 type MNE (uppercase alpha or numeric, or ''.'') character Customer Mnemonic. (Optional input. Default Value is = None.) The customer number entered here must not be linked to another liability.'
      domicle:
        type: string
        description: 'Indicates country of domicile. If input, must exist on COUNTRY table.'
      confidentialText:
        type: string
        description: 'There are occasions where for the sake of client confidentiality that the client name is not used in advices or payment instructions generated by the bank. Typically a phrase such as ''One of our Clients'' would be used instead of the client name. This field controls the generation of the standard text in the &amp;#145;Ordering Customer&amp;#146; fields of the SWIFT messages, allowing the text to be in the language of the receiving bank. The standard text is defined in the ORD record in DE.TRANSLATION. To utilise this the conversion should be set to &amp;#145;CUS*TEXT*ORD&amp;#146; in the relevant DE.FORMAT.SWIFT record.Validation Rules- Input is either YES or NO Yes - will try to insert the standard text in the ordering customer field of the SWIFT message provided the system has been set correctly. If unsuccessful then the customer text will be used.'
      internetBanking:
        type: string
        description: 'If field is set to YES, then Internet Banking service will be enabled for the customer.'
      mobileBanking:
        type: string
        description: Indicates whether is Customer is subscribed to the mobile banking service or not.
      contactDate:
        type: string
        format: date
        description: Specifies the date that first contact was made with the Customer.Validation Rules- 1-9 type D (Date format in range 1950 - 2049) numeric characters. (Optional Input. No default value.) This field is for information only. It must be a valid date which is less than or equal to today.
      introducer:
        type: string
        description: Identifies the name of the person who introduced the Customer to the bank. This field is for information only and must not contain more than 35 characters.Validation Rules- 1-35 type A (alphanumeric) characters. (Optional input. No default value.)
      kycRelationship:
        type: string
        description: 'Indicates the relationship this customer is being held in. If input, must exist on CR.RELATIONSHIP table.'
      sourceOfKycVerification:
        type: string
        description: Specifies the Agency/Organisation which has verified the customer�s KYC norms. Dropdown Values. Not Mandatory.
      verifyingIndividual:
        type: string
        description: 'Specifies the name of the individual belonging to the Agency/Organisation which had conducted the customer�s KYC Verification. Dropdown, Not Mandatory.'
      kycComplete:
        type: string
        description: Know Your Customer is the due diligence and bank regulation that institutions must perform to identify their clients and ascertain relevant information pertinent to doing financial business with them. This field is for information only and contains YES or NULL. If set to YES then the information related to the customer has been collected and verified.
      lastKycReviewDate:
        type: string
        format: date
        description: Date customer KYC information was last reviewed.
      autoNextKycRev:
        type: string
        description: Date system has calculated customer should next be reviewed.
      manualNextKycRev:
        type: string
        description: Manual specification of next review date.
      lastSuitReviewDate:
        type: string
        format: date
        description: Date customer Suitability information was last reviewed.
      AutoNextSuitRevDate:
        type: string
        format: date
        description: Date system has calculated customer suitability should next be reviewed.
      ManualNextSuitRevDate:
        type: string
        format: date
        description: Manual specification of next suitability review date.
      amlCheck:
        type: string
        description: 'Field is used to describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities.It can have YES, SENT or NULL values. Depending on these values the AML.RESULT field will get updated.'
      amlResult:
        type: string
        description: 'If the value in AML.CHECK is NULL, then this field will be NULL. If the value in AML.CHECK is SENT, then the value in this field will be RESULT.AWAITED. And if the value in AML.CHECK is YES, then the value in this field will be either POSITIVE or NEGATIVE.'
      lastAmlResultDate:
        type: string
        format: date
        description: 'This field is the date field, when the last Anti Money Laundering result is performed.'
      calcRiskClass:
        type: string
        description: 'Personal Risk Class (calculated). If input, must exist on RISK.CLASS table.'
      manualRiskClass:
        type: string
        description: 'Personal Risk Class (manual override). If input, must exist on RISK.CLASS table.'
      sourceOfWealth:
        type: string
        description: |-
          Refers to the origin of the entire body of wealth (i.e. total assets) of the client.
          This information that should be obtained should given an indication as to the volume of wealth the client would reasonably be expected to have, and provided a picture of how it was acquired.

          Possible values:
          employmentIncome
          investmentIncome
          businessIncome
          oneOffPayment
          saleOfAssets
          windfall
      overrideReason:
        type: string
        description: 'Reason for changing the customer''s risk class from the calculated risk class. Mandatory, if CALC.RISK.CLASS is not the same as MANUAL.RISK.CLASS.'
      recordStatus:
        type: string
        description: |-
          Indicates the current status of the record.Validation Rules-No input fieldSystem generated.
          Example- INAU
      currNo:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
          Validation Rules-No input fieldSystem generated.
          Example- 1
      authoriser:
        type: string
        description: |-
          The user that authorised the record.Where a record has been modified multiple times (i.e the CURR.NO field is greater than 1) only the last authoriser is shown. 
          Validation Rules-No input fieldSystem generated.
      companyCode:
        type: string
        description: |-
          The company code that the record belongs to. 
          Validation Rules-No input fieldSystem generated.
          Example- AU0010001
      departmentCode:
        type: string
        description: |-
          The department code of the person that last modified the record. 
          Validation Rules-No input fieldSystem generated. 
          Example- 01
      auditorCode:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the audit information at which the function was used. 
          Validation Rules-No input fieldSystem generated.
      auditDateTime:
        type: string
        format: date
        description: |-
          Timestamp of the issue that is logged.
          17 characters Date Time format.
          It need to be displayed as DD MMM YYYY HH-MM-SS.sss.
          Example- 12 JAN 2015 12-34-25.123
          The value is not editable by the user.
  createCorporateCustomerResponse:
    properties:
      header:
        $ref: '#/definitions/ScreenHeader'
      body:
        $ref: '#/definitions/createCorporateCustomerResponseBody'
    description: createCorporateCustomerResponse
  createCorporateCustomerResponseBody:
    type: object
    properties:
      customerRatings:
        type: array
        description: Field identifies the rating of the customer.It is linked to EB.RATING table and must have an existing code on EB.RATING table.
        items:
          type: object
          properties:
            customerRating:
              type: string
              description: Field identifies the rating of the customer.It is linked to EB.RATING table and must have an existing code on EB.RATING table.
      address:
        type: array
        items:
          type: object
          properties:
            addressType:
              type: string
              description: 'This is field is used to select the Address type. Drop box. Options are POSTAL, Primary Residence / Registered Business and Blank. Optional Field.'
            addressLine_:
              type: string
              description: 'Address of the customer will be recorded here, based on Address type'
            locality:
              type: string
              description: This field mentions the Locality in which the customer has bought the new house.
            state:
              type: string
              description: This field mentions the State in which the customer has bought the new house.
            postCode:
              type: string
              description: The postcode of the new house purchased by the customer will be recorded here
            country:
              type: string
              description: This field mentions the Country in which the customer has bought the new house.
            dpID:
              type: string
              description: This field contains the Australia Post DPID returned from QAS after verifying an address. No input field at version level.
            addressFormatted:
              type: string
              description: This field captures the formatted Address response from QAS. Drop box Field. No input field at version level.
            addressValidated:
              type: string
              format: date
              description: This field denotes if the address if validated or not.
            addressDate:
              type: string
              format: date
              description: This field displays the date on which the QAS verification was done by the Address Interface. Standard Date Format. No input field at version level.
            addressReferenceId:
              type: string
              description: 'This field will store the Address Reference ID associated with one/multiple address returned by ESB (SearchAddress service). Upon selecting a closely matched address from the ADD.FORMATTED dropdown list, using the Address Reference ID an interface call (GetAddress service) is made which will return data for fields from ADD.LINE.1 to ADD.DP.ID.'
      preferredContactMethod:
        type: array
        items:
          type: object
          properties:
            channel:
              type: string
              description: 'This field is used to describe the communication channel of the customer. Dropdown. Optional Field Multi-value field along with ADDRESS.GROUP and ADDRESS.STATUS fields Options are POST, EMAIL, SMS, PHONE or FAX'
            addressGroup:
              type: string
              description: 'This field is used to select the Address Group for a particular Channel. Dropdown field. Optional Field. Options are ''Primary Residence / Registered Business'' or ''Postal'' when the Channel Select is ''Postal''. Or if the Channel Select is SMS/Email/PHONE the options are ''Primary'', ''Secondary'' or ''Office''.'
            addressStatus:
              type: string
              description: This field is used to select if the respective address is Undeliverable or not.Dropdown field. Optional. Options are Blank or 'Undeliverable'
      contactChannel:
        type: array
        description: Specifies the channel for communication between customer and bank Different types channels has been described below- Channel Description BRANCH When the customer visits the bank CALLCENTER Marketed through call center EMAIL Campaigned through email IM Campaigned through instant messenger INTERNET Communicated through internet NONE No channel used PERSONAL By meeting the customer personally POST Launched by mail service SKYPE Instant messenger service SMS By Short messaging service OTHER Channel not mentioned above Validation Rules- Input should have an entry on EB.LOOKUP table
        items:
          type: object
          properties:
            phone:
              type: string
              description: This field can contain phone number of the customer.
            sms:
              type: string
              description: This field can contain mobile number of the customer.
            email:
              type: string
              description: This field can contain e-mail addresses of the customer.
            addressLocation:
              type: string
              description: 'Address of the customer will be recorded here, based on Address type'
      fax:
        type: array
        description: This field can contain fax number of the customer.
        items:
          type: object
          properties:
            fax:
              type: string
              description: This field can contain fax number of the customer.
      idDocument:
        type: array
        items:
          type: object
          properties:
            legalId:
              type: string
              description: 'Part of the LEGAL multi-value set. Specifies any legal identification of the Customer. This field is for information only and specifies, for example, passport number, identity card number, PIN number etc.Validation Rules- 1-20 type A (alphanumeric) characters. (Optional input. No default value.)'
              enum:
                - Specifies any legal identification type
            legalDocumentName:
              type: string
              description: Part of the LEGAL multi-value set. Valdiated against EB.LOOKUP table CUS.LEGAL.DOC.NAME.
              enum:
                - Specifies the Legal Document name
            nameOnId:
              type: string
              description: 'Part of the LEGAL multi-value set. To support passports, enabling a holders name to be stored.'
              enum:
                - Specifies any legal identification of the Customer
            issueAuthority:
              type: string
              description: Part of the LEGAL multi-value set. Validated against EB.LOOKUP table CUS.LEGAL.ISS.AUTH.
              enum:
                - Specifies legal issuing authority
            issueDate:
              type: string
              format: date
              description: Defines the date of issue of cheques.Validation Rules-8 numeric characters.Standard date field.Optional Input (If not entered defaults to TODAY).No-change field.
            expiryDate:
              type: string
              format: date
              description: 'Part of the LEGAL multi-value set. Not mandatory, but if input must be greater than TODAY and greater than LEGAL.ISS.DATE.'
      relation:
        type: array
        description: This field is used to enumerate the customers marketing delivery preferences.Options are Marketing and Email Marketing
        items:
          type: object
          properties:
            relationCode:
              type: string
              description: Identifies the inter-relationship between Customer records and enables a link to be formed for the purpose of evaluating the overall Customer position. Input must be a valid Relation code and the reverse relationship will be shown automatically on the REVERS.REL.CODE when it has been defined in the RELATION table. An on-line display (internal file 'RELATION.CUSTOMER') also allows the User to check all the relationships of a Customer with other Customers within the same database. The relationship entered is that of the customer being created to that of the Customer defined in REL.CUSTOMER.Validation Rules- 1-3 numeric characters. Multivalue field associated with REL.CUSTOMER and REVERS.REL.CODE. (Optional input. No default value.)
              enum:
                - Identified relationship code
            relationCustomer:
              type: string
              description: 'Identifies the Customer Code or the Mnemonic of the Related Customer.Validation Rules- 1-10 numeric character Customer Number or 3-10 type SS (uppercase alpha or numeric, first character alpha) character Customer Mnemonic. Multivalue field associated with RELATION.CODE and REVERS.REL.CODE. (Mandatory input if corresponding RELATION.CODE is entered, otherwise not allowed.) Input must be a valid Customer code or mnemonic. The relationship between 2 customers may only be entered in one of the Customer records, not both.'
              enum:
                - Specifies inter-relationship Customer
            reverseRelation:
              type: string
              description: Identifies the Relationship code for the Related Customer. This field is generated automatically by the System according to the values defined in the RELATION table. No access to this field will be permitted to the User.Validation Rules- 1-3 numeric character Relation code. Multivalue field associated with RELATION.CODE and REL.CUSTOMER. This is a NOINPUT field.
              enum:
                - Relationship code for the related Customer
            role:
              type: string
              description: 'Part of the ROLE sub-value set. Role customer plays with this customer. Must exist on EB.ROLE table. Not a mandatory field, only if this customer has a role with the customer of the record.'
            moreRoleInfo:
              type: string
              description: 'Part of the ROLE sub-value set. When ROLE requires more information (see ROLE table), this field becomes mandatory. Otherwise it is optional.'
            roleNotes:
              type: string
              description: Part of the ROLE sub-value set. Additional notes that can be entered about this role.
            deliveryOptions:
              type: array
              items:
                type: object
                properties:
                  relationDeliveryOption:
                    type: string
                    description: 'Part of the ROLE sub-value set. Used on selected CUSTOMER records that are setup to be ''container'' type records which group together a set of clients, such as a joint customer relationship. Each of the clients has their own record which can be linked to the container. This field is used to specify what delivery addressing is to be used for the link customer. Only the first delivery option is used in a sub valued role list. There are three options- 1. - P.n (Use full name &amp; address of linked customer as the container PRINT.n address.) 2. - A.n (Only use address of linked customer as the container PRINT.n address. .Name &amp; short.name of the container is kept) 3.- C (Copy option - sends a copy of delivery messages using the MDR.CUSTOMER option on DE.PRODUCT). When the container customer is authorised the system creates the DE.ADDRESS records as indicated and where required will also create a DE.PRODUCT record.Validation Rules- Only one primary (PRINT.1) address can be entered, either as A.1 or P.1 If no primary address is entered the here the standard PRINT.1 address for this customer record will be created. Input only allowed if REL.CUSTOMER is present Only delivery options created in the EB.LOOKUP CUS.REL.DELIV.OPT table will be accepted.'
      otherFinDetails:
        type: array
        items:
          type: object
          properties:
            otherFinRelation:
              type: string
              description: Defines the connection to any other financial relationship if the customer hasValidation Rules-- 1-35 type (alphabet characters). (Optional input. No default value.)
            otherFinInstitution:
              type: string
              description: Defines the connection to any other financial institution if the customer hasValidation Rules-- 1-35 type (alphabetical characters). (Optional input. No default value.)
      furtherDetails:
        type: string
        description: Any relevant further details about customer.
      otherNationalityList:
        type: array
        items:
          type: object
          properties:
            otherNationality:
              type: string
              description: 'The customer has to indicate a primary nationality, these ''THER.NATIONALITY'' fields are for information purposes only. If input, must exist on COUNTRY table.'
      deliveryPreferences:
        type: array
        items:
          type: object
          properties:
            deliveryOption:
              type: string
              description: This field is used to enumerate the customers marketing delivery preferences.Options are Marketing and Email Marketing
            deliveryPref:
              type: string
              description: This field is used to select preference for the respective Delivery Option.Options are Opt-Out or blank.
      riskDetails:
        type: array
        items:
          type: object
          properties:
            riskAssetType:
              type: string
              description: Multi-value set indicating a customer's expertise in use with different asset classes. If the SC product is installed then the input must exist on ASSET.TYPE otherwise anything can be entered here.
            riskLevel:
              type: string
              description: Risk level. Values from 0 to 99 are valid.
            riskTolerance:
              type: string
              description: Indicates the tolerance in this risk class. Values from 0 to 99 are valid.
            riskFromDate:
              type: string
              format: date
              description: Date from which customer builds expertise in this risk class.
      overrideList:
        type: array
        items:
          type: object
          properties:
            override:
              type: string
              description: |-
                Records the overrides generated during processing of an activity. All the overrides generated in the property class templates (AA.ARR.XXXX, where XXXX - Property Class) for the Activity input are updated in this field.
                Standard override field, Multi-valued.
      inputterList:
        type: array
        items:
          type: object
          properties:
            inputter:
              type: string
              description: The users that have modified this record.Validation Rules-No input fieldSystem generated.
      dateTimeList:
        type: array
        items:
          type: object
          properties:
            dateTime:
              type: string
              format: date
              description: |-
                This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
                Validation Rules-No input fieldSystem generated.
      fullName:
        type: string
        description: This field is used to capture the full Name of the Customer.
      fullName__:
        type: string
        description: 'Continuation of NAME LINE 1. This field together with the previous and next two fields form the address for the Customer. The SWIFT standard of 4 lines of 35 characters each has been chosen by T24. Only in the fields NAME 1 and STREET is input mandatory. The input to field STREET is non mandatory if the field STREET.NON.MANDAT is defined as ''Y'', in the CUSTOMER.DEFAULT record whose ID is equal to the value of the SECTOR field. Where no other additional address has been defined in the DELIVERY file, the address defined in these four fields will be used on any correspondence sent to the Customer. After authorisation of the Customer record, this address will be automatically created in the DELIVERY file as the Address No. 1 and further maintenance of the Customer Address No. 1 will be performed directly in the Customer file. Any additional address to be opened or to be maintained will be done by means of the DELIVERY file.Validation Rules- 1-35 type S (uppercase alpha or numeric) characters. Special Characters ''&amp;'' and ''/'' are also allowed, with the exception that ''/'' cannot be entered as first character. If NAME.2 is reported in SWIFT Messages, the character ''&amp;'' would be replaced with spaces. (Optional input. No default value.)'
      organisationName:
        type: string
        description: 'This field is used to capture the Legal name or Trading Name of a company/organisation/Trust.3 - 200 Alphanumeric characters, Mandatory Field'
      mnemonic:
        type: string
        description: 'Specifies an alternative easy means of referencing the Customer. For countries where the Customer name should not be recorded (e.g. numbered Customers/accounts) any value can be entered in this field with the exception that the first character must be alpha. Like the ID, the Mnemonic must be unique across T24. Care should be taken when assigning Mnemonics to Customers and some rules should ideally be defined across the bank to allow easy identification of the Customers by their Mnemonics. Note - For each Customer, the System will automatically update the internal file ''MNEMONIC.CUSTOMER'' which allows the User to displaythe Customers in Mnemonic sequence instead of Customer number.Validation Rules- 3-10 type MNE (Uppercase alpha or numeric, first character alpha, or ''.'') characters. (Mandatory input)'
        enum:
          - Specifies an easy means of referencing Customer
      shortName:
        type: string
        description: 'Identifies the name of the Customer in a more descriptive form, and will be used for on-line enrichments in any field where a Customer ID or Mnemonic has been input. For countries where the Customer name should not be recorded (e.g. numbered Customers/ Accounts) any valid SWIFT character can be entered in this field with the exception that all characters cannot be spaces. A clear and unique identification of the Customer must be entered in this field. When entering or displaying data where a Customer ID or Mnemonic is involved, the content of this field will be used as the enrichment of the Customer number/Mnemonic.Validation Rules- 3-35 type S (uppercase alpha or numeric) characters. Special Characters ''&amp;'' and ''/'' are also allowed, with the exception that ''/'' cannot be entered as first character. If SHORT.NAME is reported in SWIFT Messages, the character ''&amp;'' would be replaced with spaces. (Mandatory input)'
        enum:
          - Short name of the customer
      accountOfficer:
        type: string
        description: 'Identifies the main Account Officer responsible for the Customer. his code will be defaulted on all Customer transactions within T24 except if it is overriden by another Account Officer code at the transaction or product level. The existence of the Account Officer code on every Customer transaction will allow generation of M.I.S. information at the Account Officer level.Validation Rules- 1-4 numeric character Account Officer code. (Mandatory input if no default value has been specified on the Customer DEFAULT Table for the corresponding sector code or the VERSION File [Ref- UTILITIES]. Otherwise Input is optional and will override default value.) It must be a valid code on the DEPT.ACCT.OFFICER table (Ref- GENERAL TABLES).'
        enum:
          - Account Officer responsible for the Customer
      secondOfficer:
        type: string
        description: 'Identifies the other Account Officer(s) responsible for the Customer. Only codes included in the DEPT.ACCT.OFFICER table (Ref- GENERAL TABLES) are allowed. The definition of a second Account Officer should serve the purpose of indicating who will take care of the Customer Relationship when the main ACCOUNT.OFFICER is on holiday, sick, or absent for any other reason.Validation Rules- 1-4 numeric character Account Officer code. Multivalue field. (Optional input. No default value.)'
      sector:
        type: string
        description: Identifies the Sector code relating to the Customer. If the Sector code is defined on the Customer DEFAULT table the associated default values will be retrieved and added to a new Customer record during the Validation process except if some specific values have been input by the User.Validation Rules- 1-4 numeric character Sector code. (Mandatory input) It must be a valid code on the SECTOR table. The field must not be blank.
        enum:
          - Sector code relating to the Customer
      industry:
        type: string
        description: 'Identifies the Industry in which the Customer is trading. Each User can define their own industry codes according to the use they want to make of them. Production of central bank reports classified by Industry codes or the monitoring of the overall credit exposure by Industry type are typical examples of uses of this code.Validation Rules- 1-4 numeric character Industry code. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION File [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the INDUSTRY code table.'
        enum:
          - Industry in which Customer is trading
      segment:
        type: string
        description: 'Specifies how the Customer is considered by the bank and how he fits in with the Account Officer''s overall marketing strategy. Examples of this field are- ''Prime Customer'', ''No Potential'', etc. but it must be a valid code on the TARGET code table. The values of the field should be defined according to the bank''s overall marketing strategy.Validation Rules- 1-4 numeric characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code, or the VERSION File [Ref- UTILITIES]. Otherwise input is optional and will override default value.)'
        enum:
          - Specifies how the cus is considered by the bank
      customerstatus:
        type: string
        description: 'Identifies the Status of the Customer. The values applicable to this field can be defined by each bank/branch according to the their own practice.Validation Rules- 1-4 numeric characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the Customer STATUS table.'
        enum:
          - Identifies the Status of the Customer
      nationality:
        type: string
        description: 'Identifies the Nationality of the Customer.Validation Rules- 2 type SSS (uppercase alpha) Country code characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector Code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the COUNTRY table (Ref- GENERAL TABLES).'
        enum:
          - Nationality of the Customer
      residence:
        type: string
        description: 'Identifies the Country of Residence of the Customer. Any change in the value of this field will prompt a message reminding the User that the Town Country defined in line 4 of the SWIFT address should also be changed. If the User, for any reason, does not want to change the content of line 4 of the SWIFT address, he will be forced to confirm it by entering an Override.Validation Rules- 2 type SSS (uppercase alpha) Country code characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the COUNTRY table (Ref- GENERAL TABLES).'
        enum:
          - Country of Residence of the Customer
      customertype:
        type: string
        description: 'Indicates the type of customer, and is dependant on the CR (Customer Relationship Management) module being installed. The values of PROSPECT, EXTERNAL.USER, ACTIVE or null (the equivalent of ACTIVE) are allowed. If PROSPECT is entered then if the customer does not form a business relationship with the bank, such as opening an account, limit or contract then after a period of time defined on the CUST.RETENTION field on COMPANY the customer record and all associated data will be removed from the system. If the customer forms a business relationship with the bank then the wll be activated and after this point the customer record cannot be deleted. If opted for External.user then the customer can only be used as a signatory in applications EB.SIGNATORY.GROUP and EB.EXTERNAL.USER and then in field named SIGNATORY if used in any other applications, and restricted for use in any other fields in all remaining applications.'
        enum:
          - Indicates Customer's Type
      abn:
        type: string
        description: Register Number used by Australian Businesses for their transactions. 11 digit numeric.
      acn:
        type: string
        description: Register Number used by Australian Corporates for their transactions. 9 digit numeric.
      customerStartDate:
        type: string
        format: date
        description: Contains the date on which individual/corporate becomes the customer of the bankValidation Rules-- Standard date format (YYYYMMDD). (Optional input. No default value.)
      taxFileNumber:
        type: string
        description: Standard Free Text fieldOnly 1 field required for both TFN and Exempt code with no encryption. This field should be a multi purpose field with a dropdown enquiry but the user can still key in any value without it being validated
      exemptionCodeDesc:
        type: string
        description: The field displays the enrichment for Exemption code.
      taxIdentificationNumber:
        type: string
        description: This field identifies the number used for Tax purposes in Australia.
      countryOfResidenceOfTaxPurposes:
        type: string
        description: This field displays the country of tax residence
      dateOfIncorporation:
        type: string
        format: date
        description: Specifies the Customer's date of birth or the date on which the Company was registered. Any birth or incorporation date which is before 1950 should be entered yyyymmdd.Validation Rules- Standard date format - type DD (Date format in range 1000-2049). (Optional input. No default value.) It must be a valid date which is less than or equal to today.
      issueCheques:
        type: string
        description: This field denotes whether the customer is eligible for cheque issue facility and to know first cheque book issued or not. System automatically changes the value to 'YES' once first cheque book is issued to an account for the customer. Input 'No' if the customer is not eligible for the cheque issue facility. To make cheque facility available to the customer change 'NO' to Null.Validation Rules- User can only input 'NO' or Null. Value 'YES' is updated by the system.
      hardShip:
        type: string
        description: This field if used to denote if the customer is in hardship. Accept Y or N.
      customerLiability:
        type: string
        description: 'Indicates the Customer consolidation number for credit grouping purposes, within the same branch/country. This field allows Customer exposure to be consolidated at the branch or country level when analysing the risk by the LIMIT Application. If entered it must be a valid Customer code or Mnemonic. Note - This is a no change field. Any change must be done using theLIMIT.CHANGE application.Validation Rules- 1-10 numeric character Customer Number or 3-10 type MNE (uppercase alpha or numeric, or ''.'') character Customer Mnemonic. (Optional input. Default Value is = None.) The customer number entered here must not be linked to another liability.'
      domicle:
        type: string
        description: 'Indicates country of domicile. If input, must exist on COUNTRY table.'
      confidentialText:
        type: string
        description: 'There are occasions where for the sake of client confidentiality that the client name is not used in advices or payment instructions generated by the bank. Typically a phrase such as ''One of our Clients'' would be used instead of the client name. This field controls the generation of the standard text in the &amp;#145;Ordering Customer&amp;#146; fields of the SWIFT messages, allowing the text to be in the language of the receiving bank. The standard text is defined in the ORD record in DE.TRANSLATION. To utilise this the conversion should be set to &amp;#145;CUS*TEXT*ORD&amp;#146; in the relevant DE.FORMAT.SWIFT record.Validation Rules- Input is either YES or NO Yes - will try to insert the standard text in the ordering customer field of the SWIFT message provided the system has been set correctly. If unsuccessful then the customer text will be used.'
      internetBanking:
        type: string
        description: 'If field is set to YES, then Internet Banking service will be enabled for the customer.'
      mobileBanking:
        type: string
        description: Indicates whether is Customer is subscribed to the mobile banking service or not.
      contactDate:
        type: string
        format: date
        description: Specifies the date that first contact was made with the Customer.Validation Rules- 1-9 type D (Date format in range 1950 - 2049) numeric characters. (Optional Input. No default value.) This field is for information only. It must be a valid date which is less than or equal to today.
      introducer:
        type: string
        description: Identifies the name of the person who introduced the Customer to the bank. This field is for information only and must not contain more than 35 characters.Validation Rules- 1-35 type A (alphanumeric) characters. (Optional input. No default value.)
      kycRelationship:
        type: string
        description: 'Indicates the relationship this customer is being held in. If input, must exist on CR.RELATIONSHIP table.'
      sourceOfKycVerification:
        type: string
        description: Specifies the Agency/Organisation which has verified the customer�s KYC norms. Dropdown Values. Not Mandatory.
      verifyingIndividual:
        type: string
        description: 'Specifies the name of the individual belonging to the Agency/Organisation which had conducted the customer�s KYC Verification. Dropdown, Not Mandatory.'
      kycComplete:
        type: string
        description: Know Your Customer is the due diligence and bank regulation that institutions must perform to identify their clients and ascertain relevant information pertinent to doing financial business with them. This field is for information only and contains YES or NULL. If set to YES then the information related to the customer has been collected and verified.
      lastKycReviewDate:
        type: string
        format: date
        description: Date customer KYC information was last reviewed.
      autoNextKycRev:
        type: string
        description: Date system has calculated customer should next be reviewed.
      manualNextKycRev:
        type: string
        description: Manual specification of next review date.
      lastSuitReviewDate:
        type: string
        format: date
        description: Date customer Suitability information was last reviewed.
      AutoNextSuitRevDate:
        type: string
        format: date
        description: Date system has calculated customer suitability should next be reviewed.
      ManualNextSuitRevDate:
        type: string
        format: date
        description: Manual specification of next suitability review date.
      amlCheck:
        type: string
        description: 'Field is used to describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities.It can have YES, SENT or NULL values. Depending on these values the AML.RESULT field will get updated.'
      amlResult:
        type: string
        description: 'If the value in AML.CHECK is NULL, then this field will be NULL. If the value in AML.CHECK is SENT, then the value in this field will be RESULT.AWAITED. And if the value in AML.CHECK is YES, then the value in this field will be either POSITIVE or NEGATIVE.'
      lastAmlResultDate:
        type: string
        format: date
        description: 'This field is the date field, when the last Anti Money Laundering result is performed.'
      calcRiskClass:
        type: string
        description: 'Personal Risk Class (calculated). If input, must exist on RISK.CLASS table.'
      manualRiskClass:
        type: string
        description: 'Personal Risk Class (manual override). If input, must exist on RISK.CLASS table.'
      sourceOfWealth:
        type: string
        description: |-
          Refers to the origin of the entire body of wealth (i.e. total assets) of the client.
          This information that should be obtained should given an indication as to the volume of wealth the client would reasonably be expected to have, and provided a picture of how it was acquired.

          Possible values:
          employmentIncome
          investmentIncome
          businessIncome
          oneOffPayment
          saleOfAssets
          windfall
      overrideReason:
        type: string
        description: 'Reason for changing the customer''s risk class from the calculated risk class. Mandatory, if CALC.RISK.CLASS is not the same as MANUAL.RISK.CLASS.'
      recordStatus:
        type: string
        description: |-
          Indicates the current status of the record.Validation Rules-No input fieldSystem generated.
          Example- INAU
      currNo:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
          Validation Rules-No input fieldSystem generated.
          Example- 1
      authoriser:
        type: string
        description: |-
          The user that authorised the record.Where a record has been modified multiple times (i.e the CURR.NO field is greater than 1) only the last authoriser is shown. 
          Validation Rules-No input fieldSystem generated.
      companyCode:
        type: string
        description: |-
          The company code that the record belongs to. 
          Validation Rules-No input fieldSystem generated.
          Example- AU0010001
      departmentCode:
        type: string
        description: |-
          The department code of the person that last modified the record. 
          Validation Rules-No input fieldSystem generated. 
          Example- 01
      auditorCode:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the audit information at which the function was used. 
          Validation Rules-No input fieldSystem generated.
      auditDateTime:
        type: string
        format: date
        description: |-
          Timestamp of the issue that is logged.
          17 characters Date Time format.
          It need to be displayed as DD MMM YYYY HH-MM-SS.sss.
          Example- 12 JAN 2015 12-34-25.123
          The value is not editable by the user.
  createCorporateCustomerErrorResponse:
    properties:
      header:
        $ref: '#/definitions/ErrorHeader'
      error:
        $ref: '#/definitions/createCorporateCustomerErrorResponseBody'
    description: createCorporateCustomerErrorResponse
  createCorporateCustomerErrorResponseBody:
    type: object
    properties:
      errorDetails:
        type: array
        items:
          type: object
          properties:
            fieldName:
              type: string
            code:
              type: string
            message:
              type: string
      type:
        type: string
  updateCorporateCustomer:
    properties:
      header:
        $ref: '#/definitions/PayloadHeader'
      body:
        $ref: '#/definitions/updateCorporateCustomerBody'
    description: updateCorporateCustomer
  updateCorporateCustomerBody:
    type: object
    properties:
      customerRatings:
        type: array
        description: Field identifies the rating of the customer.It is linked to EB.RATING table and must have an existing code on EB.RATING table.
        items:
          type: object
          properties:
            customerRating:
              type: string
              description: Field identifies the rating of the customer.It is linked to EB.RATING table and must have an existing code on EB.RATING table.
      address:
        type: array
        items:
          type: object
          properties:
            addressType:
              type: string
              description: 'This is field is used to select the Address type. Drop box. Options are POSTAL, Primary Residence / Registered Business and Blank. Optional Field.'
            addressLine_:
              type: string
              description: 'Address of the customer will be recorded here, based on Address type'
            locality:
              type: string
              description: This field mentions the Locality in which the customer has bought the new house.
            state:
              type: string
              description: This field mentions the State in which the customer has bought the new house.
            postCode:
              type: string
              description: The postcode of the new house purchased by the customer will be recorded here
            country:
              type: string
              description: This field mentions the Country in which the customer has bought the new house.
            dpID:
              type: string
              description: This field contains the Australia Post DPID returned from QAS after verifying an address. No input field at version level.
            addressFormatted:
              type: string
              description: This field captures the formatted Address response from QAS. Drop box Field. No input field at version level.
            addressValidated:
              type: string
              format: date
              description: This field denotes if the address if validated or not.
            addressDate:
              type: string
              format: date
              description: This field displays the date on which the QAS verification was done by the Address Interface. Standard Date Format. No input field at version level.
            addressReferenceId:
              type: string
              description: 'This field will store the Address Reference ID associated with one/multiple address returned by ESB (SearchAddress service). Upon selecting a closely matched address from the ADD.FORMATTED dropdown list, using the Address Reference ID an interface call (GetAddress service) is made which will return data for fields from ADD.LINE.1 to ADD.DP.ID.'
      preferredContactMethod:
        type: array
        items:
          type: object
          properties:
            channel:
              type: string
              description: 'This field is used to describe the communication channel of the customer. Dropdown. Optional Field Multi-value field along with ADDRESS.GROUP and ADDRESS.STATUS fields Options are POST, EMAIL, SMS, PHONE or FAX'
            addressGroup:
              type: string
              description: 'This field is used to select the Address Group for a particular Channel. Dropdown field. Optional Field. Options are ''Primary Residence / Registered Business'' or ''Postal'' when the Channel Select is ''Postal''. Or if the Channel Select is SMS/Email/PHONE the options are ''Primary'', ''Secondary'' or ''Office''.'
            addressStatus:
              type: string
              description: This field is used to select if the respective address is Undeliverable or not.Dropdown field. Optional. Options are Blank or 'Undeliverable'
      contactChannel:
        type: array
        description: Specifies the channel for communication between customer and bank Different types channels has been described below- Channel Description BRANCH When the customer visits the bank CALLCENTER Marketed through call center EMAIL Campaigned through email IM Campaigned through instant messenger INTERNET Communicated through internet NONE No channel used PERSONAL By meeting the customer personally POST Launched by mail service SKYPE Instant messenger service SMS By Short messaging service OTHER Channel not mentioned above Validation Rules- Input should have an entry on EB.LOOKUP table
        items:
          type: object
          properties:
            phone:
              type: string
              description: This field can contain phone number of the customer.
            sms:
              type: string
              description: This field can contain mobile number of the customer.
            email:
              type: string
              description: This field can contain e-mail addresses of the customer.
            addressLocation:
              type: string
              description: 'Address of the customer will be recorded here, based on Address type'
      fax:
        type: array
        description: This field can contain fax number of the customer.
        items:
          type: object
          properties:
            fax:
              type: string
              description: This field can contain fax number of the customer.
      idDocument:
        type: array
        items:
          type: object
          properties:
            legalId:
              type: string
              description: 'Part of the LEGAL multi-value set. Specifies any legal identification of the Customer. This field is for information only and specifies, for example, passport number, identity card number, PIN number etc.Validation Rules- 1-20 type A (alphanumeric) characters. (Optional input. No default value.)'
              enum:
                - Specifies any legal identification type
            legalDocumentName:
              type: string
              description: Part of the LEGAL multi-value set. Valdiated against EB.LOOKUP table CUS.LEGAL.DOC.NAME.
              enum:
                - Specifies the Legal Document name
            nameOnId:
              type: string
              description: 'Part of the LEGAL multi-value set. To support passports, enabling a holders name to be stored.'
              enum:
                - Specifies any legal identification of the Customer
            issueAuthority:
              type: string
              description: Part of the LEGAL multi-value set. Validated against EB.LOOKUP table CUS.LEGAL.ISS.AUTH.
              enum:
                - Specifies legal issuing authority
            issueDate:
              type: string
              format: date
              description: Defines the date of issue of cheques.Validation Rules-8 numeric characters.Standard date field.Optional Input (If not entered defaults to TODAY).No-change field.
            expiryDate:
              type: string
              format: date
              description: 'Part of the LEGAL multi-value set. Not mandatory, but if input must be greater than TODAY and greater than LEGAL.ISS.DATE.'
      relation:
        type: array
        description: This field is used to enumerate the customers marketing delivery preferences.Options are Marketing and Email Marketing
        items:
          type: object
          properties:
            relationCode:
              type: string
              description: Identifies the inter-relationship between Customer records and enables a link to be formed for the purpose of evaluating the overall Customer position. Input must be a valid Relation code and the reverse relationship will be shown automatically on the REVERS.REL.CODE when it has been defined in the RELATION table. An on-line display (internal file 'RELATION.CUSTOMER') also allows the User to check all the relationships of a Customer with other Customers within the same database. The relationship entered is that of the customer being created to that of the Customer defined in REL.CUSTOMER.Validation Rules- 1-3 numeric characters. Multivalue field associated with REL.CUSTOMER and REVERS.REL.CODE. (Optional input. No default value.)
              enum:
                - Identified relationship code
            relationCustomer:
              type: string
              description: 'Identifies the Customer Code or the Mnemonic of the Related Customer.Validation Rules- 1-10 numeric character Customer Number or 3-10 type SS (uppercase alpha or numeric, first character alpha) character Customer Mnemonic. Multivalue field associated with RELATION.CODE and REVERS.REL.CODE. (Mandatory input if corresponding RELATION.CODE is entered, otherwise not allowed.) Input must be a valid Customer code or mnemonic. The relationship between 2 customers may only be entered in one of the Customer records, not both.'
              enum:
                - Specifies inter-relationship Customer
            reverseRelation:
              type: string
              description: Identifies the Relationship code for the Related Customer. This field is generated automatically by the System according to the values defined in the RELATION table. No access to this field will be permitted to the User.Validation Rules- 1-3 numeric character Relation code. Multivalue field associated with RELATION.CODE and REL.CUSTOMER. This is a NOINPUT field.
              enum:
                - Relationship code for the related Customer
            role:
              type: string
              description: 'Part of the ROLE sub-value set. Role customer plays with this customer. Must exist on EB.ROLE table. Not a mandatory field, only if this customer has a role with the customer of the record.'
            moreRoleInfo:
              type: string
              description: 'Part of the ROLE sub-value set. When ROLE requires more information (see ROLE table), this field becomes mandatory. Otherwise it is optional.'
            roleNotes:
              type: string
              description: Part of the ROLE sub-value set. Additional notes that can be entered about this role.
            deliveryOptions:
              type: array
              items:
                type: object
                properties:
                  relationDeliveryOption:
                    type: string
                    description: 'Part of the ROLE sub-value set. Used on selected CUSTOMER records that are setup to be ''container'' type records which group together a set of clients, such as a joint customer relationship. Each of the clients has their own record which can be linked to the container. This field is used to specify what delivery addressing is to be used for the link customer. Only the first delivery option is used in a sub valued role list. There are three options- 1. - P.n (Use full name &amp; address of linked customer as the container PRINT.n address.) 2. - A.n (Only use address of linked customer as the container PRINT.n address. .Name &amp; short.name of the container is kept) 3.- C (Copy option - sends a copy of delivery messages using the MDR.CUSTOMER option on DE.PRODUCT). When the container customer is authorised the system creates the DE.ADDRESS records as indicated and where required will also create a DE.PRODUCT record.Validation Rules- Only one primary (PRINT.1) address can be entered, either as A.1 or P.1 If no primary address is entered the here the standard PRINT.1 address for this customer record will be created. Input only allowed if REL.CUSTOMER is present Only delivery options created in the EB.LOOKUP CUS.REL.DELIV.OPT table will be accepted.'
      otherFinDetails:
        type: array
        items:
          type: object
          properties:
            otherFinRelation:
              type: string
              description: Defines the connection to any other financial relationship if the customer hasValidation Rules-- 1-35 type (alphabet characters). (Optional input. No default value.)
            otherFinInstitution:
              type: string
              description: Defines the connection to any other financial institution if the customer hasValidation Rules-- 1-35 type (alphabetical characters). (Optional input. No default value.)
      furtherDetails:
        type: string
        description: Any relevant further details about customer.
      otherNationalityList:
        type: array
        items:
          type: object
          properties:
            otherNationality:
              type: string
              description: 'The customer has to indicate a primary nationality, these ''THER.NATIONALITY'' fields are for information purposes only. If input, must exist on COUNTRY table.'
      deliveryPreferences:
        type: array
        items:
          type: object
          properties:
            deliveryOption:
              type: string
              description: This field is used to enumerate the customers marketing delivery preferences.Options are Marketing and Email Marketing
            deliveryPref:
              type: string
              description: This field is used to select preference for the respective Delivery Option.Options are Opt-Out or blank.
      riskDetails:
        type: array
        items:
          type: object
          properties:
            riskAssetType:
              type: string
              description: Multi-value set indicating a customer's expertise in use with different asset classes. If the SC product is installed then the input must exist on ASSET.TYPE otherwise anything can be entered here.
            riskLevel:
              type: string
              description: Risk level. Values from 0 to 99 are valid.
            riskTolerance:
              type: string
              description: Indicates the tolerance in this risk class. Values from 0 to 99 are valid.
            riskFromDate:
              type: string
              format: date
              description: Date from which customer builds expertise in this risk class.
      overrideList:
        type: array
        items:
          type: object
          properties:
            override:
              type: string
              description: |-
                Records the overrides generated during processing of an activity. All the overrides generated in the property class templates (AA.ARR.XXXX, where XXXX - Property Class) for the Activity input are updated in this field.
                Standard override field, Multi-valued.
      inputterList:
        type: array
        items:
          type: object
          properties:
            inputter:
              type: string
              description: The users that have modified this record.Validation Rules-No input fieldSystem generated.
      dateTimeList:
        type: array
        items:
          type: object
          properties:
            dateTime:
              type: string
              format: date
              description: |-
                This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
                Validation Rules-No input fieldSystem generated.
      fullName:
        type: string
        description: This field is used to capture the full Name of the Customer.
      fullName__:
        type: string
        description: 'Continuation of NAME LINE 1. This field together with the previous and next two fields form the address for the Customer. The SWIFT standard of 4 lines of 35 characters each has been chosen by T24. Only in the fields NAME 1 and STREET is input mandatory. The input to field STREET is non mandatory if the field STREET.NON.MANDAT is defined as ''Y'', in the CUSTOMER.DEFAULT record whose ID is equal to the value of the SECTOR field. Where no other additional address has been defined in the DELIVERY file, the address defined in these four fields will be used on any correspondence sent to the Customer. After authorisation of the Customer record, this address will be automatically created in the DELIVERY file as the Address No. 1 and further maintenance of the Customer Address No. 1 will be performed directly in the Customer file. Any additional address to be opened or to be maintained will be done by means of the DELIVERY file.Validation Rules- 1-35 type S (uppercase alpha or numeric) characters. Special Characters ''&amp;'' and ''/'' are also allowed, with the exception that ''/'' cannot be entered as first character. If NAME.2 is reported in SWIFT Messages, the character ''&amp;'' would be replaced with spaces. (Optional input. No default value.)'
      organisationName:
        type: string
        description: 'This field is used to capture the Legal name or Trading Name of a company/organisation/Trust.3 - 200 Alphanumeric characters, Mandatory Field'
      mnemonic:
        type: string
        description: 'Specifies an alternative easy means of referencing the Customer. For countries where the Customer name should not be recorded (e.g. numbered Customers/accounts) any value can be entered in this field with the exception that the first character must be alpha. Like the ID, the Mnemonic must be unique across T24. Care should be taken when assigning Mnemonics to Customers and some rules should ideally be defined across the bank to allow easy identification of the Customers by their Mnemonics. Note - For each Customer, the System will automatically update the internal file ''MNEMONIC.CUSTOMER'' which allows the User to displaythe Customers in Mnemonic sequence instead of Customer number.Validation Rules- 3-10 type MNE (Uppercase alpha or numeric, first character alpha, or ''.'') characters. (Mandatory input)'
        enum:
          - Specifies an easy means of referencing Customer
      shortName:
        type: string
        description: 'Identifies the name of the Customer in a more descriptive form, and will be used for on-line enrichments in any field where a Customer ID or Mnemonic has been input. For countries where the Customer name should not be recorded (e.g. numbered Customers/ Accounts) any valid SWIFT character can be entered in this field with the exception that all characters cannot be spaces. A clear and unique identification of the Customer must be entered in this field. When entering or displaying data where a Customer ID or Mnemonic is involved, the content of this field will be used as the enrichment of the Customer number/Mnemonic.Validation Rules- 3-35 type S (uppercase alpha or numeric) characters. Special Characters ''&amp;'' and ''/'' are also allowed, with the exception that ''/'' cannot be entered as first character. If SHORT.NAME is reported in SWIFT Messages, the character ''&amp;'' would be replaced with spaces. (Mandatory input)'
        enum:
          - Short name of the customer
      accountOfficer:
        type: string
        description: 'Identifies the main Account Officer responsible for the Customer. his code will be defaulted on all Customer transactions within T24 except if it is overriden by another Account Officer code at the transaction or product level. The existence of the Account Officer code on every Customer transaction will allow generation of M.I.S. information at the Account Officer level.Validation Rules- 1-4 numeric character Account Officer code. (Mandatory input if no default value has been specified on the Customer DEFAULT Table for the corresponding sector code or the VERSION File [Ref- UTILITIES]. Otherwise Input is optional and will override default value.) It must be a valid code on the DEPT.ACCT.OFFICER table (Ref- GENERAL TABLES).'
        enum:
          - Account Officer responsible for the Customer
      secondOfficer:
        type: string
        description: 'Identifies the other Account Officer(s) responsible for the Customer. Only codes included in the DEPT.ACCT.OFFICER table (Ref- GENERAL TABLES) are allowed. The definition of a second Account Officer should serve the purpose of indicating who will take care of the Customer Relationship when the main ACCOUNT.OFFICER is on holiday, sick, or absent for any other reason.Validation Rules- 1-4 numeric character Account Officer code. Multivalue field. (Optional input. No default value.)'
      sector:
        type: string
        description: Identifies the Sector code relating to the Customer. If the Sector code is defined on the Customer DEFAULT table the associated default values will be retrieved and added to a new Customer record during the Validation process except if some specific values have been input by the User.Validation Rules- 1-4 numeric character Sector code. (Mandatory input) It must be a valid code on the SECTOR table. The field must not be blank.
        enum:
          - Sector code relating to the Customer
      industry:
        type: string
        description: 'Identifies the Industry in which the Customer is trading. Each User can define their own industry codes according to the use they want to make of them. Production of central bank reports classified by Industry codes or the monitoring of the overall credit exposure by Industry type are typical examples of uses of this code.Validation Rules- 1-4 numeric character Industry code. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION File [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the INDUSTRY code table.'
        enum:
          - Industry in which Customer is trading
      segment:
        type: string
        description: 'Specifies how the Customer is considered by the bank and how he fits in with the Account Officer''s overall marketing strategy. Examples of this field are- ''Prime Customer'', ''No Potential'', etc. but it must be a valid code on the TARGET code table. The values of the field should be defined according to the bank''s overall marketing strategy.Validation Rules- 1-4 numeric characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code, or the VERSION File [Ref- UTILITIES]. Otherwise input is optional and will override default value.)'
        enum:
          - Specifies how the cus is considered by the bank
      customerstatus:
        type: string
        description: 'Identifies the Status of the Customer. The values applicable to this field can be defined by each bank/branch according to the their own practice.Validation Rules- 1-4 numeric characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the Customer STATUS table.'
        enum:
          - Identifies the Status of the Customer
      nationality:
        type: string
        description: 'Identifies the Nationality of the Customer.Validation Rules- 2 type SSS (uppercase alpha) Country code characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector Code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the COUNTRY table (Ref- GENERAL TABLES).'
        enum:
          - Nationality of the Customer
      residence:
        type: string
        description: 'Identifies the Country of Residence of the Customer. Any change in the value of this field will prompt a message reminding the User that the Town Country defined in line 4 of the SWIFT address should also be changed. If the User, for any reason, does not want to change the content of line 4 of the SWIFT address, he will be forced to confirm it by entering an Override.Validation Rules- 2 type SSS (uppercase alpha) Country code characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the COUNTRY table (Ref- GENERAL TABLES).'
        enum:
          - Country of Residence of the Customer
      customertype:
        type: string
        description: 'Indicates the type of customer, and is dependant on the CR (Customer Relationship Management) module being installed. The values of PROSPECT, EXTERNAL.USER, ACTIVE or null (the equivalent of ACTIVE) are allowed. If PROSPECT is entered then if the customer does not form a business relationship with the bank, such as opening an account, limit or contract then after a period of time defined on the CUST.RETENTION field on COMPANY the customer record and all associated data will be removed from the system. If the customer forms a business relationship with the bank then the wll be activated and after this point the customer record cannot be deleted. If opted for External.user then the customer can only be used as a signatory in applications EB.SIGNATORY.GROUP and EB.EXTERNAL.USER and then in field named SIGNATORY if used in any other applications, and restricted for use in any other fields in all remaining applications.'
        enum:
          - Indicates Customer's Type
      abn:
        type: string
        description: Register Number used by Australian Businesses for their transactions. 11 digit numeric.
      acn:
        type: string
        description: Register Number used by Australian Corporates for their transactions. 9 digit numeric.
      customerStartDate:
        type: string
        format: date
        description: Contains the date on which individual/corporate becomes the customer of the bankValidation Rules-- Standard date format (YYYYMMDD). (Optional input. No default value.)
      taxFileNumber:
        type: string
        description: Standard Free Text fieldOnly 1 field required for both TFN and Exempt code with no encryption. This field should be a multi purpose field with a dropdown enquiry but the user can still key in any value without it being validated
      taxIdentificationNumber:
        type: string
        description: This field identifies the number used for Tax purposes in Australia.
      countryOfResidenceOfTaxPurposes:
        type: string
        description: This field displays the country of tax residence
      dateOfIncorporation:
        type: string
        format: date
        description: Specifies the Customer's date of birth or the date on which the Company was registered. Any birth or incorporation date which is before 1950 should be entered yyyymmdd.Validation Rules- Standard date format - type DD (Date format in range 1000-2049). (Optional input. No default value.) It must be a valid date which is less than or equal to today.
      issueCheques:
        type: string
        description: This field denotes whether the customer is eligible for cheque issue facility and to know first cheque book issued or not. System automatically changes the value to 'YES' once first cheque book is issued to an account for the customer. Input 'No' if the customer is not eligible for the cheque issue facility. To make cheque facility available to the customer change 'NO' to Null.Validation Rules- User can only input 'NO' or Null. Value 'YES' is updated by the system.
      hardShip:
        type: string
        description: This field if used to denote if the customer is in hardship. Accept Y or N.
      customerLiability:
        type: string
        description: 'Indicates the Customer consolidation number for credit grouping purposes, within the same branch/country. This field allows Customer exposure to be consolidated at the branch or country level when analysing the risk by the LIMIT Application. If entered it must be a valid Customer code or Mnemonic. Note - This is a no change field. Any change must be done using theLIMIT.CHANGE application.Validation Rules- 1-10 numeric character Customer Number or 3-10 type MNE (uppercase alpha or numeric, or ''.'') character Customer Mnemonic. (Optional input. Default Value is = None.) The customer number entered here must not be linked to another liability.'
      domicle:
        type: string
        description: 'Indicates country of domicile. If input, must exist on COUNTRY table.'
      confidentialText:
        type: string
        description: 'There are occasions where for the sake of client confidentiality that the client name is not used in advices or payment instructions generated by the bank. Typically a phrase such as ''One of our Clients'' would be used instead of the client name. This field controls the generation of the standard text in the &amp;#145;Ordering Customer&amp;#146; fields of the SWIFT messages, allowing the text to be in the language of the receiving bank. The standard text is defined in the ORD record in DE.TRANSLATION. To utilise this the conversion should be set to &amp;#145;CUS*TEXT*ORD&amp;#146; in the relevant DE.FORMAT.SWIFT record.Validation Rules- Input is either YES or NO Yes - will try to insert the standard text in the ordering customer field of the SWIFT message provided the system has been set correctly. If unsuccessful then the customer text will be used.'
      internetBanking:
        type: string
        description: 'If field is set to YES, then Internet Banking service will be enabled for the customer.'
      mobileBanking:
        type: string
        description: Indicates whether is Customer is subscribed to the mobile banking service or not.
      contactDate:
        type: string
        format: date
        description: Specifies the date that first contact was made with the Customer.Validation Rules- 1-9 type D (Date format in range 1950 - 2049) numeric characters. (Optional Input. No default value.) This field is for information only. It must be a valid date which is less than or equal to today.
      introducer:
        type: string
        description: Identifies the name of the person who introduced the Customer to the bank. This field is for information only and must not contain more than 35 characters.Validation Rules- 1-35 type A (alphanumeric) characters. (Optional input. No default value.)
      kycRelationship:
        type: string
        description: 'Indicates the relationship this customer is being held in. If input, must exist on CR.RELATIONSHIP table.'
      sourceOfKycVerification:
        type: string
        description: Specifies the Agency/Organisation which has verified the customer�s KYC norms. Dropdown Values. Not Mandatory.
      verifyingIndividual:
        type: string
        description: 'Specifies the name of the individual belonging to the Agency/Organisation which had conducted the customer�s KYC Verification. Dropdown, Not Mandatory.'
      kycComplete:
        type: string
        description: Know Your Customer is the due diligence and bank regulation that institutions must perform to identify their clients and ascertain relevant information pertinent to doing financial business with them. This field is for information only and contains YES or NULL. If set to YES then the information related to the customer has been collected and verified.
      lastKycReviewDate:
        type: string
        format: date
        description: Date customer KYC information was last reviewed.
      autoNextKycRev:
        type: string
        description: Date system has calculated customer should next be reviewed.
      manualNextKycRev:
        type: string
        description: Manual specification of next review date.
      lastSuitReviewDate:
        type: string
        format: date
        description: Date customer Suitability information was last reviewed.
      AutoNextSuitRevDate:
        type: string
        format: date
        description: Date system has calculated customer suitability should next be reviewed.
      ManualNextSuitRevDate:
        type: string
        format: date
        description: Manual specification of next suitability review date.
      amlCheck:
        type: string
        description: 'Field is used to describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities.It can have YES, SENT or NULL values. Depending on these values the AML.RESULT field will get updated.'
      amlResult:
        type: string
        description: 'If the value in AML.CHECK is NULL, then this field will be NULL. If the value in AML.CHECK is SENT, then the value in this field will be RESULT.AWAITED. And if the value in AML.CHECK is YES, then the value in this field will be either POSITIVE or NEGATIVE.'
      lastAmlResultDate:
        type: string
        format: date
        description: 'This field is the date field, when the last Anti Money Laundering result is performed.'
      calcRiskClass:
        type: string
        description: 'Personal Risk Class (calculated). If input, must exist on RISK.CLASS table.'
      manualRiskClass:
        type: string
        description: 'Personal Risk Class (manual override). If input, must exist on RISK.CLASS table.'
      sourceOfWealth:
        type: string
        description: |-
          Refers to the origin of the entire body of wealth (i.e. total assets) of the client.
          This information that should be obtained should given an indication as to the volume of wealth the client would reasonably be expected to have, and provided a picture of how it was acquired.

          Possible values:
          employmentIncome
          investmentIncome
          businessIncome
          oneOffPayment
          saleOfAssets
          windfall
      overrideReason:
        type: string
        description: 'Reason for changing the customer''s risk class from the calculated risk class. Mandatory, if CALC.RISK.CLASS is not the same as MANUAL.RISK.CLASS.'
      recordStatus:
        type: string
        description: |-
          Indicates the current status of the record.Validation Rules-No input fieldSystem generated.
          Example- INAU
      currNo:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
          Validation Rules-No input fieldSystem generated.
          Example- 1
      authoriser:
        type: string
        description: |-
          The user that authorised the record.Where a record has been modified multiple times (i.e the CURR.NO field is greater than 1) only the last authoriser is shown. 
          Validation Rules-No input fieldSystem generated.
      companyCode:
        type: string
        description: |-
          The company code that the record belongs to. 
          Validation Rules-No input fieldSystem generated.
          Example- AU0010001
      departmentCode:
        type: string
        description: |-
          The department code of the person that last modified the record. 
          Validation Rules-No input fieldSystem generated. 
          Example- 01
      auditorCode:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the audit information at which the function was used. 
          Validation Rules-No input fieldSystem generated.
      auditDateTime:
        type: string
        format: date
        description: |-
          Timestamp of the issue that is logged.
          17 characters Date Time format.
          It need to be displayed as DD MMM YYYY HH-MM-SS.sss.
          Example- 12 JAN 2015 12-34-25.123
          The value is not editable by the user.
  updateCorporateCustomerResponse:
    properties:
      header:
        $ref: '#/definitions/ScreenHeader'
      body:
        $ref: '#/definitions/updateCorporateCustomerResponseBody'
    description: updateCorporateCustomerResponse
  updateCorporateCustomerResponseBody:
    type: object
    properties:
      customerRatings:
        type: array
        description: Field identifies the rating of the customer.It is linked to EB.RATING table and must have an existing code on EB.RATING table.
        items:
          type: object
          properties:
            customerRating:
              type: string
              description: Field identifies the rating of the customer.It is linked to EB.RATING table and must have an existing code on EB.RATING table.
      address:
        type: array
        items:
          type: object
          properties:
            addressType:
              type: string
              description: 'This is field is used to select the Address type. Drop box. Options are POSTAL, Primary Residence / Registered Business and Blank. Optional Field.'
            addressLine_:
              type: string
              description: 'Address of the customer will be recorded here, based on Address type'
            locality:
              type: string
              description: This field mentions the Locality in which the customer has bought the new house.
            state:
              type: string
              description: This field mentions the State in which the customer has bought the new house.
            postCode:
              type: string
              description: The postcode of the new house purchased by the customer will be recorded here
            country:
              type: string
              description: This field mentions the Country in which the customer has bought the new house.
            dpID:
              type: string
              description: This field contains the Australia Post DPID returned from QAS after verifying an address. No input field at version level.
            addressFormatted:
              type: string
              description: This field captures the formatted Address response from QAS. Drop box Field. No input field at version level.
            addressValidated:
              type: string
              format: date
              description: This field denotes if the address if validated or not.
            addressDate:
              type: string
              format: date
              description: This field displays the date on which the QAS verification was done by the Address Interface. Standard Date Format. No input field at version level.
            addressReferenceId:
              type: string
              description: 'This field will store the Address Reference ID associated with one/multiple address returned by ESB (SearchAddress service). Upon selecting a closely matched address from the ADD.FORMATTED dropdown list, using the Address Reference ID an interface call (GetAddress service) is made which will return data for fields from ADD.LINE.1 to ADD.DP.ID.'
      preferredContactMethod:
        type: array
        items:
          type: object
          properties:
            channel:
              type: string
              description: 'This field is used to describe the communication channel of the customer. Dropdown. Optional Field Multi-value field along with ADDRESS.GROUP and ADDRESS.STATUS fields Options are POST, EMAIL, SMS, PHONE or FAX'
            addressGroup:
              type: string
              description: 'This field is used to select the Address Group for a particular Channel. Dropdown field. Optional Field. Options are ''Primary Residence / Registered Business'' or ''Postal'' when the Channel Select is ''Postal''. Or if the Channel Select is SMS/Email/PHONE the options are ''Primary'', ''Secondary'' or ''Office''.'
            addressStatus:
              type: string
              description: This field is used to select if the respective address is Undeliverable or not.Dropdown field. Optional. Options are Blank or 'Undeliverable'
      contactChannel:
        type: array
        description: Specifies the channel for communication between customer and bank Different types channels has been described below- Channel Description BRANCH When the customer visits the bank CALLCENTER Marketed through call center EMAIL Campaigned through email IM Campaigned through instant messenger INTERNET Communicated through internet NONE No channel used PERSONAL By meeting the customer personally POST Launched by mail service SKYPE Instant messenger service SMS By Short messaging service OTHER Channel not mentioned above Validation Rules- Input should have an entry on EB.LOOKUP table
        items:
          type: object
          properties:
            phone:
              type: string
              description: This field can contain phone number of the customer.
            sms:
              type: string
              description: This field can contain mobile number of the customer.
            email:
              type: string
              description: This field can contain e-mail addresses of the customer.
            addressLocation:
              type: string
              description: 'Address of the customer will be recorded here, based on Address type'
      fax:
        type: array
        description: This field can contain fax number of the customer.
        items:
          type: object
          properties:
            fax:
              type: string
              description: This field can contain fax number of the customer.
      idDocument:
        type: array
        items:
          type: object
          properties:
            legalId:
              type: string
              description: 'Part of the LEGAL multi-value set. Specifies any legal identification of the Customer. This field is for information only and specifies, for example, passport number, identity card number, PIN number etc.Validation Rules- 1-20 type A (alphanumeric) characters. (Optional input. No default value.)'
              enum:
                - Specifies any legal identification type
            legalDocumentName:
              type: string
              description: Part of the LEGAL multi-value set. Valdiated against EB.LOOKUP table CUS.LEGAL.DOC.NAME.
              enum:
                - Specifies the Legal Document name
            nameOnId:
              type: string
              description: 'Part of the LEGAL multi-value set. To support passports, enabling a holders name to be stored.'
              enum:
                - Specifies any legal identification of the Customer
            issueAuthority:
              type: string
              description: Part of the LEGAL multi-value set. Validated against EB.LOOKUP table CUS.LEGAL.ISS.AUTH.
              enum:
                - Specifies legal issuing authority
            issueDate:
              type: string
              format: date
              description: Defines the date of issue of cheques.Validation Rules-8 numeric characters.Standard date field.Optional Input (If not entered defaults to TODAY).No-change field.
            expiryDate:
              type: string
              format: date
              description: 'Part of the LEGAL multi-value set. Not mandatory, but if input must be greater than TODAY and greater than LEGAL.ISS.DATE.'
      relation:
        type: array
        description: This field is used to enumerate the customers marketing delivery preferences.Options are Marketing and Email Marketing
        items:
          type: object
          properties:
            relationCode:
              type: string
              description: Identifies the inter-relationship between Customer records and enables a link to be formed for the purpose of evaluating the overall Customer position. Input must be a valid Relation code and the reverse relationship will be shown automatically on the REVERS.REL.CODE when it has been defined in the RELATION table. An on-line display (internal file 'RELATION.CUSTOMER') also allows the User to check all the relationships of a Customer with other Customers within the same database. The relationship entered is that of the customer being created to that of the Customer defined in REL.CUSTOMER.Validation Rules- 1-3 numeric characters. Multivalue field associated with REL.CUSTOMER and REVERS.REL.CODE. (Optional input. No default value.)
              enum:
                - Identified relationship code
            relationCustomer:
              type: string
              description: 'Identifies the Customer Code or the Mnemonic of the Related Customer.Validation Rules- 1-10 numeric character Customer Number or 3-10 type SS (uppercase alpha or numeric, first character alpha) character Customer Mnemonic. Multivalue field associated with RELATION.CODE and REVERS.REL.CODE. (Mandatory input if corresponding RELATION.CODE is entered, otherwise not allowed.) Input must be a valid Customer code or mnemonic. The relationship between 2 customers may only be entered in one of the Customer records, not both.'
              enum:
                - Specifies inter-relationship Customer
            reverseRelation:
              type: string
              description: Identifies the Relationship code for the Related Customer. This field is generated automatically by the System according to the values defined in the RELATION table. No access to this field will be permitted to the User.Validation Rules- 1-3 numeric character Relation code. Multivalue field associated with RELATION.CODE and REL.CUSTOMER. This is a NOINPUT field.
              enum:
                - Relationship code for the related Customer
            role:
              type: string
              description: 'Part of the ROLE sub-value set. Role customer plays with this customer. Must exist on EB.ROLE table. Not a mandatory field, only if this customer has a role with the customer of the record.'
            moreRoleInfo:
              type: string
              description: 'Part of the ROLE sub-value set. When ROLE requires more information (see ROLE table), this field becomes mandatory. Otherwise it is optional.'
            roleNotes:
              type: string
              description: Part of the ROLE sub-value set. Additional notes that can be entered about this role.
            deliveryOptions:
              type: array
              items:
                type: object
                properties:
                  relationDeliveryOption:
                    type: string
                    description: 'Part of the ROLE sub-value set. Used on selected CUSTOMER records that are setup to be ''container'' type records which group together a set of clients, such as a joint customer relationship. Each of the clients has their own record which can be linked to the container. This field is used to specify what delivery addressing is to be used for the link customer. Only the first delivery option is used in a sub valued role list. There are three options- 1. - P.n (Use full name &amp; address of linked customer as the container PRINT.n address.) 2. - A.n (Only use address of linked customer as the container PRINT.n address. .Name &amp; short.name of the container is kept) 3.- C (Copy option - sends a copy of delivery messages using the MDR.CUSTOMER option on DE.PRODUCT). When the container customer is authorised the system creates the DE.ADDRESS records as indicated and where required will also create a DE.PRODUCT record.Validation Rules- Only one primary (PRINT.1) address can be entered, either as A.1 or P.1 If no primary address is entered the here the standard PRINT.1 address for this customer record will be created. Input only allowed if REL.CUSTOMER is present Only delivery options created in the EB.LOOKUP CUS.REL.DELIV.OPT table will be accepted.'
      otherFinDetails:
        type: array
        items:
          type: object
          properties:
            otherFinRelation:
              type: string
              description: Defines the connection to any other financial relationship if the customer hasValidation Rules-- 1-35 type (alphabet characters). (Optional input. No default value.)
            otherFinInstitution:
              type: string
              description: Defines the connection to any other financial institution if the customer hasValidation Rules-- 1-35 type (alphabetical characters). (Optional input. No default value.)
      furtherDetails:
        type: string
        description: Any relevant further details about customer.
      otherNationalityList:
        type: array
        items:
          type: object
          properties:
            otherNationality:
              type: string
              description: 'The customer has to indicate a primary nationality, these ''THER.NATIONALITY'' fields are for information purposes only. If input, must exist on COUNTRY table.'
      deliveryPreferences:
        type: array
        items:
          type: object
          properties:
            deliveryOption:
              type: string
              description: This field is used to enumerate the customers marketing delivery preferences.Options are Marketing and Email Marketing
            deliveryPref:
              type: string
              description: This field is used to select preference for the respective Delivery Option.Options are Opt-Out or blank.
      riskDetails:
        type: array
        items:
          type: object
          properties:
            riskAssetType:
              type: string
              description: Multi-value set indicating a customer's expertise in use with different asset classes. If the SC product is installed then the input must exist on ASSET.TYPE otherwise anything can be entered here.
            riskLevel:
              type: string
              description: Risk level. Values from 0 to 99 are valid.
            riskTolerance:
              type: string
              description: Indicates the tolerance in this risk class. Values from 0 to 99 are valid.
            riskFromDate:
              type: string
              format: date
              description: Date from which customer builds expertise in this risk class.
      overrideList:
        type: array
        items:
          type: object
          properties:
            override:
              type: string
              description: |-
                Records the overrides generated during processing of an activity. All the overrides generated in the property class templates (AA.ARR.XXXX, where XXXX - Property Class) for the Activity input are updated in this field.
                Standard override field, Multi-valued.
      inputterList:
        type: array
        items:
          type: object
          properties:
            inputter:
              type: string
              description: The users that have modified this record.Validation Rules-No input fieldSystem generated.
      dateTimeList:
        type: array
        items:
          type: object
          properties:
            dateTime:
              type: string
              format: date
              description: |-
                This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
                Validation Rules-No input fieldSystem generated.
      fullName:
        type: string
        description: This field is used to capture the full Name of the Customer.
      fullName__:
        type: string
        description: 'Continuation of NAME LINE 1. This field together with the previous and next two fields form the address for the Customer. The SWIFT standard of 4 lines of 35 characters each has been chosen by T24. Only in the fields NAME 1 and STREET is input mandatory. The input to field STREET is non mandatory if the field STREET.NON.MANDAT is defined as ''Y'', in the CUSTOMER.DEFAULT record whose ID is equal to the value of the SECTOR field. Where no other additional address has been defined in the DELIVERY file, the address defined in these four fields will be used on any correspondence sent to the Customer. After authorisation of the Customer record, this address will be automatically created in the DELIVERY file as the Address No. 1 and further maintenance of the Customer Address No. 1 will be performed directly in the Customer file. Any additional address to be opened or to be maintained will be done by means of the DELIVERY file.Validation Rules- 1-35 type S (uppercase alpha or numeric) characters. Special Characters ''&amp;'' and ''/'' are also allowed, with the exception that ''/'' cannot be entered as first character. If NAME.2 is reported in SWIFT Messages, the character ''&amp;'' would be replaced with spaces. (Optional input. No default value.)'
      organisationName:
        type: string
        description: 'This field is used to capture the Legal name or Trading Name of a company/organisation/Trust.3 - 200 Alphanumeric characters, Mandatory Field'
      mnemonic:
        type: string
        description: 'Specifies an alternative easy means of referencing the Customer. For countries where the Customer name should not be recorded (e.g. numbered Customers/accounts) any value can be entered in this field with the exception that the first character must be alpha. Like the ID, the Mnemonic must be unique across T24. Care should be taken when assigning Mnemonics to Customers and some rules should ideally be defined across the bank to allow easy identification of the Customers by their Mnemonics. Note - For each Customer, the System will automatically update the internal file ''MNEMONIC.CUSTOMER'' which allows the User to displaythe Customers in Mnemonic sequence instead of Customer number.Validation Rules- 3-10 type MNE (Uppercase alpha or numeric, first character alpha, or ''.'') characters. (Mandatory input)'
        enum:
          - Specifies an easy means of referencing Customer
      shortName:
        type: string
        description: 'Identifies the name of the Customer in a more descriptive form, and will be used for on-line enrichments in any field where a Customer ID or Mnemonic has been input. For countries where the Customer name should not be recorded (e.g. numbered Customers/ Accounts) any valid SWIFT character can be entered in this field with the exception that all characters cannot be spaces. A clear and unique identification of the Customer must be entered in this field. When entering or displaying data where a Customer ID or Mnemonic is involved, the content of this field will be used as the enrichment of the Customer number/Mnemonic.Validation Rules- 3-35 type S (uppercase alpha or numeric) characters. Special Characters ''&amp;'' and ''/'' are also allowed, with the exception that ''/'' cannot be entered as first character. If SHORT.NAME is reported in SWIFT Messages, the character ''&amp;'' would be replaced with spaces. (Mandatory input)'
        enum:
          - Short name of the customer
      accountOfficer:
        type: string
        description: 'Identifies the main Account Officer responsible for the Customer. his code will be defaulted on all Customer transactions within T24 except if it is overriden by another Account Officer code at the transaction or product level. The existence of the Account Officer code on every Customer transaction will allow generation of M.I.S. information at the Account Officer level.Validation Rules- 1-4 numeric character Account Officer code. (Mandatory input if no default value has been specified on the Customer DEFAULT Table for the corresponding sector code or the VERSION File [Ref- UTILITIES]. Otherwise Input is optional and will override default value.) It must be a valid code on the DEPT.ACCT.OFFICER table (Ref- GENERAL TABLES).'
        enum:
          - Account Officer responsible for the Customer
      secondOfficer:
        type: string
        description: 'Identifies the other Account Officer(s) responsible for the Customer. Only codes included in the DEPT.ACCT.OFFICER table (Ref- GENERAL TABLES) are allowed. The definition of a second Account Officer should serve the purpose of indicating who will take care of the Customer Relationship when the main ACCOUNT.OFFICER is on holiday, sick, or absent for any other reason.Validation Rules- 1-4 numeric character Account Officer code. Multivalue field. (Optional input. No default value.)'
      sector:
        type: string
        description: Identifies the Sector code relating to the Customer. If the Sector code is defined on the Customer DEFAULT table the associated default values will be retrieved and added to a new Customer record during the Validation process except if some specific values have been input by the User.Validation Rules- 1-4 numeric character Sector code. (Mandatory input) It must be a valid code on the SECTOR table. The field must not be blank.
        enum:
          - Sector code relating to the Customer
      industry:
        type: string
        description: 'Identifies the Industry in which the Customer is trading. Each User can define their own industry codes according to the use they want to make of them. Production of central bank reports classified by Industry codes or the monitoring of the overall credit exposure by Industry type are typical examples of uses of this code.Validation Rules- 1-4 numeric character Industry code. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION File [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the INDUSTRY code table.'
        enum:
          - Industry in which Customer is trading
      segment:
        type: string
        description: 'Specifies how the Customer is considered by the bank and how he fits in with the Account Officer''s overall marketing strategy. Examples of this field are- ''Prime Customer'', ''No Potential'', etc. but it must be a valid code on the TARGET code table. The values of the field should be defined according to the bank''s overall marketing strategy.Validation Rules- 1-4 numeric characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code, or the VERSION File [Ref- UTILITIES]. Otherwise input is optional and will override default value.)'
        enum:
          - Specifies how the cus is considered by the bank
      customerstatus:
        type: string
        description: 'Identifies the Status of the Customer. The values applicable to this field can be defined by each bank/branch according to the their own practice.Validation Rules- 1-4 numeric characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the Customer STATUS table.'
        enum:
          - Identifies the Status of the Customer
      nationality:
        type: string
        description: 'Identifies the Nationality of the Customer.Validation Rules- 2 type SSS (uppercase alpha) Country code characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector Code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the COUNTRY table (Ref- GENERAL TABLES).'
        enum:
          - Nationality of the Customer
      residence:
        type: string
        description: 'Identifies the Country of Residence of the Customer. Any change in the value of this field will prompt a message reminding the User that the Town Country defined in line 4 of the SWIFT address should also be changed. If the User, for any reason, does not want to change the content of line 4 of the SWIFT address, he will be forced to confirm it by entering an Override.Validation Rules- 2 type SSS (uppercase alpha) Country code characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the COUNTRY table (Ref- GENERAL TABLES).'
        enum:
          - Country of Residence of the Customer
      customertype:
        type: string
        description: 'Indicates the type of customer, and is dependant on the CR (Customer Relationship Management) module being installed. The values of PROSPECT, EXTERNAL.USER, ACTIVE or null (the equivalent of ACTIVE) are allowed. If PROSPECT is entered then if the customer does not form a business relationship with the bank, such as opening an account, limit or contract then after a period of time defined on the CUST.RETENTION field on COMPANY the customer record and all associated data will be removed from the system. If the customer forms a business relationship with the bank then the wll be activated and after this point the customer record cannot be deleted. If opted for External.user then the customer can only be used as a signatory in applications EB.SIGNATORY.GROUP and EB.EXTERNAL.USER and then in field named SIGNATORY if used in any other applications, and restricted for use in any other fields in all remaining applications.'
        enum:
          - Indicates Customer's Type
      abn:
        type: string
        description: Register Number used by Australian Businesses for their transactions. 11 digit numeric.
      acn:
        type: string
        description: Register Number used by Australian Corporates for their transactions. 9 digit numeric.
      customerStartDate:
        type: string
        format: date
        description: Contains the date on which individual/corporate becomes the customer of the bankValidation Rules-- Standard date format (YYYYMMDD). (Optional input. No default value.)
      taxFileNumber:
        type: string
        description: Standard Free Text fieldOnly 1 field required for both TFN and Exempt code with no encryption. This field should be a multi purpose field with a dropdown enquiry but the user can still key in any value without it being validated
      exemptionCodeDesc:
        type: string
        description: The field displays the enrichment for Exemption code.
      taxIdentificationNumber:
        type: string
        description: This field identifies the number used for Tax purposes in Australia.
      countryOfResidenceOfTaxPurposes:
        type: string
        description: This field displays the country of tax residence
      dateOfIncorporation:
        type: string
        format: date
        description: Specifies the Customer's date of birth or the date on which the Company was registered. Any birth or incorporation date which is before 1950 should be entered yyyymmdd.Validation Rules- Standard date format - type DD (Date format in range 1000-2049). (Optional input. No default value.) It must be a valid date which is less than or equal to today.
      issueCheques:
        type: string
        description: This field denotes whether the customer is eligible for cheque issue facility and to know first cheque book issued or not. System automatically changes the value to 'YES' once first cheque book is issued to an account for the customer. Input 'No' if the customer is not eligible for the cheque issue facility. To make cheque facility available to the customer change 'NO' to Null.Validation Rules- User can only input 'NO' or Null. Value 'YES' is updated by the system.
      hardShip:
        type: string
        description: This field if used to denote if the customer is in hardship. Accept Y or N.
      customerLiability:
        type: string
        description: 'Indicates the Customer consolidation number for credit grouping purposes, within the same branch/country. This field allows Customer exposure to be consolidated at the branch or country level when analysing the risk by the LIMIT Application. If entered it must be a valid Customer code or Mnemonic. Note - This is a no change field. Any change must be done using theLIMIT.CHANGE application.Validation Rules- 1-10 numeric character Customer Number or 3-10 type MNE (uppercase alpha or numeric, or ''.'') character Customer Mnemonic. (Optional input. Default Value is = None.) The customer number entered here must not be linked to another liability.'
      domicle:
        type: string
        description: 'Indicates country of domicile. If input, must exist on COUNTRY table.'
      confidentialText:
        type: string
        description: 'There are occasions where for the sake of client confidentiality that the client name is not used in advices or payment instructions generated by the bank. Typically a phrase such as ''One of our Clients'' would be used instead of the client name. This field controls the generation of the standard text in the &amp;#145;Ordering Customer&amp;#146; fields of the SWIFT messages, allowing the text to be in the language of the receiving bank. The standard text is defined in the ORD record in DE.TRANSLATION. To utilise this the conversion should be set to &amp;#145;CUS*TEXT*ORD&amp;#146; in the relevant DE.FORMAT.SWIFT record.Validation Rules- Input is either YES or NO Yes - will try to insert the standard text in the ordering customer field of the SWIFT message provided the system has been set correctly. If unsuccessful then the customer text will be used.'
      internetBanking:
        type: string
        description: 'If field is set to YES, then Internet Banking service will be enabled for the customer.'
      mobileBanking:
        type: string
        description: Indicates whether is Customer is subscribed to the mobile banking service or not.
      contactDate:
        type: string
        format: date
        description: Specifies the date that first contact was made with the Customer.Validation Rules- 1-9 type D (Date format in range 1950 - 2049) numeric characters. (Optional Input. No default value.) This field is for information only. It must be a valid date which is less than or equal to today.
      introducer:
        type: string
        description: Identifies the name of the person who introduced the Customer to the bank. This field is for information only and must not contain more than 35 characters.Validation Rules- 1-35 type A (alphanumeric) characters. (Optional input. No default value.)
      kycRelationship:
        type: string
        description: 'Indicates the relationship this customer is being held in. If input, must exist on CR.RELATIONSHIP table.'
      sourceOfKycVerification:
        type: string
        description: Specifies the Agency/Organisation which has verified the customer�s KYC norms. Dropdown Values. Not Mandatory.
      verifyingIndividual:
        type: string
        description: 'Specifies the name of the individual belonging to the Agency/Organisation which had conducted the customer�s KYC Verification. Dropdown, Not Mandatory.'
      kycComplete:
        type: string
        description: Know Your Customer is the due diligence and bank regulation that institutions must perform to identify their clients and ascertain relevant information pertinent to doing financial business with them. This field is for information only and contains YES or NULL. If set to YES then the information related to the customer has been collected and verified.
      lastKycReviewDate:
        type: string
        format: date
        description: Date customer KYC information was last reviewed.
      autoNextKycRev:
        type: string
        description: Date system has calculated customer should next be reviewed.
      manualNextKycRev:
        type: string
        description: Manual specification of next review date.
      lastSuitReviewDate:
        type: string
        format: date
        description: Date customer Suitability information was last reviewed.
      AutoNextSuitRevDate:
        type: string
        format: date
        description: Date system has calculated customer suitability should next be reviewed.
      ManualNextSuitRevDate:
        type: string
        format: date
        description: Manual specification of next suitability review date.
      amlCheck:
        type: string
        description: 'Field is used to describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities.It can have YES, SENT or NULL values. Depending on these values the AML.RESULT field will get updated.'
      amlResult:
        type: string
        description: 'If the value in AML.CHECK is NULL, then this field will be NULL. If the value in AML.CHECK is SENT, then the value in this field will be RESULT.AWAITED. And if the value in AML.CHECK is YES, then the value in this field will be either POSITIVE or NEGATIVE.'
      lastAmlResultDate:
        type: string
        format: date
        description: 'This field is the date field, when the last Anti Money Laundering result is performed.'
      calcRiskClass:
        type: string
        description: 'Personal Risk Class (calculated). If input, must exist on RISK.CLASS table.'
      manualRiskClass:
        type: string
        description: 'Personal Risk Class (manual override). If input, must exist on RISK.CLASS table.'
      sourceOfWealth:
        type: string
        description: |-
          Refers to the origin of the entire body of wealth (i.e. total assets) of the client.
          This information that should be obtained should given an indication as to the volume of wealth the client would reasonably be expected to have, and provided a picture of how it was acquired.

          Possible values:
          employmentIncome
          investmentIncome
          businessIncome
          oneOffPayment
          saleOfAssets
          windfall
      overrideReason:
        type: string
        description: 'Reason for changing the customer''s risk class from the calculated risk class. Mandatory, if CALC.RISK.CLASS is not the same as MANUAL.RISK.CLASS.'
      recordStatus:
        type: string
        description: |-
          Indicates the current status of the record.Validation Rules-No input fieldSystem generated.
          Example- INAU
      currNo:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
          Validation Rules-No input fieldSystem generated.
          Example- 1
      authoriser:
        type: string
        description: |-
          The user that authorised the record.Where a record has been modified multiple times (i.e the CURR.NO field is greater than 1) only the last authoriser is shown. 
          Validation Rules-No input fieldSystem generated.
      companyCode:
        type: string
        description: |-
          The company code that the record belongs to. 
          Validation Rules-No input fieldSystem generated.
          Example- AU0010001
      departmentCode:
        type: string
        description: |-
          The department code of the person that last modified the record. 
          Validation Rules-No input fieldSystem generated. 
          Example- 01
      auditorCode:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the audit information at which the function was used. 
          Validation Rules-No input fieldSystem generated.
      auditDateTime:
        type: string
        format: date
        description: |-
          Timestamp of the issue that is logged.
          17 characters Date Time format.
          It need to be displayed as DD MMM YYYY HH-MM-SS.sss.
          Example- 12 JAN 2015 12-34-25.123
          The value is not editable by the user.
  updateCorporateCustomerErrorResponse:
    properties:
      header:
        $ref: '#/definitions/ErrorHeader'
      error:
        $ref: '#/definitions/updateCorporateCustomerErrorResponseBody'
    description: updateCorporateCustomerErrorResponse
  updateCorporateCustomerErrorResponseBody:
    type: object
    properties:
      errorDetails:
        type: array
        items:
          type: object
          properties:
            fieldName:
              type: string
            code:
              type: string
            message:
              type: string
      type:
        type: string
  getCorporateCustomerResponse:
    properties:
      header:
        $ref: '#/definitions/ScreenHeader'
      body:
        $ref: '#/definitions/getCorporateCustomerResponseBody'
    description: getCorporateCustomerResponse
  getCorporateCustomerResponseBody:
    type: object
    properties:
      customerRatings:
        type: array
        description: Field identifies the rating of the customer.It is linked to EB.RATING table and must have an existing code on EB.RATING table.
        items:
          type: object
          properties:
            customerRating:
              type: string
              description: Field identifies the rating of the customer.It is linked to EB.RATING table and must have an existing code on EB.RATING table.
      address:
        type: array
        items:
          type: object
          properties:
            addressType:
              type: string
              description: 'This is field is used to select the Address type. Drop box. Options are POSTAL, Primary Residence / Registered Business and Blank. Optional Field.'
            addressLine_:
              type: string
              description: 'Address of the customer will be recorded here, based on Address type'
            locality:
              type: string
              description: This field mentions the Locality in which the customer has bought the new house.
            state:
              type: string
              description: This field mentions the State in which the customer has bought the new house.
            postCode:
              type: string
              description: The postcode of the new house purchased by the customer will be recorded here
            country:
              type: string
              description: This field mentions the Country in which the customer has bought the new house.
            dpID:
              type: string
              description: This field contains the Australia Post DPID returned from QAS after verifying an address. No input field at version level.
            addressFormatted:
              type: string
              description: This field captures the formatted Address response from QAS. Drop box Field. No input field at version level.
            addressValidated:
              type: string
              format: date
              description: This field denotes if the address if validated or not.
            addressDate:
              type: string
              format: date
              description: This field displays the date on which the QAS verification was done by the Address Interface. Standard Date Format. No input field at version level.
            addressReferenceId:
              type: string
              description: 'This field will store the Address Reference ID associated with one/multiple address returned by ESB (SearchAddress service). Upon selecting a closely matched address from the ADD.FORMATTED dropdown list, using the Address Reference ID an interface call (GetAddress service) is made which will return data for fields from ADD.LINE.1 to ADD.DP.ID.'
      preferredContactMethod:
        type: array
        items:
          type: object
          properties:
            channel:
              type: string
              description: 'This field is used to describe the communication channel of the customer. Dropdown. Optional Field Multi-value field along with ADDRESS.GROUP and ADDRESS.STATUS fields Options are POST, EMAIL, SMS, PHONE or FAX'
            addressGroup:
              type: string
              description: 'This field is used to select the Address Group for a particular Channel. Dropdown field. Optional Field. Options are ''Primary Residence / Registered Business'' or ''Postal'' when the Channel Select is ''Postal''. Or if the Channel Select is SMS/Email/PHONE the options are ''Primary'', ''Secondary'' or ''Office''.'
            addressStatus:
              type: string
              description: This field is used to select if the respective address is Undeliverable or not.Dropdown field. Optional. Options are Blank or 'Undeliverable'
      contactChannel:
        type: array
        description: Specifies the channel for communication between customer and bank Different types channels has been described below- Channel Description BRANCH When the customer visits the bank CALLCENTER Marketed through call center EMAIL Campaigned through email IM Campaigned through instant messenger INTERNET Communicated through internet NONE No channel used PERSONAL By meeting the customer personally POST Launched by mail service SKYPE Instant messenger service SMS By Short messaging service OTHER Channel not mentioned above Validation Rules- Input should have an entry on EB.LOOKUP table
        items:
          type: object
          properties:
            phone:
              type: string
              description: This field can contain phone number of the customer.
            sms:
              type: string
              description: This field can contain mobile number of the customer.
            email:
              type: string
              description: This field can contain e-mail addresses of the customer.
            addressLocation:
              type: string
              description: 'Address of the customer will be recorded here, based on Address type'
      fax:
        type: array
        description: This field can contain fax number of the customer.
        items:
          type: object
          properties:
            fax:
              type: string
              description: This field can contain fax number of the customer.
      idDocument:
        type: array
        items:
          type: object
          properties:
            legalId:
              type: string
              description: 'Part of the LEGAL multi-value set. Specifies any legal identification of the Customer. This field is for information only and specifies, for example, passport number, identity card number, PIN number etc.Validation Rules- 1-20 type A (alphanumeric) characters. (Optional input. No default value.)'
              enum:
                - Specifies any legal identification type
            legalDocumentName:
              type: string
              description: Part of the LEGAL multi-value set. Valdiated against EB.LOOKUP table CUS.LEGAL.DOC.NAME.
              enum:
                - Specifies the Legal Document name
            nameOnId:
              type: string
              description: 'Part of the LEGAL multi-value set. To support passports, enabling a holders name to be stored.'
              enum:
                - Specifies any legal identification of the Customer
            issueAuthority:
              type: string
              description: Part of the LEGAL multi-value set. Validated against EB.LOOKUP table CUS.LEGAL.ISS.AUTH.
              enum:
                - Specifies legal issuing authority
            issueDate:
              type: string
              format: date
              description: Defines the date of issue of cheques.Validation Rules-8 numeric characters.Standard date field.Optional Input (If not entered defaults to TODAY).No-change field.
            expiryDate:
              type: string
              format: date
              description: 'Part of the LEGAL multi-value set. Not mandatory, but if input must be greater than TODAY and greater than LEGAL.ISS.DATE.'
      relation:
        type: array
        description: This field is used to enumerate the customers marketing delivery preferences.Options are Marketing and Email Marketing
        items:
          type: object
          properties:
            relationCode:
              type: string
              description: Identifies the inter-relationship between Customer records and enables a link to be formed for the purpose of evaluating the overall Customer position. Input must be a valid Relation code and the reverse relationship will be shown automatically on the REVERS.REL.CODE when it has been defined in the RELATION table. An on-line display (internal file 'RELATION.CUSTOMER') also allows the User to check all the relationships of a Customer with other Customers within the same database. The relationship entered is that of the customer being created to that of the Customer defined in REL.CUSTOMER.Validation Rules- 1-3 numeric characters. Multivalue field associated with REL.CUSTOMER and REVERS.REL.CODE. (Optional input. No default value.)
              enum:
                - Identified relationship code
            relationCustomer:
              type: string
              description: 'Identifies the Customer Code or the Mnemonic of the Related Customer.Validation Rules- 1-10 numeric character Customer Number or 3-10 type SS (uppercase alpha or numeric, first character alpha) character Customer Mnemonic. Multivalue field associated with RELATION.CODE and REVERS.REL.CODE. (Mandatory input if corresponding RELATION.CODE is entered, otherwise not allowed.) Input must be a valid Customer code or mnemonic. The relationship between 2 customers may only be entered in one of the Customer records, not both.'
              enum:
                - Specifies inter-relationship Customer
            reverseRelation:
              type: string
              description: Identifies the Relationship code for the Related Customer. This field is generated automatically by the System according to the values defined in the RELATION table. No access to this field will be permitted to the User.Validation Rules- 1-3 numeric character Relation code. Multivalue field associated with RELATION.CODE and REL.CUSTOMER. This is a NOINPUT field.
              enum:
                - Relationship code for the related Customer
            role:
              type: string
              description: 'Part of the ROLE sub-value set. Role customer plays with this customer. Must exist on EB.ROLE table. Not a mandatory field, only if this customer has a role with the customer of the record.'
            moreRoleInfo:
              type: string
              description: 'Part of the ROLE sub-value set. When ROLE requires more information (see ROLE table), this field becomes mandatory. Otherwise it is optional.'
            roleNotes:
              type: string
              description: Part of the ROLE sub-value set. Additional notes that can be entered about this role.
            deliveryOptions:
              type: array
              items:
                type: object
                properties:
                  relationDeliveryOption:
                    type: string
                    description: 'Part of the ROLE sub-value set. Used on selected CUSTOMER records that are setup to be ''container'' type records which group together a set of clients, such as a joint customer relationship. Each of the clients has their own record which can be linked to the container. This field is used to specify what delivery addressing is to be used for the link customer. Only the first delivery option is used in a sub valued role list. There are three options- 1. - P.n (Use full name &amp; address of linked customer as the container PRINT.n address.) 2. - A.n (Only use address of linked customer as the container PRINT.n address. .Name &amp; short.name of the container is kept) 3.- C (Copy option - sends a copy of delivery messages using the MDR.CUSTOMER option on DE.PRODUCT). When the container customer is authorised the system creates the DE.ADDRESS records as indicated and where required will also create a DE.PRODUCT record.Validation Rules- Only one primary (PRINT.1) address can be entered, either as A.1 or P.1 If no primary address is entered the here the standard PRINT.1 address for this customer record will be created. Input only allowed if REL.CUSTOMER is present Only delivery options created in the EB.LOOKUP CUS.REL.DELIV.OPT table will be accepted.'
      otherFinDetails:
        type: array
        items:
          type: object
          properties:
            otherFinRelation:
              type: string
              description: Defines the connection to any other financial relationship if the customer hasValidation Rules-- 1-35 type (alphabet characters). (Optional input. No default value.)
            otherFinInstitution:
              type: string
              description: Defines the connection to any other financial institution if the customer hasValidation Rules-- 1-35 type (alphabetical characters). (Optional input. No default value.)
      furtherDetails:
        type: string
        description: Any relevant further details about customer.
      otherNationalityList:
        type: array
        items:
          type: object
          properties:
            otherNationality:
              type: string
              description: 'The customer has to indicate a primary nationality, these ''THER.NATIONALITY'' fields are for information purposes only. If input, must exist on COUNTRY table.'
      deliveryPreferences:
        type: array
        items:
          type: object
          properties:
            deliveryOption:
              type: string
              description: This field is used to enumerate the customers marketing delivery preferences.Options are Marketing and Email Marketing
            deliveryPref:
              type: string
              description: This field is used to select preference for the respective Delivery Option.Options are Opt-Out or blank.
      riskDetails:
        type: array
        items:
          type: object
          properties:
            riskAssetType:
              type: string
              description: Multi-value set indicating a customer's expertise in use with different asset classes. If the SC product is installed then the input must exist on ASSET.TYPE otherwise anything can be entered here.
            riskLevel:
              type: string
              description: Risk level. Values from 0 to 99 are valid.
            riskTolerance:
              type: string
              description: Indicates the tolerance in this risk class. Values from 0 to 99 are valid.
            riskFromDate:
              type: string
              format: date
              description: Date from which customer builds expertise in this risk class.
      overrideList:
        type: array
        items:
          type: object
          properties:
            override:
              type: string
              description: |-
                Records the overrides generated during processing of an activity. All the overrides generated in the property class templates (AA.ARR.XXXX, where XXXX - Property Class) for the Activity input are updated in this field.
                Standard override field, Multi-valued.
      inputterList:
        type: array
        items:
          type: object
          properties:
            inputter:
              type: string
              description: The users that have modified this record.Validation Rules-No input fieldSystem generated.
      dateTimeList:
        type: array
        items:
          type: object
          properties:
            dateTime:
              type: string
              format: date
              description: |-
                This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
                Validation Rules-No input fieldSystem generated.
      fullName:
        type: string
        description: This field is used to capture the full Name of the Customer.
      fullName__:
        type: string
        description: 'Continuation of NAME LINE 1. This field together with the previous and next two fields form the address for the Customer. The SWIFT standard of 4 lines of 35 characters each has been chosen by T24. Only in the fields NAME 1 and STREET is input mandatory. The input to field STREET is non mandatory if the field STREET.NON.MANDAT is defined as ''Y'', in the CUSTOMER.DEFAULT record whose ID is equal to the value of the SECTOR field. Where no other additional address has been defined in the DELIVERY file, the address defined in these four fields will be used on any correspondence sent to the Customer. After authorisation of the Customer record, this address will be automatically created in the DELIVERY file as the Address No. 1 and further maintenance of the Customer Address No. 1 will be performed directly in the Customer file. Any additional address to be opened or to be maintained will be done by means of the DELIVERY file.Validation Rules- 1-35 type S (uppercase alpha or numeric) characters. Special Characters ''&amp;'' and ''/'' are also allowed, with the exception that ''/'' cannot be entered as first character. If NAME.2 is reported in SWIFT Messages, the character ''&amp;'' would be replaced with spaces. (Optional input. No default value.)'
      organisationName:
        type: string
        description: 'This field is used to capture the Legal name or Trading Name of a company/organisation/Trust.3 - 200 Alphanumeric characters, Mandatory Field'
      mnemonic:
        type: string
        description: 'Specifies an alternative easy means of referencing the Customer. For countries where the Customer name should not be recorded (e.g. numbered Customers/accounts) any value can be entered in this field with the exception that the first character must be alpha. Like the ID, the Mnemonic must be unique across T24. Care should be taken when assigning Mnemonics to Customers and some rules should ideally be defined across the bank to allow easy identification of the Customers by their Mnemonics. Note - For each Customer, the System will automatically update the internal file ''MNEMONIC.CUSTOMER'' which allows the User to displaythe Customers in Mnemonic sequence instead of Customer number.Validation Rules- 3-10 type MNE (Uppercase alpha or numeric, first character alpha, or ''.'') characters. (Mandatory input)'
        enum:
          - Specifies an easy means of referencing Customer
      shortName:
        type: string
        description: 'Identifies the name of the Customer in a more descriptive form, and will be used for on-line enrichments in any field where a Customer ID or Mnemonic has been input. For countries where the Customer name should not be recorded (e.g. numbered Customers/ Accounts) any valid SWIFT character can be entered in this field with the exception that all characters cannot be spaces. A clear and unique identification of the Customer must be entered in this field. When entering or displaying data where a Customer ID or Mnemonic is involved, the content of this field will be used as the enrichment of the Customer number/Mnemonic.Validation Rules- 3-35 type S (uppercase alpha or numeric) characters. Special Characters ''&amp;'' and ''/'' are also allowed, with the exception that ''/'' cannot be entered as first character. If SHORT.NAME is reported in SWIFT Messages, the character ''&amp;'' would be replaced with spaces. (Mandatory input)'
        enum:
          - Short name of the customer
      accountOfficer:
        type: string
        description: 'Identifies the main Account Officer responsible for the Customer. his code will be defaulted on all Customer transactions within T24 except if it is overriden by another Account Officer code at the transaction or product level. The existence of the Account Officer code on every Customer transaction will allow generation of M.I.S. information at the Account Officer level.Validation Rules- 1-4 numeric character Account Officer code. (Mandatory input if no default value has been specified on the Customer DEFAULT Table for the corresponding sector code or the VERSION File [Ref- UTILITIES]. Otherwise Input is optional and will override default value.) It must be a valid code on the DEPT.ACCT.OFFICER table (Ref- GENERAL TABLES).'
        enum:
          - Account Officer responsible for the Customer
      secondOfficer:
        type: string
        description: 'Identifies the other Account Officer(s) responsible for the Customer. Only codes included in the DEPT.ACCT.OFFICER table (Ref- GENERAL TABLES) are allowed. The definition of a second Account Officer should serve the purpose of indicating who will take care of the Customer Relationship when the main ACCOUNT.OFFICER is on holiday, sick, or absent for any other reason.Validation Rules- 1-4 numeric character Account Officer code. Multivalue field. (Optional input. No default value.)'
      sector:
        type: string
        description: Identifies the Sector code relating to the Customer. If the Sector code is defined on the Customer DEFAULT table the associated default values will be retrieved and added to a new Customer record during the Validation process except if some specific values have been input by the User.Validation Rules- 1-4 numeric character Sector code. (Mandatory input) It must be a valid code on the SECTOR table. The field must not be blank.
        enum:
          - Sector code relating to the Customer
      industry:
        type: string
        description: 'Identifies the Industry in which the Customer is trading. Each User can define their own industry codes according to the use they want to make of them. Production of central bank reports classified by Industry codes or the monitoring of the overall credit exposure by Industry type are typical examples of uses of this code.Validation Rules- 1-4 numeric character Industry code. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION File [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the INDUSTRY code table.'
        enum:
          - Industry in which Customer is trading
      segment:
        type: string
        description: 'Specifies how the Customer is considered by the bank and how he fits in with the Account Officer''s overall marketing strategy. Examples of this field are- ''Prime Customer'', ''No Potential'', etc. but it must be a valid code on the TARGET code table. The values of the field should be defined according to the bank''s overall marketing strategy.Validation Rules- 1-4 numeric characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code, or the VERSION File [Ref- UTILITIES]. Otherwise input is optional and will override default value.)'
        enum:
          - Specifies how the cus is considered by the bank
      customerstatus:
        type: string
        description: 'Identifies the Status of the Customer. The values applicable to this field can be defined by each bank/branch according to the their own practice.Validation Rules- 1-4 numeric characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the Customer STATUS table.'
        enum:
          - Identifies the Status of the Customer
      nationality:
        type: string
        description: 'Identifies the Nationality of the Customer.Validation Rules- 2 type SSS (uppercase alpha) Country code characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector Code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the COUNTRY table (Ref- GENERAL TABLES).'
        enum:
          - Nationality of the Customer
      residence:
        type: string
        description: 'Identifies the Country of Residence of the Customer. Any change in the value of this field will prompt a message reminding the User that the Town Country defined in line 4 of the SWIFT address should also be changed. If the User, for any reason, does not want to change the content of line 4 of the SWIFT address, he will be forced to confirm it by entering an Override.Validation Rules- 2 type SSS (uppercase alpha) Country code characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the COUNTRY table (Ref- GENERAL TABLES).'
        enum:
          - Country of Residence of the Customer
      customertype:
        type: string
        description: 'Indicates the type of customer, and is dependant on the CR (Customer Relationship Management) module being installed. The values of PROSPECT, EXTERNAL.USER, ACTIVE or null (the equivalent of ACTIVE) are allowed. If PROSPECT is entered then if the customer does not form a business relationship with the bank, such as opening an account, limit or contract then after a period of time defined on the CUST.RETENTION field on COMPANY the customer record and all associated data will be removed from the system. If the customer forms a business relationship with the bank then the wll be activated and after this point the customer record cannot be deleted. If opted for External.user then the customer can only be used as a signatory in applications EB.SIGNATORY.GROUP and EB.EXTERNAL.USER and then in field named SIGNATORY if used in any other applications, and restricted for use in any other fields in all remaining applications.'
        enum:
          - Indicates Customer's Type
      abn:
        type: string
        description: Register Number used by Australian Businesses for their transactions. 11 digit numeric.
      acn:
        type: string
        description: Register Number used by Australian Corporates for their transactions. 9 digit numeric.
      customerStartDate:
        type: string
        format: date
        description: Contains the date on which individual/corporate becomes the customer of the bankValidation Rules-- Standard date format (YYYYMMDD). (Optional input. No default value.)
      taxFileNumber:
        type: string
        description: Standard Free Text fieldOnly 1 field required for both TFN and Exempt code with no encryption. This field should be a multi purpose field with a dropdown enquiry but the user can still key in any value without it being validated
      exemptionCodeDesc:
        type: string
        description: The field displays the enrichment for Exemption code.
      taxIdentificationNumber:
        type: string
        description: This field identifies the number used for Tax purposes in Australia.
      countryOfResidenceOfTaxPurposes:
        type: string
        description: This field displays the country of tax residence
      dateOfIncorporation:
        type: string
        format: date
        description: Specifies the Customer's date of birth or the date on which the Company was registered. Any birth or incorporation date which is before 1950 should be entered yyyymmdd.Validation Rules- Standard date format - type DD (Date format in range 1000-2049). (Optional input. No default value.) It must be a valid date which is less than or equal to today.
      issueCheques:
        type: string
        description: This field denotes whether the customer is eligible for cheque issue facility and to know first cheque book issued or not. System automatically changes the value to 'YES' once first cheque book is issued to an account for the customer. Input 'No' if the customer is not eligible for the cheque issue facility. To make cheque facility available to the customer change 'NO' to Null.Validation Rules- User can only input 'NO' or Null. Value 'YES' is updated by the system.
      hardShip:
        type: string
        description: This field if used to denote if the customer is in hardship. Accept Y or N.
      customerLiability:
        type: string
        description: 'Indicates the Customer consolidation number for credit grouping purposes, within the same branch/country. This field allows Customer exposure to be consolidated at the branch or country level when analysing the risk by the LIMIT Application. If entered it must be a valid Customer code or Mnemonic. Note - This is a no change field. Any change must be done using theLIMIT.CHANGE application.Validation Rules- 1-10 numeric character Customer Number or 3-10 type MNE (uppercase alpha or numeric, or ''.'') character Customer Mnemonic. (Optional input. Default Value is = None.) The customer number entered here must not be linked to another liability.'
      domicle:
        type: string
        description: 'Indicates country of domicile. If input, must exist on COUNTRY table.'
      confidentialText:
        type: string
        description: 'There are occasions where for the sake of client confidentiality that the client name is not used in advices or payment instructions generated by the bank. Typically a phrase such as ''One of our Clients'' would be used instead of the client name. This field controls the generation of the standard text in the &amp;#145;Ordering Customer&amp;#146; fields of the SWIFT messages, allowing the text to be in the language of the receiving bank. The standard text is defined in the ORD record in DE.TRANSLATION. To utilise this the conversion should be set to &amp;#145;CUS*TEXT*ORD&amp;#146; in the relevant DE.FORMAT.SWIFT record.Validation Rules- Input is either YES or NO Yes - will try to insert the standard text in the ordering customer field of the SWIFT message provided the system has been set correctly. If unsuccessful then the customer text will be used.'
      internetBanking:
        type: string
        description: 'If field is set to YES, then Internet Banking service will be enabled for the customer.'
      mobileBanking:
        type: string
        description: Indicates whether is Customer is subscribed to the mobile banking service or not.
      contactDate:
        type: string
        format: date
        description: Specifies the date that first contact was made with the Customer.Validation Rules- 1-9 type D (Date format in range 1950 - 2049) numeric characters. (Optional Input. No default value.) This field is for information only. It must be a valid date which is less than or equal to today.
      introducer:
        type: string
        description: Identifies the name of the person who introduced the Customer to the bank. This field is for information only and must not contain more than 35 characters.Validation Rules- 1-35 type A (alphanumeric) characters. (Optional input. No default value.)
      kycRelationship:
        type: string
        description: 'Indicates the relationship this customer is being held in. If input, must exist on CR.RELATIONSHIP table.'
      sourceOfKycVerification:
        type: string
        description: Specifies the Agency/Organisation which has verified the customer�s KYC norms. Dropdown Values. Not Mandatory.
      verifyingIndividual:
        type: string
        description: 'Specifies the name of the individual belonging to the Agency/Organisation which had conducted the customer�s KYC Verification. Dropdown, Not Mandatory.'
      kycComplete:
        type: string
        description: Know Your Customer is the due diligence and bank regulation that institutions must perform to identify their clients and ascertain relevant information pertinent to doing financial business with them. This field is for information only and contains YES or NULL. If set to YES then the information related to the customer has been collected and verified.
      lastKycReviewDate:
        type: string
        format: date
        description: Date customer KYC information was last reviewed.
      autoNextKycRev:
        type: string
        description: Date system has calculated customer should next be reviewed.
      manualNextKycRev:
        type: string
        description: Manual specification of next review date.
      lastSuitReviewDate:
        type: string
        format: date
        description: Date customer Suitability information was last reviewed.
      AutoNextSuitRevDate:
        type: string
        format: date
        description: Date system has calculated customer suitability should next be reviewed.
      ManualNextSuitRevDate:
        type: string
        format: date
        description: Manual specification of next suitability review date.
      amlCheck:
        type: string
        description: 'Field is used to describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities.It can have YES, SENT or NULL values. Depending on these values the AML.RESULT field will get updated.'
      amlResult:
        type: string
        description: 'If the value in AML.CHECK is NULL, then this field will be NULL. If the value in AML.CHECK is SENT, then the value in this field will be RESULT.AWAITED. And if the value in AML.CHECK is YES, then the value in this field will be either POSITIVE or NEGATIVE.'
      lastAmlResultDate:
        type: string
        format: date
        description: 'This field is the date field, when the last Anti Money Laundering result is performed.'
      calcRiskClass:
        type: string
        description: 'Personal Risk Class (calculated). If input, must exist on RISK.CLASS table.'
      manualRiskClass:
        type: string
        description: 'Personal Risk Class (manual override). If input, must exist on RISK.CLASS table.'
      sourceOfWealth:
        type: string
        description: |-
          Refers to the origin of the entire body of wealth (i.e. total assets) of the client.
          This information that should be obtained should given an indication as to the volume of wealth the client would reasonably be expected to have, and provided a picture of how it was acquired.

          Possible values:
          employmentIncome
          investmentIncome
          businessIncome
          oneOffPayment
          saleOfAssets
          windfall
      overrideReason:
        type: string
        description: 'Reason for changing the customer''s risk class from the calculated risk class. Mandatory, if CALC.RISK.CLASS is not the same as MANUAL.RISK.CLASS.'
      recordStatus:
        type: string
        description: |-
          Indicates the current status of the record.Validation Rules-No input fieldSystem generated.
          Example- INAU
      currNo:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
          Validation Rules-No input fieldSystem generated.
          Example- 1
      authoriser:
        type: string
        description: |-
          The user that authorised the record.Where a record has been modified multiple times (i.e the CURR.NO field is greater than 1) only the last authoriser is shown. 
          Validation Rules-No input fieldSystem generated.
      companyCode:
        type: string
        description: |-
          The company code that the record belongs to. 
          Validation Rules-No input fieldSystem generated.
          Example- AU0010001
      departmentCode:
        type: string
        description: |-
          The department code of the person that last modified the record. 
          Validation Rules-No input fieldSystem generated. 
          Example- 01
      auditorCode:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the audit information at which the function was used. 
          Validation Rules-No input fieldSystem generated.
      auditDateTime:
        type: string
        format: date
        description: |-
          Timestamp of the issue that is logged.
          17 characters Date Time format.
          It need to be displayed as DD MMM YYYY HH-MM-SS.sss.
          Example- 12 JAN 2015 12-34-25.123
          The value is not editable by the user.
  getCorporateCustomerErrorResponse:
    properties:
      header:
        $ref: '#/definitions/ErrorHeader'
      error:
        $ref: '#/definitions/getCorporateCustomerErrorResponseBody'
    description: getCorporateCustomerErrorResponse
  getCorporateCustomerErrorResponseBody:
    type: object
    properties:
      errorDetails:
        type: array
        items:
          type: object
          properties:
            fieldName:
              type: string
            code:
              type: string
            message:
              type: string
      type:
        type: string
  createIndividualCustomer:
    properties:
      header:
        $ref: '#/definitions/PayloadHeader'
      body:
        $ref: '#/definitions/createIndividualCustomerBody'
    description: createIndividualCustomer
  createIndividualCustomerBody:
    type: object
    properties:
      customerRatings:
        type: array
        description: Field identifies the rating of the customer.It is linked to EB.RATING table and must have an existing code on EB.RATING table.
        items:
          type: object
          properties:
            customerRating:
              type: string
              description: Field identifies the rating of the customer.It is linked to EB.RATING table and must have an existing code on EB.RATING table.
      address:
        type: array
        items:
          type: object
          properties:
            addressType:
              type: string
              description: 'This is field is used to select the Address type. Drop box. Options are POSTAL, Primary Residence / Registered Business and Blank. Optional Field.'
            addressLine_:
              type: string
              description: 'Address of the customer will be recorded here, based on Address type'
            locality:
              type: string
              description: This field mentions the Locality in which the customer has bought the new house.
            state:
              type: string
              description: This field mentions the State in which the customer has bought the new house.
            postCode:
              type: string
              description: The postcode of the new house purchased by the customer will be recorded here
            country:
              type: string
              description: This field mentions the Country in which the customer has bought the new house.
            dpID:
              type: string
              description: This field contains the Australia Post DPID returned from QAS after verifying an address. No input field at version level.
            addressFormatted:
              type: string
              description: This field captures the formatted Address response from QAS. Drop box Field. No input field at version level.
            addressValidated:
              type: string
              format: date
              description: This field denotes if the address if validated or not.
            addressDate:
              type: string
              format: date
              description: This field displays the date on which the QAS verification was done by the Address Interface. Standard Date Format. No input field at version level.
            addressReferenceId:
              type: string
              description: 'This field will store the Address Reference ID associated with one/multiple address returned by ESB (SearchAddress service). Upon selecting a closely matched address from the ADD.FORMATTED dropdown list, using the Address Reference ID an interface call (GetAddress service) is made which will return data for fields from ADD.LINE.1 to ADD.DP.ID.'
      preferredContactMethod:
        type: array
        items:
          type: object
          properties:
            channel:
              type: string
              description: 'This field is used to describe the communication channel of the customer. Dropdown. Optional Field Multi-value field along with ADDRESS.GROUP and ADDRESS.STATUS fields Options are POST, EMAIL, SMS, PHONE or FAX'
            addressGroup:
              type: string
              description: 'This field is used to select the Address Group for a particular Channel. Dropdown field. Optional Field. Options are ''Primary Residence / Registered Business'' or ''Postal'' when the Channel Select is ''Postal''. Or if the Channel Select is SMS/Email/PHONE the options are ''Primary'', ''Secondary'' or ''Office''.'
            addressStatus:
              type: string
              description: This field is used to select if the respective address is Undeliverable or not.Dropdown field. Optional. Options are Blank or 'Undeliverable'
      contactChannel:
        type: array
        description: Specifies the channel for communication between customer and bank Different types channels has been described below- Channel Description BRANCH When the customer visits the bank CALLCENTER Marketed through call center EMAIL Campaigned through email IM Campaigned through instant messenger INTERNET Communicated through internet NONE No channel used PERSONAL By meeting the customer personally POST Launched by mail service SKYPE Instant messenger service SMS By Short messaging service OTHER Channel not mentioned above Validation Rules- Input should have an entry on EB.LOOKUP table
        items:
          type: object
          properties:
            phone:
              type: string
              description: This field can contain phone number of the customer.
            sms:
              type: string
              description: This field can contain mobile number of the customer.
            email:
              type: string
              description: This field can contain e-mail addresses of the customer.
            addressLocation:
              type: string
              description: 'Address of the customer will be recorded here, based on Address type'
      fax:
        type: array
        description: This field can contain fax number of the customer.
        items:
          type: object
          properties:
            fax:
              type: string
              description: This field can contain fax number of the customer.
      idDocument:
        type: array
        items:
          type: object
          properties:
            legalId:
              type: string
              description: 'Part of the LEGAL multi-value set. Specifies any legal identification of the Customer. This field is for information only and specifies, for example, passport number, identity card number, PIN number etc.Validation Rules- 1-20 type A (alphanumeric) characters. (Optional input. No default value.)'
              enum:
                - Specifies any legal identification type
            legalDocumentName:
              type: string
              description: Part of the LEGAL multi-value set. Valdiated against EB.LOOKUP table CUS.LEGAL.DOC.NAME.
              enum:
                - Specifies the Legal Document name
            nameOnId:
              type: string
              description: 'Part of the LEGAL multi-value set. To support passports, enabling a holders name to be stored.'
              enum:
                - Specifies any legal identification of the Customer
            issueAuthority:
              type: string
              description: Part of the LEGAL multi-value set. Validated against EB.LOOKUP table CUS.LEGAL.ISS.AUTH.
              enum:
                - Specifies legal issuing authority
            issueDate:
              type: string
              format: date
              description: Defines the date of issue of cheques.Validation Rules-8 numeric characters.Standard date field.Optional Input (If not entered defaults to TODAY).No-change field.
            expiryDate:
              type: string
              format: date
              description: 'Part of the LEGAL multi-value set. Not mandatory, but if input must be greater than TODAY and greater than LEGAL.ISS.DATE.'
      relation:
        type: array
        description: This field is used to enumerate the customers marketing delivery preferences.Options are Marketing and Email Marketing
        items:
          type: object
          properties:
            relationCode:
              type: string
              description: Identifies the inter-relationship between Customer records and enables a link to be formed for the purpose of evaluating the overall Customer position. Input must be a valid Relation code and the reverse relationship will be shown automatically on the REVERS.REL.CODE when it has been defined in the RELATION table. An on-line display (internal file 'RELATION.CUSTOMER') also allows the User to check all the relationships of a Customer with other Customers within the same database. The relationship entered is that of the customer being created to that of the Customer defined in REL.CUSTOMER.Validation Rules- 1-3 numeric characters. Multivalue field associated with REL.CUSTOMER and REVERS.REL.CODE. (Optional input. No default value.)
              enum:
                - Identified relationship code
            relationCustomer:
              type: string
              description: 'Identifies the Customer Code or the Mnemonic of the Related Customer.Validation Rules- 1-10 numeric character Customer Number or 3-10 type SS (uppercase alpha or numeric, first character alpha) character Customer Mnemonic. Multivalue field associated with RELATION.CODE and REVERS.REL.CODE. (Mandatory input if corresponding RELATION.CODE is entered, otherwise not allowed.) Input must be a valid Customer code or mnemonic. The relationship between 2 customers may only be entered in one of the Customer records, not both.'
              enum:
                - Specifies inter-relationship Customer
            reverseRelation:
              type: string
              description: Identifies the Relationship code for the Related Customer. This field is generated automatically by the System according to the values defined in the RELATION table. No access to this field will be permitted to the User.Validation Rules- 1-3 numeric character Relation code. Multivalue field associated with RELATION.CODE and REL.CUSTOMER. This is a NOINPUT field.
              enum:
                - Relationship code for the related Customer
            role:
              type: string
              description: 'Part of the ROLE sub-value set. Role customer plays with this customer. Must exist on EB.ROLE table. Not a mandatory field, only if this customer has a role with the customer of the record.'
            moreRoleInfo:
              type: string
              description: 'Part of the ROLE sub-value set. When ROLE requires more information (see ROLE table), this field becomes mandatory. Otherwise it is optional.'
            roleNotes:
              type: string
              description: Part of the ROLE sub-value set. Additional notes that can be entered about this role.
            deliveryOptions:
              type: array
              items:
                type: object
                properties:
                  relationDeliveryOption:
                    type: string
                    description: 'Part of the ROLE sub-value set. Used on selected CUSTOMER records that are setup to be ''container'' type records which group together a set of clients, such as a joint customer relationship. Each of the clients has their own record which can be linked to the container. This field is used to specify what delivery addressing is to be used for the link customer. Only the first delivery option is used in a sub valued role list. There are three options- 1. - P.n (Use full name &amp; address of linked customer as the container PRINT.n address.) 2. - A.n (Only use address of linked customer as the container PRINT.n address. .Name &amp; short.name of the container is kept) 3.- C (Copy option - sends a copy of delivery messages using the MDR.CUSTOMER option on DE.PRODUCT). When the container customer is authorised the system creates the DE.ADDRESS records as indicated and where required will also create a DE.PRODUCT record.Validation Rules- Only one primary (PRINT.1) address can be entered, either as A.1 or P.1 If no primary address is entered the here the standard PRINT.1 address for this customer record will be created. Input only allowed if REL.CUSTOMER is present Only delivery options created in the EB.LOOKUP CUS.REL.DELIV.OPT table will be accepted.'
      financialDetails:
        type: array
        items:
          type: object
          properties:
            employmentStatus:
              type: string
              description: Identifies the employment status of the customer. This client information is required by CRM.Validation Rules-- Linked to the virtual table EB.LOOKUP. Input must have an entry on EB.LOOKUP table.
            occupation:
              type: string
              description: Specifies the occupation of the customer. This client information is required by CRM.Validation Rules-- 1-35 type A (alphanumeric) characters. Optional input. No default value.
            jobTitle:
              type: string
              description: 'Indicates the customers job title. If input, must exist on JOB.TITLE table.'
            employersName:
              type: string
              description: This field must contain the name of the customer's employer. This client information is required by CRM.Validation Rules-- 1-35 type A (alphanumeric) characters. Optional input. No default value.
            employersAddress:
              type: string
              description: This field must contain the address of the customer's employer. This client information is required by CRM.Validation Rules-- 1-35 type A (alphanumeric) characters. (Optional input. No default value.)
            employersBussiness:
              type: string
              description: This field must contain the business of customer's employer involved. This client information is required by CRM.Validation Rules-- 1-35 type A (alphanumeric) characters. Optional input. No default value.
            employmentStartId:
              type: string
              description: Specifies the employment start date of the customer. This client information is required by CRM.Validation Rules-- Standard date format (YYYYMMDD). Optional input. No default value.
            customerCurrency:
              type: string
              description: Identifies the currency of the customer. This client profile data is required by CRM.Validation Rules-- Input must be an existing code on the currency table
            salary:
              type: string
              description: Gross Salary of customer.Validation Rules-- Format of the amount fields based on the currency specified in CUSTOMER.CURRENCY field. If SALARY field has to be entered then CUSTOMER.CURRENCY field is Mandatory Corresponding currency specified in the amount field. 1-14 characters plus a decimal point (Standard Amount format) - type AMT.
            annualBonus:
              type: string
              description: Annual bonus received by customer.Validation Rules-- Format of the amount fields based on the currency specified in CUSTOMER.CURRENCY field. If ANNUAL.BONUS field has to be entered then CUSTOMER.CURRENCY field is Mandatory. Corresponding currency specified in the amount field. 1-14 characters plus a decimal point (Standard Amount format) - type AMT.
            salaryDateFrequency:
              type: string
              format: date
              description: Indicates the payment frequency of salary. This client profile data is required by CRM.Validation Rules-- This field has two parts 1) 1-9 Date characters. Default value calculated by the system from the frequency. 2) Frequency- 2-5 type FQU (standard Frequency format). In this instance the frequency code must start with 'M12' followed by the DD number. The frequency cycle must start with M12.
      residentialDetails:
        type: array
        items:
          type: object
          properties:
            residenceStatus:
              type: string
              description: Identifies the residence status of the customer. This residence information is needed by CRM.Validation Rules-- Linked to the virtual table EB.LOOKUP. All values must have an existing code on EB.LOOKUP table.
            residenceType:
              type: string
              description: This field must contain the residence type. This residence information is needed by CRM.Validation Rules-- Linked to the virtual table EB.LOOKUP. All values must have an existing code onEB.LOOKUP table.
            residenceSince:
              type: string
              description: ''
            residenceValue:
              type: string
              description: Price of the residence. This residence information is needed by CRM.Validation Rules-- Format of the amount fields based on the currency specified in LCCY. 1-14 characters plus a decimal point (Standard Amount format) - type AMT
            mortgageAmount:
              type: number
              format: int64
              description: Mortgage amount on property. This residence information is needed by CRM.Validation Rules-- Format of the amount fields based on the currency specified in LCCY. 1-14 characters plus a decimal point (Standard Amount format) - type AMT
      deliveryPreferences:
        type: array
        items:
          type: object
          properties:
            deliveryOption:
              type: string
              description: This field is used to enumerate the customers marketing delivery preferences.Options are Marketing and Email Marketing
            deliveryPref:
              type: string
              description: This field is used to select preference for the respective Delivery Option.Options are Opt-Out or blank.
      riskDetails:
        type: array
        items:
          type: object
          properties:
            riskAssetType:
              type: string
              description: Multi-value set indicating a customer's expertise in use with different asset classes. If the SC product is installed then the input must exist on ASSET.TYPE otherwise anything can be entered here.
            riskLevel:
              type: string
              description: Risk level. Values from 0 to 99 are valid.
            riskTolerance:
              type: string
              description: Indicates the tolerance in this risk class. Values from 0 to 99 are valid.
            riskFromDate:
              type: string
              format: date
              description: Date from which customer builds expertise in this risk class.
      overrideList:
        type: array
        items:
          type: object
          properties:
            override:
              type: string
              description: |-
                Records the overrides generated during processing of an activity. All the overrides generated in the property class templates (AA.ARR.XXXX, where XXXX - Property Class) for the Activity input are updated in this field.
                Standard override field, Multi-valued.
      inputterList:
        type: array
        items:
          type: object
          properties:
            inputter:
              type: string
              description: The users that have modified this record.Validation Rules-No input fieldSystem generated.
      dateTimeList:
        type: array
        items:
          type: object
          properties:
            dateTime:
              type: string
              format: date
              description: |-
                This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
                Validation Rules-No input fieldSystem generated.
      title:
        type: string
        description: 'This field is used to capture the Title in the Customer�s Name.2-12 Alphabetic characters, Mandatory Field'
      familyName:
        type: string
        description: 'This field is used to capture the Family Name of the Customer.1-40 Alphabetic characters, Mandatory Field'
      givenName:
        type: string
        description: 'This field is used to capture the Given Name of the Customer.1-40 Alphabetic characters, Optional Field'
      othergivenname_:
        type: string
        description: ''
      Mnemonic:
        type: string
        description: 'Specifies an alternative easy means of referencing the Customer. For countries where the Customer name should not be recorded (e.g. numbered Customers/accounts) any value can be entered in this field with the exception that the first character must be alpha. Like the ID, the Mnemonic must be unique across T24. Care should be taken when assigning Mnemonics to Customers and some rules should ideally be defined across the bank to allow easy identification of the Customers by their Mnemonics. Note - For each Customer, the System will automatically update the internal file ''MNEMONIC.CUSTOMER'' which allows the User to displaythe Customers in Mnemonic sequence instead of Customer number.Validation Rules- 3-10 type MNE (Uppercase alpha or numeric, first character alpha, or ''.'') characters. (Mandatory input)'
        enum:
          - Specifies an easy means of referencing Customer
      shortName:
        type: string
        description: 'Identifies the name of the Customer in a more descriptive form, and will be used for on-line enrichments in any field where a Customer ID or Mnemonic has been input. For countries where the Customer name should not be recorded (e.g. numbered Customers/ Accounts) any valid SWIFT character can be entered in this field with the exception that all characters cannot be spaces. A clear and unique identification of the Customer must be entered in this field. When entering or displaying data where a Customer ID or Mnemonic is involved, the content of this field will be used as the enrichment of the Customer number/Mnemonic.Validation Rules- 3-35 type S (uppercase alpha or numeric) characters. Special Characters ''&amp;'' and ''/'' are also allowed, with the exception that ''/'' cannot be entered as first character. If SHORT.NAME is reported in SWIFT Messages, the character ''&amp;'' would be replaced with spaces. (Mandatory input)'
        enum:
          - Short name of the customer
      gender:
        type: string
        description: Contains customer's gender. This additional client information is required by CRM.Validation Rules-- Maximum of 6 characters is allowed Allowed values are MALE FEMALE
        enum:
          - Customer's Gender
      maritalStatus:
        type: string
        description: Identifies the marital status of the customer. This customer profile information is required by CRM.Validation Rules-- Linked to the virtual table EB.LOOKUP. All values must have an entry on EB.LOOKUP table.
      accountOfficer:
        type: string
        description: 'Identifies the main Account Officer responsible for the Customer. his code will be defaulted on all Customer transactions within T24 except if it is overriden by another Account Officer code at the transaction or product level. The existence of the Account Officer code on every Customer transaction will allow generation of M.I.S. information at the Account Officer level.Validation Rules- 1-4 numeric character Account Officer code. (Mandatory input if no default value has been specified on the Customer DEFAULT Table for the corresponding sector code or the VERSION File [Ref- UTILITIES]. Otherwise Input is optional and will override default value.) It must be a valid code on the DEPT.ACCT.OFFICER table (Ref- GENERAL TABLES).'
        enum:
          - Account Officer responsible for the Customer
      sector:
        type: string
        description: Identifies the Sector code relating to the Customer. If the Sector code is defined on the Customer DEFAULT table the associated default values will be retrieved and added to a new Customer record during the Validation process except if some specific values have been input by the User.Validation Rules- 1-4 numeric character Sector code. (Mandatory input) It must be a valid code on the SECTOR table. The field must not be blank.
        enum:
          - Sector code relating to the Customer
      industry:
        type: string
        description: 'Identifies the Industry in which the Customer is trading. Each User can define their own industry codes according to the use they want to make of them. Production of central bank reports classified by Industry codes or the monitoring of the overall credit exposure by Industry type are typical examples of uses of this code.Validation Rules- 1-4 numeric character Industry code. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION File [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the INDUSTRY code table.'
        enum:
          - Industry in which Customer is trading
      segment:
        type: string
        description: 'Specifies how the Customer is considered by the bank and how he fits in with the Account Officer''s overall marketing strategy. Examples of this field are- ''Prime Customer'', ''No Potential'', etc. but it must be a valid code on the TARGET code table. The values of the field should be defined according to the bank''s overall marketing strategy.Validation Rules- 1-4 numeric characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code, or the VERSION File [Ref- UTILITIES]. Otherwise input is optional and will override default value.)'
        enum:
          - Specifies how the cus is considered by the bank
      customerstatus:
        type: string
        description: 'Identifies the Status of the Customer. The values applicable to this field can be defined by each bank/branch according to the their own practice.Validation Rules- 1-4 numeric characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the Customer STATUS table.'
        enum:
          - Identifies the Status of the Customer
      nationality:
        type: string
        description: 'Identifies the Nationality of the Customer.Validation Rules- 2 type SSS (uppercase alpha) Country code characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector Code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the COUNTRY table (Ref- GENERAL TABLES).'
        enum:
          - Nationality of the Customer
      residence:
        type: string
        description: 'Identifies the Country of Residence of the Customer. Any change in the value of this field will prompt a message reminding the User that the Town Country defined in line 4 of the SWIFT address should also be changed. If the User, for any reason, does not want to change the content of line 4 of the SWIFT address, he will be forced to confirm it by entering an Override.Validation Rules- 2 type SSS (uppercase alpha) Country code characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the COUNTRY table (Ref- GENERAL TABLES).'
        enum:
          - Country of Residence of the Customer
      customertype:
        type: string
        description: 'Indicates the type of customer, and is dependant on the CR (Customer Relationship Management) module being installed. The values of PROSPECT, EXTERNAL.USER, ACTIVE or null (the equivalent of ACTIVE) are allowed. If PROSPECT is entered then if the customer does not form a business relationship with the bank, such as opening an account, limit or contract then after a period of time defined on the CUST.RETENTION field on COMPANY the customer record and all associated data will be removed from the system. If the customer forms a business relationship with the bank then the wll be activated and after this point the customer record cannot be deleted. If opted for External.user then the customer can only be used as a signatory in applications EB.SIGNATORY.GROUP and EB.EXTERNAL.USER and then in field named SIGNATORY if used in any other applications, and restricted for use in any other fields in all remaining applications.'
        enum:
          - Indicates Customer's Type
      dateOfBirth:
        type: string
        format: date
        description: Specifies customer's date of birth. This additional client information is required by CRM.Validation Rules-- Standard date format (YYYYMMDD). Optional input. No default value.
      customerStartDate:
        type: string
        format: date
        description: Contains the date on which individual/corporate becomes the customer of the bankValidation Rules-- Standard date format (YYYYMMDD). (Optional input. No default value.)
      taxFileNumber:
        type: string
        description: Standard Free Text fieldOnly 1 field required for both TFN and Exempt code with no encryption. This field should be a multi purpose field with a dropdown enquiry but the user can still key in any value without it being validated
      taxIdentificationNumber:
        type: string
        description: This field identifies the number used for Tax purposes in Australia.
      countryOfResidenceOfTaxPurposes:
        type: string
        description: This field displays the country of tax residence
      residencyType:
        type: string
        description: 'Residence Status, e.g. Home Owner, Renting, Boarder etc.'
      dateOfChangeResTax:
        type: string
        format: date
        description: Date of change of residency for tax purpose status from resident to non-resident and vice-versa. Manually input by user.
      issueCheques:
        type: string
        description: This field denotes whether the customer is eligible for cheque issue facility and to know first cheque book issued or not. System automatically changes the value to 'YES' once first cheque book is issued to an account for the customer. Input 'No' if the customer is not eligible for the cheque issue facility. To make cheque facility available to the customer change 'NO' to Null.Validation Rules- User can only input 'NO' or Null. Value 'YES' is updated by the system.
      hardShip:
        type: string
        description: This field if used to denote if the customer is in hardship. Accept Y or N.
      customerLiability:
        type: string
        description: 'Indicates the Customer consolidation number for credit grouping purposes, within the same branch/country. This field allows Customer exposure to be consolidated at the branch or country level when analysing the risk by the LIMIT Application. If entered it must be a valid Customer code or Mnemonic. Note - This is a no change field. Any change must be done using theLIMIT.CHANGE application.Validation Rules- 1-10 numeric character Customer Number or 3-10 type MNE (uppercase alpha or numeric, or ''.'') character Customer Mnemonic. (Optional input. Default Value is = None.) The customer number entered here must not be linked to another liability.'
      netMonthlyIn:
        type: string
        description: Net income earned by customer each month.Validation Rules--Format of the amount fields based on the currency specified in LCCY 1-14 characters plus a decimal point (Standard Amount format) - type AMT.
      netMonthlyOut:
        type: string
        description: Net expenses of customer each month.Validation Rules--Format of the amount fields based on the currency specified in LCCY.1-14 characters plus a decimal point (Standard Amount format) - type AMT.
      confidentialText:
        type: string
        description: 'There are occasions where for the sake of client confidentiality that the client name is not used in advices or payment instructions generated by the bank. Typically a phrase such as ''One of our Clients'' would be used instead of the client name. This field controls the generation of the standard text in the &amp;#145;Ordering Customer&amp;#146; fields of the SWIFT messages, allowing the text to be in the language of the receiving bank. The standard text is defined in the ORD record in DE.TRANSLATION. To utilise this the conversion should be set to &amp;#145;CUS*TEXT*ORD&amp;#146; in the relevant DE.FORMAT.SWIFT record.Validation Rules- Input is either YES or NO Yes - will try to insert the standard text in the ordering customer field of the SWIFT message provided the system has been set correctly. If unsuccessful then the customer text will be used.'
      internetBanking:
        type: string
        description: 'If field is set to YES, then Internet Banking service will be enabled for the customer.'
      mobileBanking:
        type: string
        description: Indicates whether is Customer is subscribed to the mobile banking service or not.
      contactDate:
        type: string
        format: date
        description: Specifies the date that first contact was made with the Customer.Validation Rules- 1-9 type D (Date format in range 1950 - 2049) numeric characters. (Optional Input. No default value.) This field is for information only. It must be a valid date which is less than or equal to today.
      introducer:
        type: string
        description: Identifies the name of the person who introduced the Customer to the bank. This field is for information only and must not contain more than 35 characters.Validation Rules- 1-35 type A (alphanumeric) characters. (Optional input. No default value.)
      kycRelationship:
        type: string
        description: 'Indicates the relationship this customer is being held in. If input, must exist on CR.RELATIONSHIP table.'
      sourceOfKycVerification:
        type: string
        description: Specifies the Agency/Organisation which has verified the customer�s KYC norms. Dropdown Values. Not Mandatory.
      verifyingIndividual:
        type: string
        description: 'Specifies the name of the individual belonging to the Agency/Organisation which had conducted the customer�s KYC Verification. Dropdown, Not Mandatory.'
      kycComplete:
        type: string
        description: Know Your Customer is the due diligence and bank regulation that institutions must perform to identify their clients and ascertain relevant information pertinent to doing financial business with them. This field is for information only and contains YES or NULL. If set to YES then the information related to the customer has been collected and verified.
      lastKycReviewDate:
        type: string
        format: date
        description: Date customer KYC information was last reviewed.
      autoNextKycRev:
        type: string
        description: Date system has calculated customer should next be reviewed.
      manualNextKycRev:
        type: string
        description: Manual specification of next review date.
      lastSuitReviewDate:
        type: string
        format: date
        description: Date customer Suitability information was last reviewed.
      AutoNextSuitRevDate:
        type: string
        format: date
        description: Date system has calculated customer suitability should next be reviewed.
      ManualNextSuitRevDate:
        type: string
        format: date
        description: Manual specification of next suitability review date.
      amlCheck:
        type: string
        description: 'Field is used to describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities.It can have YES, SENT or NULL values. Depending on these values the AML.RESULT field will get updated.'
      amlResult:
        type: string
        description: 'If the value in AML.CHECK is NULL, then this field will be NULL. If the value in AML.CHECK is SENT, then the value in this field will be RESULT.AWAITED. And if the value in AML.CHECK is YES, then the value in this field will be either POSITIVE or NEGATIVE.'
      lastAmlResultDate:
        type: string
        format: date
        description: 'This field is the date field, when the last Anti Money Laundering result is performed.'
      calcRiskClass:
        type: string
        description: 'Personal Risk Class (calculated). If input, must exist on RISK.CLASS table.'
      manualRiskClass:
        type: string
        description: 'Personal Risk Class (manual override). If input, must exist on RISK.CLASS table.'
      sourceOfWealth:
        type: string
        description: |-
          Refers to the origin of the entire body of wealth (i.e. total assets) of the client.
          This information that should be obtained should given an indication as to the volume of wealth the client would reasonably be expected to have, and provided a picture of how it was acquired.

          Possible values:
          employmentIncome
          investmentIncome
          businessIncome
          oneOffPayment
          saleOfAssets
          windfall
      overrideReason:
        type: string
        description: 'Reason for changing the customer''s risk class from the calculated risk class. Mandatory, if CALC.RISK.CLASS is not the same as MANUAL.RISK.CLASS.'
      recordStatus:
        type: string
        description: |-
          Indicates the current status of the record.Validation Rules-No input fieldSystem generated.
          Example- INAU
      currNo:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
          Validation Rules-No input fieldSystem generated.
          Example- 1
      authoriser:
        type: string
        description: |-
          The user that authorised the record.Where a record has been modified multiple times (i.e the CURR.NO field is greater than 1) only the last authoriser is shown. 
          Validation Rules-No input fieldSystem generated.
      companyCode:
        type: string
        description: |-
          The company code that the record belongs to. 
          Validation Rules-No input fieldSystem generated.
          Example- AU0010001
      departmentCode:
        type: string
        description: |-
          The department code of the person that last modified the record. 
          Validation Rules-No input fieldSystem generated. 
          Example- 01
      auditorCode:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the audit information at which the function was used. 
          Validation Rules-No input fieldSystem generated.
      auditDateTime:
        type: string
        format: date
        description: |-
          Timestamp of the issue that is logged.
          17 characters Date Time format.
          It need to be displayed as DD MMM YYYY HH-MM-SS.sss.
          Example- 12 JAN 2015 12-34-25.123
          The value is not editable by the user.
  createIndividualCustomerResponse:
    properties:
      header:
        $ref: '#/definitions/ScreenHeader'
      body:
        $ref: '#/definitions/createIndividualCustomerResponseBody'
    description: createIndividualCustomerResponse
  createIndividualCustomerResponseBody:
    type: object
    properties:
      customerRatings:
        type: array
        description: Field identifies the rating of the customer.It is linked to EB.RATING table and must have an existing code on EB.RATING table.
        items:
          type: object
          properties:
            customerRating:
              type: string
              description: Field identifies the rating of the customer.It is linked to EB.RATING table and must have an existing code on EB.RATING table.
      address:
        type: array
        items:
          type: object
          properties:
            addressType:
              type: string
              description: 'This is field is used to select the Address type. Drop box. Options are POSTAL, Primary Residence / Registered Business and Blank. Optional Field.'
            addressLine_:
              type: string
              description: 'Address of the customer will be recorded here, based on Address type'
            locality:
              type: string
              description: This field mentions the Locality in which the customer has bought the new house.
            state:
              type: string
              description: This field mentions the State in which the customer has bought the new house.
            postCode:
              type: string
              description: The postcode of the new house purchased by the customer will be recorded here
            country:
              type: string
              description: This field mentions the Country in which the customer has bought the new house.
            dpID:
              type: string
              description: This field contains the Australia Post DPID returned from QAS after verifying an address. No input field at version level.
            addressFormatted:
              type: string
              description: This field captures the formatted Address response from QAS. Drop box Field. No input field at version level.
            addressValidated:
              type: string
              format: date
              description: This field denotes if the address if validated or not.
            addressDate:
              type: string
              format: date
              description: This field displays the date on which the QAS verification was done by the Address Interface. Standard Date Format. No input field at version level.
            addressReferenceId:
              type: string
              description: 'This field will store the Address Reference ID associated with one/multiple address returned by ESB (SearchAddress service). Upon selecting a closely matched address from the ADD.FORMATTED dropdown list, using the Address Reference ID an interface call (GetAddress service) is made which will return data for fields from ADD.LINE.1 to ADD.DP.ID.'
      preferredContactMethod:
        type: array
        items:
          type: object
          properties:
            channel:
              type: string
              description: 'This field is used to describe the communication channel of the customer. Dropdown. Optional Field Multi-value field along with ADDRESS.GROUP and ADDRESS.STATUS fields Options are POST, EMAIL, SMS, PHONE or FAX'
            addressGroup:
              type: string
              description: 'This field is used to select the Address Group for a particular Channel. Dropdown field. Optional Field. Options are ''Primary Residence / Registered Business'' or ''Postal'' when the Channel Select is ''Postal''. Or if the Channel Select is SMS/Email/PHONE the options are ''Primary'', ''Secondary'' or ''Office''.'
            addressStatus:
              type: string
              description: This field is used to select if the respective address is Undeliverable or not.Dropdown field. Optional. Options are Blank or 'Undeliverable'
      contactChannel:
        type: array
        description: Specifies the channel for communication between customer and bank Different types channels has been described below- Channel Description BRANCH When the customer visits the bank CALLCENTER Marketed through call center EMAIL Campaigned through email IM Campaigned through instant messenger INTERNET Communicated through internet NONE No channel used PERSONAL By meeting the customer personally POST Launched by mail service SKYPE Instant messenger service SMS By Short messaging service OTHER Channel not mentioned above Validation Rules- Input should have an entry on EB.LOOKUP table
        items:
          type: object
          properties:
            phone:
              type: string
              description: This field can contain phone number of the customer.
            sms:
              type: string
              description: This field can contain mobile number of the customer.
            email:
              type: string
              description: This field can contain e-mail addresses of the customer.
            addressLocation:
              type: string
              description: 'Address of the customer will be recorded here, based on Address type'
      fax:
        type: array
        description: This field can contain fax number of the customer.
        items:
          type: object
          properties:
            fax:
              type: string
              description: This field can contain fax number of the customer.
      idDocument:
        type: array
        items:
          type: object
          properties:
            legalId:
              type: string
              description: 'Part of the LEGAL multi-value set. Specifies any legal identification of the Customer. This field is for information only and specifies, for example, passport number, identity card number, PIN number etc.Validation Rules- 1-20 type A (alphanumeric) characters. (Optional input. No default value.)'
              enum:
                - Specifies any legal identification type
            legalDocumentName:
              type: string
              description: Part of the LEGAL multi-value set. Valdiated against EB.LOOKUP table CUS.LEGAL.DOC.NAME.
              enum:
                - Specifies the Legal Document name
            nameOnId:
              type: string
              description: 'Part of the LEGAL multi-value set. To support passports, enabling a holders name to be stored.'
              enum:
                - Specifies any legal identification of the Customer
            issueAuthority:
              type: string
              description: Part of the LEGAL multi-value set. Validated against EB.LOOKUP table CUS.LEGAL.ISS.AUTH.
              enum:
                - Specifies legal issuing authority
            issueDate:
              type: string
              format: date
              description: Defines the date of issue of cheques.Validation Rules-8 numeric characters.Standard date field.Optional Input (If not entered defaults to TODAY).No-change field.
            expiryDate:
              type: string
              format: date
              description: 'Part of the LEGAL multi-value set. Not mandatory, but if input must be greater than TODAY and greater than LEGAL.ISS.DATE.'
      relation:
        type: array
        description: This field is used to enumerate the customers marketing delivery preferences.Options are Marketing and Email Marketing
        items:
          type: object
          properties:
            relationCode:
              type: string
              description: Identifies the inter-relationship between Customer records and enables a link to be formed for the purpose of evaluating the overall Customer position. Input must be a valid Relation code and the reverse relationship will be shown automatically on the REVERS.REL.CODE when it has been defined in the RELATION table. An on-line display (internal file 'RELATION.CUSTOMER') also allows the User to check all the relationships of a Customer with other Customers within the same database. The relationship entered is that of the customer being created to that of the Customer defined in REL.CUSTOMER.Validation Rules- 1-3 numeric characters. Multivalue field associated with REL.CUSTOMER and REVERS.REL.CODE. (Optional input. No default value.)
              enum:
                - Identified relationship code
            relationCustomer:
              type: string
              description: 'Identifies the Customer Code or the Mnemonic of the Related Customer.Validation Rules- 1-10 numeric character Customer Number or 3-10 type SS (uppercase alpha or numeric, first character alpha) character Customer Mnemonic. Multivalue field associated with RELATION.CODE and REVERS.REL.CODE. (Mandatory input if corresponding RELATION.CODE is entered, otherwise not allowed.) Input must be a valid Customer code or mnemonic. The relationship between 2 customers may only be entered in one of the Customer records, not both.'
              enum:
                - Specifies inter-relationship Customer
            reverseRelation:
              type: string
              description: Identifies the Relationship code for the Related Customer. This field is generated automatically by the System according to the values defined in the RELATION table. No access to this field will be permitted to the User.Validation Rules- 1-3 numeric character Relation code. Multivalue field associated with RELATION.CODE and REL.CUSTOMER. This is a NOINPUT field.
              enum:
                - Relationship code for the related Customer
            role:
              type: string
              description: 'Part of the ROLE sub-value set. Role customer plays with this customer. Must exist on EB.ROLE table. Not a mandatory field, only if this customer has a role with the customer of the record.'
            moreRoleInfo:
              type: string
              description: 'Part of the ROLE sub-value set. When ROLE requires more information (see ROLE table), this field becomes mandatory. Otherwise it is optional.'
            roleNotes:
              type: string
              description: Part of the ROLE sub-value set. Additional notes that can be entered about this role.
            deliveryOptions:
              type: array
              items:
                type: object
                properties:
                  relationDeliveryOption:
                    type: string
                    description: 'Part of the ROLE sub-value set. Used on selected CUSTOMER records that are setup to be ''container'' type records which group together a set of clients, such as a joint customer relationship. Each of the clients has their own record which can be linked to the container. This field is used to specify what delivery addressing is to be used for the link customer. Only the first delivery option is used in a sub valued role list. There are three options- 1. - P.n (Use full name &amp; address of linked customer as the container PRINT.n address.) 2. - A.n (Only use address of linked customer as the container PRINT.n address. .Name &amp; short.name of the container is kept) 3.- C (Copy option - sends a copy of delivery messages using the MDR.CUSTOMER option on DE.PRODUCT). When the container customer is authorised the system creates the DE.ADDRESS records as indicated and where required will also create a DE.PRODUCT record.Validation Rules- Only one primary (PRINT.1) address can be entered, either as A.1 or P.1 If no primary address is entered the here the standard PRINT.1 address for this customer record will be created. Input only allowed if REL.CUSTOMER is present Only delivery options created in the EB.LOOKUP CUS.REL.DELIV.OPT table will be accepted.'
      financialDetails:
        type: array
        items:
          type: object
          properties:
            employmentStatus:
              type: string
              description: Identifies the employment status of the customer. This client information is required by CRM.Validation Rules-- Linked to the virtual table EB.LOOKUP. Input must have an entry on EB.LOOKUP table.
            occupation:
              type: string
              description: Specifies the occupation of the customer. This client information is required by CRM.Validation Rules-- 1-35 type A (alphanumeric) characters. Optional input. No default value.
            jobTitle:
              type: string
              description: 'Indicates the customers job title. If input, must exist on JOB.TITLE table.'
            employersName:
              type: string
              description: This field must contain the name of the customer's employer. This client information is required by CRM.Validation Rules-- 1-35 type A (alphanumeric) characters. Optional input. No default value.
            employersAddress:
              type: string
              description: This field must contain the address of the customer's employer. This client information is required by CRM.Validation Rules-- 1-35 type A (alphanumeric) characters. (Optional input. No default value.)
            employersBussiness:
              type: string
              description: This field must contain the business of customer's employer involved. This client information is required by CRM.Validation Rules-- 1-35 type A (alphanumeric) characters. Optional input. No default value.
            employmentStartId:
              type: string
              description: Specifies the employment start date of the customer. This client information is required by CRM.Validation Rules-- Standard date format (YYYYMMDD). Optional input. No default value.
            customerCurrency:
              type: string
              description: Identifies the currency of the customer. This client profile data is required by CRM.Validation Rules-- Input must be an existing code on the currency table
            salary:
              type: string
              description: Gross Salary of customer.Validation Rules-- Format of the amount fields based on the currency specified in CUSTOMER.CURRENCY field. If SALARY field has to be entered then CUSTOMER.CURRENCY field is Mandatory Corresponding currency specified in the amount field. 1-14 characters plus a decimal point (Standard Amount format) - type AMT.
            annualBonus:
              type: string
              description: Annual bonus received by customer.Validation Rules-- Format of the amount fields based on the currency specified in CUSTOMER.CURRENCY field. If ANNUAL.BONUS field has to be entered then CUSTOMER.CURRENCY field is Mandatory. Corresponding currency specified in the amount field. 1-14 characters plus a decimal point (Standard Amount format) - type AMT.
            salaryDateFrequency:
              type: string
              format: date
              description: Indicates the payment frequency of salary. This client profile data is required by CRM.Validation Rules-- This field has two parts 1) 1-9 Date characters. Default value calculated by the system from the frequency. 2) Frequency- 2-5 type FQU (standard Frequency format). In this instance the frequency code must start with 'M12' followed by the DD number. The frequency cycle must start with M12.
      residentialDetails:
        type: array
        items:
          type: object
          properties:
            residenceStatus:
              type: string
              description: Identifies the residence status of the customer. This residence information is needed by CRM.Validation Rules-- Linked to the virtual table EB.LOOKUP. All values must have an existing code on EB.LOOKUP table.
            residenceType:
              type: string
              description: This field must contain the residence type. This residence information is needed by CRM.Validation Rules-- Linked to the virtual table EB.LOOKUP. All values must have an existing code onEB.LOOKUP table.
            residenceSince:
              type: string
              description: ''
            residenceValue:
              type: string
              description: Price of the residence. This residence information is needed by CRM.Validation Rules-- Format of the amount fields based on the currency specified in LCCY. 1-14 characters plus a decimal point (Standard Amount format) - type AMT
            mortgageAmount:
              type: number
              format: int64
              description: Mortgage amount on property. This residence information is needed by CRM.Validation Rules-- Format of the amount fields based on the currency specified in LCCY. 1-14 characters plus a decimal point (Standard Amount format) - type AMT
      deliveryPreferences:
        type: array
        items:
          type: object
          properties:
            deliveryOption:
              type: string
              description: This field is used to enumerate the customers marketing delivery preferences.Options are Marketing and Email Marketing
            deliveryPref:
              type: string
              description: This field is used to select preference for the respective Delivery Option.Options are Opt-Out or blank.
      riskDetails:
        type: array
        items:
          type: object
          properties:
            riskAssetType:
              type: string
              description: Multi-value set indicating a customer's expertise in use with different asset classes. If the SC product is installed then the input must exist on ASSET.TYPE otherwise anything can be entered here.
            riskLevel:
              type: string
              description: Risk level. Values from 0 to 99 are valid.
            riskTolerance:
              type: string
              description: Indicates the tolerance in this risk class. Values from 0 to 99 are valid.
            riskFromDate:
              type: string
              format: date
              description: Date from which customer builds expertise in this risk class.
      overrideList:
        type: array
        items:
          type: object
          properties:
            override:
              type: string
              description: |-
                Records the overrides generated during processing of an activity. All the overrides generated in the property class templates (AA.ARR.XXXX, where XXXX - Property Class) for the Activity input are updated in this field.
                Standard override field, Multi-valued.
      inputterList:
        type: array
        items:
          type: object
          properties:
            inputter:
              type: string
              description: The users that have modified this record.Validation Rules-No input fieldSystem generated.
      dateTimeList:
        type: array
        items:
          type: object
          properties:
            dateTime:
              type: string
              format: date
              description: |-
                This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
                Validation Rules-No input fieldSystem generated.
      title:
        type: string
        description: 'This field is used to capture the Title in the Customer�s Name.2-12 Alphabetic characters, Mandatory Field'
      familyName:
        type: string
        description: 'This field is used to capture the Family Name of the Customer.1-40 Alphabetic characters, Mandatory Field'
      givenName:
        type: string
        description: 'This field is used to capture the Given Name of the Customer.1-40 Alphabetic characters, Optional Field'
      othergivenname_:
        type: string
        description: ''
      Mnemonic:
        type: string
        description: 'Specifies an alternative easy means of referencing the Customer. For countries where the Customer name should not be recorded (e.g. numbered Customers/accounts) any value can be entered in this field with the exception that the first character must be alpha. Like the ID, the Mnemonic must be unique across T24. Care should be taken when assigning Mnemonics to Customers and some rules should ideally be defined across the bank to allow easy identification of the Customers by their Mnemonics. Note - For each Customer, the System will automatically update the internal file ''MNEMONIC.CUSTOMER'' which allows the User to displaythe Customers in Mnemonic sequence instead of Customer number.Validation Rules- 3-10 type MNE (Uppercase alpha or numeric, first character alpha, or ''.'') characters. (Mandatory input)'
        enum:
          - Specifies an easy means of referencing Customer
      shortName:
        type: string
        description: 'Identifies the name of the Customer in a more descriptive form, and will be used for on-line enrichments in any field where a Customer ID or Mnemonic has been input. For countries where the Customer name should not be recorded (e.g. numbered Customers/ Accounts) any valid SWIFT character can be entered in this field with the exception that all characters cannot be spaces. A clear and unique identification of the Customer must be entered in this field. When entering or displaying data where a Customer ID or Mnemonic is involved, the content of this field will be used as the enrichment of the Customer number/Mnemonic.Validation Rules- 3-35 type S (uppercase alpha or numeric) characters. Special Characters ''&amp;'' and ''/'' are also allowed, with the exception that ''/'' cannot be entered as first character. If SHORT.NAME is reported in SWIFT Messages, the character ''&amp;'' would be replaced with spaces. (Mandatory input)'
        enum:
          - Short name of the customer
      gender:
        type: string
        description: Contains customer's gender. This additional client information is required by CRM.Validation Rules-- Maximum of 6 characters is allowed Allowed values are MALE FEMALE
        enum:
          - Customer's Gender
      maritalStatus:
        type: string
        description: Identifies the marital status of the customer. This customer profile information is required by CRM.Validation Rules-- Linked to the virtual table EB.LOOKUP. All values must have an entry on EB.LOOKUP table.
      accountOfficer:
        type: string
        description: 'Identifies the main Account Officer responsible for the Customer. his code will be defaulted on all Customer transactions within T24 except if it is overriden by another Account Officer code at the transaction or product level. The existence of the Account Officer code on every Customer transaction will allow generation of M.I.S. information at the Account Officer level.Validation Rules- 1-4 numeric character Account Officer code. (Mandatory input if no default value has been specified on the Customer DEFAULT Table for the corresponding sector code or the VERSION File [Ref- UTILITIES]. Otherwise Input is optional and will override default value.) It must be a valid code on the DEPT.ACCT.OFFICER table (Ref- GENERAL TABLES).'
        enum:
          - Account Officer responsible for the Customer
      sector:
        type: string
        description: Identifies the Sector code relating to the Customer. If the Sector code is defined on the Customer DEFAULT table the associated default values will be retrieved and added to a new Customer record during the Validation process except if some specific values have been input by the User.Validation Rules- 1-4 numeric character Sector code. (Mandatory input) It must be a valid code on the SECTOR table. The field must not be blank.
        enum:
          - Sector code relating to the Customer
      industry:
        type: string
        description: 'Identifies the Industry in which the Customer is trading. Each User can define their own industry codes according to the use they want to make of them. Production of central bank reports classified by Industry codes or the monitoring of the overall credit exposure by Industry type are typical examples of uses of this code.Validation Rules- 1-4 numeric character Industry code. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION File [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the INDUSTRY code table.'
        enum:
          - Industry in which Customer is trading
      segment:
        type: string
        description: 'Specifies how the Customer is considered by the bank and how he fits in with the Account Officer''s overall marketing strategy. Examples of this field are- ''Prime Customer'', ''No Potential'', etc. but it must be a valid code on the TARGET code table. The values of the field should be defined according to the bank''s overall marketing strategy.Validation Rules- 1-4 numeric characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code, or the VERSION File [Ref- UTILITIES]. Otherwise input is optional and will override default value.)'
        enum:
          - Specifies how the cus is considered by the bank
      customerstatus:
        type: string
        description: 'Identifies the Status of the Customer. The values applicable to this field can be defined by each bank/branch according to the their own practice.Validation Rules- 1-4 numeric characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the Customer STATUS table.'
        enum:
          - Identifies the Status of the Customer
      nationality:
        type: string
        description: 'Identifies the Nationality of the Customer.Validation Rules- 2 type SSS (uppercase alpha) Country code characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector Code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the COUNTRY table (Ref- GENERAL TABLES).'
        enum:
          - Nationality of the Customer
      residence:
        type: string
        description: 'Identifies the Country of Residence of the Customer. Any change in the value of this field will prompt a message reminding the User that the Town Country defined in line 4 of the SWIFT address should also be changed. If the User, for any reason, does not want to change the content of line 4 of the SWIFT address, he will be forced to confirm it by entering an Override.Validation Rules- 2 type SSS (uppercase alpha) Country code characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the COUNTRY table (Ref- GENERAL TABLES).'
        enum:
          - Country of Residence of the Customer
      customertype:
        type: string
        description: 'Indicates the type of customer, and is dependant on the CR (Customer Relationship Management) module being installed. The values of PROSPECT, EXTERNAL.USER, ACTIVE or null (the equivalent of ACTIVE) are allowed. If PROSPECT is entered then if the customer does not form a business relationship with the bank, such as opening an account, limit or contract then after a period of time defined on the CUST.RETENTION field on COMPANY the customer record and all associated data will be removed from the system. If the customer forms a business relationship with the bank then the wll be activated and after this point the customer record cannot be deleted. If opted for External.user then the customer can only be used as a signatory in applications EB.SIGNATORY.GROUP and EB.EXTERNAL.USER and then in field named SIGNATORY if used in any other applications, and restricted for use in any other fields in all remaining applications.'
        enum:
          - Indicates Customer's Type
      dateOfBirth:
        type: string
        format: date
        description: Specifies customer's date of birth. This additional client information is required by CRM.Validation Rules-- Standard date format (YYYYMMDD). Optional input. No default value.
      customerStartDate:
        type: string
        format: date
        description: Contains the date on which individual/corporate becomes the customer of the bankValidation Rules-- Standard date format (YYYYMMDD). (Optional input. No default value.)
      taxFileNumber:
        type: string
        description: Standard Free Text fieldOnly 1 field required for both TFN and Exempt code with no encryption. This field should be a multi purpose field with a dropdown enquiry but the user can still key in any value without it being validated
      exemptionCodeDesc:
        type: string
        description: The field displays the enrichment for Exemption code.
      taxIdentificationNumber:
        type: string
        description: This field identifies the number used for Tax purposes in Australia.
      countryOfResidenceOfTaxPurposes:
        type: string
        description: This field displays the country of tax residence
      residencyType:
        type: string
        description: 'Residence Status, e.g. Home Owner, Renting, Boarder etc.'
      dateOfChangeResTax:
        type: string
        format: date
        description: Date of change of residency for tax purpose status from resident to non-resident and vice-versa. Manually input by user.
      issueCheques:
        type: string
        description: This field denotes whether the customer is eligible for cheque issue facility and to know first cheque book issued or not. System automatically changes the value to 'YES' once first cheque book is issued to an account for the customer. Input 'No' if the customer is not eligible for the cheque issue facility. To make cheque facility available to the customer change 'NO' to Null.Validation Rules- User can only input 'NO' or Null. Value 'YES' is updated by the system.
      hardShip:
        type: string
        description: This field if used to denote if the customer is in hardship. Accept Y or N.
      customerLiability:
        type: string
        description: 'Indicates the Customer consolidation number for credit grouping purposes, within the same branch/country. This field allows Customer exposure to be consolidated at the branch or country level when analysing the risk by the LIMIT Application. If entered it must be a valid Customer code or Mnemonic. Note - This is a no change field. Any change must be done using theLIMIT.CHANGE application.Validation Rules- 1-10 numeric character Customer Number or 3-10 type MNE (uppercase alpha or numeric, or ''.'') character Customer Mnemonic. (Optional input. Default Value is = None.) The customer number entered here must not be linked to another liability.'
      netMonthlyIn:
        type: string
        description: Net income earned by customer each month.Validation Rules--Format of the amount fields based on the currency specified in LCCY 1-14 characters plus a decimal point (Standard Amount format) - type AMT.
      netMonthlyOut:
        type: string
        description: Net expenses of customer each month.Validation Rules--Format of the amount fields based on the currency specified in LCCY.1-14 characters plus a decimal point (Standard Amount format) - type AMT.
      confidentialText:
        type: string
        description: 'There are occasions where for the sake of client confidentiality that the client name is not used in advices or payment instructions generated by the bank. Typically a phrase such as ''One of our Clients'' would be used instead of the client name. This field controls the generation of the standard text in the &amp;#145;Ordering Customer&amp;#146; fields of the SWIFT messages, allowing the text to be in the language of the receiving bank. The standard text is defined in the ORD record in DE.TRANSLATION. To utilise this the conversion should be set to &amp;#145;CUS*TEXT*ORD&amp;#146; in the relevant DE.FORMAT.SWIFT record.Validation Rules- Input is either YES or NO Yes - will try to insert the standard text in the ordering customer field of the SWIFT message provided the system has been set correctly. If unsuccessful then the customer text will be used.'
      internetBanking:
        type: string
        description: 'If field is set to YES, then Internet Banking service will be enabled for the customer.'
      mobileBanking:
        type: string
        description: Indicates whether is Customer is subscribed to the mobile banking service or not.
      contactDate:
        type: string
        format: date
        description: Specifies the date that first contact was made with the Customer.Validation Rules- 1-9 type D (Date format in range 1950 - 2049) numeric characters. (Optional Input. No default value.) This field is for information only. It must be a valid date which is less than or equal to today.
      introducer:
        type: string
        description: Identifies the name of the person who introduced the Customer to the bank. This field is for information only and must not contain more than 35 characters.Validation Rules- 1-35 type A (alphanumeric) characters. (Optional input. No default value.)
      kycRelationship:
        type: string
        description: 'Indicates the relationship this customer is being held in. If input, must exist on CR.RELATIONSHIP table.'
      sourceOfKycVerification:
        type: string
        description: Specifies the Agency/Organisation which has verified the customer�s KYC norms. Dropdown Values. Not Mandatory.
      verifyingIndividual:
        type: string
        description: 'Specifies the name of the individual belonging to the Agency/Organisation which had conducted the customer�s KYC Verification. Dropdown, Not Mandatory.'
      kycComplete:
        type: string
        description: Know Your Customer is the due diligence and bank regulation that institutions must perform to identify their clients and ascertain relevant information pertinent to doing financial business with them. This field is for information only and contains YES or NULL. If set to YES then the information related to the customer has been collected and verified.
      lastKycReviewDate:
        type: string
        format: date
        description: Date customer KYC information was last reviewed.
      autoNextKycRev:
        type: string
        description: Date system has calculated customer should next be reviewed.
      manualNextKycRev:
        type: string
        description: Manual specification of next review date.
      lastSuitReviewDate:
        type: string
        format: date
        description: Date customer Suitability information was last reviewed.
      AutoNextSuitRevDate:
        type: string
        format: date
        description: Date system has calculated customer suitability should next be reviewed.
      ManualNextSuitRevDate:
        type: string
        format: date
        description: Manual specification of next suitability review date.
      amlCheck:
        type: string
        description: 'Field is used to describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities.It can have YES, SENT or NULL values. Depending on these values the AML.RESULT field will get updated.'
      amlResult:
        type: string
        description: 'If the value in AML.CHECK is NULL, then this field will be NULL. If the value in AML.CHECK is SENT, then the value in this field will be RESULT.AWAITED. And if the value in AML.CHECK is YES, then the value in this field will be either POSITIVE or NEGATIVE.'
      lastAmlResultDate:
        type: string
        format: date
        description: 'This field is the date field, when the last Anti Money Laundering result is performed.'
      calcRiskClass:
        type: string
        description: 'Personal Risk Class (calculated). If input, must exist on RISK.CLASS table.'
      manualRiskClass:
        type: string
        description: 'Personal Risk Class (manual override). If input, must exist on RISK.CLASS table.'
      sourceOfWealth:
        type: string
        description: |-
          Refers to the origin of the entire body of wealth (i.e. total assets) of the client.
          This information that should be obtained should given an indication as to the volume of wealth the client would reasonably be expected to have, and provided a picture of how it was acquired.

          Possible values:
          employmentIncome
          investmentIncome
          businessIncome
          oneOffPayment
          saleOfAssets
          windfall
      overrideReason:
        type: string
        description: 'Reason for changing the customer''s risk class from the calculated risk class. Mandatory, if CALC.RISK.CLASS is not the same as MANUAL.RISK.CLASS.'
      recordStatus:
        type: string
        description: |-
          Indicates the current status of the record.Validation Rules-No input fieldSystem generated.
          Example- INAU
      currNo:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
          Validation Rules-No input fieldSystem generated.
          Example- 1
      authoriser:
        type: string
        description: |-
          The user that authorised the record.Where a record has been modified multiple times (i.e the CURR.NO field is greater than 1) only the last authoriser is shown. 
          Validation Rules-No input fieldSystem generated.
      companyCode:
        type: string
        description: |-
          The company code that the record belongs to. 
          Validation Rules-No input fieldSystem generated.
          Example- AU0010001
      departmentCode:
        type: string
        description: |-
          The department code of the person that last modified the record. 
          Validation Rules-No input fieldSystem generated. 
          Example- 01
      auditorCode:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the audit information at which the function was used. 
          Validation Rules-No input fieldSystem generated.
      auditDateTime:
        type: string
        format: date
        description: |-
          Timestamp of the issue that is logged.
          17 characters Date Time format.
          It need to be displayed as DD MMM YYYY HH-MM-SS.sss.
          Example- 12 JAN 2015 12-34-25.123
          The value is not editable by the user.
  createIndividualCustomerErrorResponse:
    properties:
      header:
        $ref: '#/definitions/ErrorHeader'
      error:
        $ref: '#/definitions/createIndividualCustomerErrorResponseBody'
    description: createIndividualCustomerErrorResponse
  createIndividualCustomerErrorResponseBody:
    type: object
    properties:
      errorDetails:
        type: array
        items:
          type: object
          properties:
            fieldName:
              type: string
            code:
              type: string
            message:
              type: string
      type:
        type: string
  updateIndividualCustomer:
    properties:
      header:
        $ref: '#/definitions/PayloadHeader'
      body:
        $ref: '#/definitions/updateIndividualCustomerBody'
    description: updateIndividualCustomer
  updateIndividualCustomerBody:
    type: object
    properties:
      customerRatings:
        type: array
        description: Field identifies the rating of the customer.It is linked to EB.RATING table and must have an existing code on EB.RATING table.
        items:
          type: object
          properties:
            customerRating:
              type: string
              description: Field identifies the rating of the customer.It is linked to EB.RATING table and must have an existing code on EB.RATING table.
      address:
        type: array
        items:
          type: object
          properties:
            addressType:
              type: string
              description: 'This is field is used to select the Address type. Drop box. Options are POSTAL, Primary Residence / Registered Business and Blank. Optional Field.'
            addressLine_:
              type: string
              description: 'Address of the customer will be recorded here, based on Address type'
            locality:
              type: string
              description: This field mentions the Locality in which the customer has bought the new house.
            state:
              type: string
              description: This field mentions the State in which the customer has bought the new house.
            postCode:
              type: string
              description: The postcode of the new house purchased by the customer will be recorded here
            country:
              type: string
              description: This field mentions the Country in which the customer has bought the new house.
            dpID:
              type: string
              description: This field contains the Australia Post DPID returned from QAS after verifying an address. No input field at version level.
            addressFormatted:
              type: string
              description: This field captures the formatted Address response from QAS. Drop box Field. No input field at version level.
            addressValidated:
              type: string
              format: date
              description: This field denotes if the address if validated or not.
            addressDate:
              type: string
              format: date
              description: This field displays the date on which the QAS verification was done by the Address Interface. Standard Date Format. No input field at version level.
            addressReferenceId:
              type: string
              description: 'This field will store the Address Reference ID associated with one/multiple address returned by ESB (SearchAddress service). Upon selecting a closely matched address from the ADD.FORMATTED dropdown list, using the Address Reference ID an interface call (GetAddress service) is made which will return data for fields from ADD.LINE.1 to ADD.DP.ID.'
      preferredContactMethod:
        type: array
        items:
          type: object
          properties:
            channel:
              type: string
              description: 'This field is used to describe the communication channel of the customer. Dropdown. Optional Field Multi-value field along with ADDRESS.GROUP and ADDRESS.STATUS fields Options are POST, EMAIL, SMS, PHONE or FAX'
            addressGroup:
              type: string
              description: 'This field is used to select the Address Group for a particular Channel. Dropdown field. Optional Field. Options are ''Primary Residence / Registered Business'' or ''Postal'' when the Channel Select is ''Postal''. Or if the Channel Select is SMS/Email/PHONE the options are ''Primary'', ''Secondary'' or ''Office''.'
            addressStatus:
              type: string
              description: This field is used to select if the respective address is Undeliverable or not.Dropdown field. Optional. Options are Blank or 'Undeliverable'
      contactChannel:
        type: array
        description: Specifies the channel for communication between customer and bank Different types channels has been described below- Channel Description BRANCH When the customer visits the bank CALLCENTER Marketed through call center EMAIL Campaigned through email IM Campaigned through instant messenger INTERNET Communicated through internet NONE No channel used PERSONAL By meeting the customer personally POST Launched by mail service SKYPE Instant messenger service SMS By Short messaging service OTHER Channel not mentioned above Validation Rules- Input should have an entry on EB.LOOKUP table
        items:
          type: object
          properties:
            phone:
              type: string
              description: This field can contain phone number of the customer.
            sms:
              type: string
              description: This field can contain mobile number of the customer.
            email:
              type: string
              description: This field can contain e-mail addresses of the customer.
            addressLocation:
              type: string
              description: 'Address of the customer will be recorded here, based on Address type'
      fax:
        type: array
        description: This field can contain fax number of the customer.
        items:
          type: object
          properties:
            fax:
              type: string
              description: This field can contain fax number of the customer.
      idDocument:
        type: array
        items:
          type: object
          properties:
            legalId:
              type: string
              description: 'Part of the LEGAL multi-value set. Specifies any legal identification of the Customer. This field is for information only and specifies, for example, passport number, identity card number, PIN number etc.Validation Rules- 1-20 type A (alphanumeric) characters. (Optional input. No default value.)'
              enum:
                - Specifies any legal identification type
            legalDocumentName:
              type: string
              description: Part of the LEGAL multi-value set. Valdiated against EB.LOOKUP table CUS.LEGAL.DOC.NAME.
              enum:
                - Specifies the Legal Document name
            nameOnId:
              type: string
              description: 'Part of the LEGAL multi-value set. To support passports, enabling a holders name to be stored.'
              enum:
                - Specifies any legal identification of the Customer
            issueAuthority:
              type: string
              description: Part of the LEGAL multi-value set. Validated against EB.LOOKUP table CUS.LEGAL.ISS.AUTH.
              enum:
                - Specifies legal issuing authority
            issueDate:
              type: string
              format: date
              description: Defines the date of issue of cheques.Validation Rules-8 numeric characters.Standard date field.Optional Input (If not entered defaults to TODAY).No-change field.
            expiryDate:
              type: string
              format: date
              description: 'Part of the LEGAL multi-value set. Not mandatory, but if input must be greater than TODAY and greater than LEGAL.ISS.DATE.'
      relation:
        type: array
        description: This field is used to enumerate the customers marketing delivery preferences.Options are Marketing and Email Marketing
        items:
          type: object
          properties:
            relationCode:
              type: string
              description: Identifies the inter-relationship between Customer records and enables a link to be formed for the purpose of evaluating the overall Customer position. Input must be a valid Relation code and the reverse relationship will be shown automatically on the REVERS.REL.CODE when it has been defined in the RELATION table. An on-line display (internal file 'RELATION.CUSTOMER') also allows the User to check all the relationships of a Customer with other Customers within the same database. The relationship entered is that of the customer being created to that of the Customer defined in REL.CUSTOMER.Validation Rules- 1-3 numeric characters. Multivalue field associated with REL.CUSTOMER and REVERS.REL.CODE. (Optional input. No default value.)
              enum:
                - Identified relationship code
            relationCustomer:
              type: string
              description: 'Identifies the Customer Code or the Mnemonic of the Related Customer.Validation Rules- 1-10 numeric character Customer Number or 3-10 type SS (uppercase alpha or numeric, first character alpha) character Customer Mnemonic. Multivalue field associated with RELATION.CODE and REVERS.REL.CODE. (Mandatory input if corresponding RELATION.CODE is entered, otherwise not allowed.) Input must be a valid Customer code or mnemonic. The relationship between 2 customers may only be entered in one of the Customer records, not both.'
              enum:
                - Specifies inter-relationship Customer
            reverseRelation:
              type: string
              description: Identifies the Relationship code for the Related Customer. This field is generated automatically by the System according to the values defined in the RELATION table. No access to this field will be permitted to the User.Validation Rules- 1-3 numeric character Relation code. Multivalue field associated with RELATION.CODE and REL.CUSTOMER. This is a NOINPUT field.
              enum:
                - Relationship code for the related Customer
            role:
              type: string
              description: 'Part of the ROLE sub-value set. Role customer plays with this customer. Must exist on EB.ROLE table. Not a mandatory field, only if this customer has a role with the customer of the record.'
            moreRoleInfo:
              type: string
              description: 'Part of the ROLE sub-value set. When ROLE requires more information (see ROLE table), this field becomes mandatory. Otherwise it is optional.'
            roleNotes:
              type: string
              description: Part of the ROLE sub-value set. Additional notes that can be entered about this role.
            deliveryOptions:
              type: array
              items:
                type: object
                properties:
                  relationDeliveryOption:
                    type: string
                    description: 'Part of the ROLE sub-value set. Used on selected CUSTOMER records that are setup to be ''container'' type records which group together a set of clients, such as a joint customer relationship. Each of the clients has their own record which can be linked to the container. This field is used to specify what delivery addressing is to be used for the link customer. Only the first delivery option is used in a sub valued role list. There are three options- 1. - P.n (Use full name &amp; address of linked customer as the container PRINT.n address.) 2. - A.n (Only use address of linked customer as the container PRINT.n address. .Name &amp; short.name of the container is kept) 3.- C (Copy option - sends a copy of delivery messages using the MDR.CUSTOMER option on DE.PRODUCT). When the container customer is authorised the system creates the DE.ADDRESS records as indicated and where required will also create a DE.PRODUCT record.Validation Rules- Only one primary (PRINT.1) address can be entered, either as A.1 or P.1 If no primary address is entered the here the standard PRINT.1 address for this customer record will be created. Input only allowed if REL.CUSTOMER is present Only delivery options created in the EB.LOOKUP CUS.REL.DELIV.OPT table will be accepted.'
      financialDetails:
        type: array
        items:
          type: object
          properties:
            employmentStatus:
              type: string
              description: Identifies the employment status of the customer. This client information is required by CRM.Validation Rules-- Linked to the virtual table EB.LOOKUP. Input must have an entry on EB.LOOKUP table.
            occupation:
              type: string
              description: Specifies the occupation of the customer. This client information is required by CRM.Validation Rules-- 1-35 type A (alphanumeric) characters. Optional input. No default value.
            jobTitle:
              type: string
              description: 'Indicates the customers job title. If input, must exist on JOB.TITLE table.'
            employersName:
              type: string
              description: This field must contain the name of the customer's employer. This client information is required by CRM.Validation Rules-- 1-35 type A (alphanumeric) characters. Optional input. No default value.
            employersAddress:
              type: string
              description: This field must contain the address of the customer's employer. This client information is required by CRM.Validation Rules-- 1-35 type A (alphanumeric) characters. (Optional input. No default value.)
            employersBussiness:
              type: string
              description: This field must contain the business of customer's employer involved. This client information is required by CRM.Validation Rules-- 1-35 type A (alphanumeric) characters. Optional input. No default value.
            employmentStartId:
              type: string
              description: Specifies the employment start date of the customer. This client information is required by CRM.Validation Rules-- Standard date format (YYYYMMDD). Optional input. No default value.
            customerCurrency:
              type: string
              description: Identifies the currency of the customer. This client profile data is required by CRM.Validation Rules-- Input must be an existing code on the currency table
            salary:
              type: string
              description: Gross Salary of customer.Validation Rules-- Format of the amount fields based on the currency specified in CUSTOMER.CURRENCY field. If SALARY field has to be entered then CUSTOMER.CURRENCY field is Mandatory Corresponding currency specified in the amount field. 1-14 characters plus a decimal point (Standard Amount format) - type AMT.
            annualBonus:
              type: string
              description: Annual bonus received by customer.Validation Rules-- Format of the amount fields based on the currency specified in CUSTOMER.CURRENCY field. If ANNUAL.BONUS field has to be entered then CUSTOMER.CURRENCY field is Mandatory. Corresponding currency specified in the amount field. 1-14 characters plus a decimal point (Standard Amount format) - type AMT.
            salaryDateFrequency:
              type: string
              format: date
              description: Indicates the payment frequency of salary. This client profile data is required by CRM.Validation Rules-- This field has two parts 1) 1-9 Date characters. Default value calculated by the system from the frequency. 2) Frequency- 2-5 type FQU (standard Frequency format). In this instance the frequency code must start with 'M12' followed by the DD number. The frequency cycle must start with M12.
      residentialDetails:
        type: array
        items:
          type: object
          properties:
            residenceStatus:
              type: string
              description: Identifies the residence status of the customer. This residence information is needed by CRM.Validation Rules-- Linked to the virtual table EB.LOOKUP. All values must have an existing code on EB.LOOKUP table.
            residenceType:
              type: string
              description: This field must contain the residence type. This residence information is needed by CRM.Validation Rules-- Linked to the virtual table EB.LOOKUP. All values must have an existing code onEB.LOOKUP table.
            residenceSince:
              type: string
              description: ''
            residenceValue:
              type: string
              description: Price of the residence. This residence information is needed by CRM.Validation Rules-- Format of the amount fields based on the currency specified in LCCY. 1-14 characters plus a decimal point (Standard Amount format) - type AMT
            mortgageAmount:
              type: number
              format: int64
              description: Mortgage amount on property. This residence information is needed by CRM.Validation Rules-- Format of the amount fields based on the currency specified in LCCY. 1-14 characters plus a decimal point (Standard Amount format) - type AMT
      deliveryPreferences:
        type: array
        items:
          type: object
          properties:
            deliveryOption:
              type: string
              description: This field is used to enumerate the customers marketing delivery preferences.Options are Marketing and Email Marketing
            deliveryPref:
              type: string
              description: This field is used to select preference for the respective Delivery Option.Options are Opt-Out or blank.
      riskDetails:
        type: array
        items:
          type: object
          properties:
            riskAssetType:
              type: string
              description: Multi-value set indicating a customer's expertise in use with different asset classes. If the SC product is installed then the input must exist on ASSET.TYPE otherwise anything can be entered here.
            riskLevel:
              type: string
              description: Risk level. Values from 0 to 99 are valid.
            riskTolerance:
              type: string
              description: Indicates the tolerance in this risk class. Values from 0 to 99 are valid.
            riskFromDate:
              type: string
              format: date
              description: Date from which customer builds expertise in this risk class.
      overrideList:
        type: array
        items:
          type: object
          properties:
            override:
              type: string
              description: |-
                Records the overrides generated during processing of an activity. All the overrides generated in the property class templates (AA.ARR.XXXX, where XXXX - Property Class) for the Activity input are updated in this field.
                Standard override field, Multi-valued.
      inputterList:
        type: array
        items:
          type: object
          properties:
            inputter:
              type: string
              description: The users that have modified this record.Validation Rules-No input fieldSystem generated.
      dateTimeList:
        type: array
        items:
          type: object
          properties:
            dateTime:
              type: string
              format: date
              description: |-
                This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
                Validation Rules-No input fieldSystem generated.
      title:
        type: string
        description: 'This field is used to capture the Title in the Customer�s Name.2-12 Alphabetic characters, Mandatory Field'
      familyName:
        type: string
        description: 'This field is used to capture the Family Name of the Customer.1-40 Alphabetic characters, Mandatory Field'
      givenName:
        type: string
        description: 'This field is used to capture the Given Name of the Customer.1-40 Alphabetic characters, Optional Field'
      othergivenname_:
        type: string
        description: ''
      Mnemonic:
        type: string
        description: 'Specifies an alternative easy means of referencing the Customer. For countries where the Customer name should not be recorded (e.g. numbered Customers/accounts) any value can be entered in this field with the exception that the first character must be alpha. Like the ID, the Mnemonic must be unique across T24. Care should be taken when assigning Mnemonics to Customers and some rules should ideally be defined across the bank to allow easy identification of the Customers by their Mnemonics. Note - For each Customer, the System will automatically update the internal file ''MNEMONIC.CUSTOMER'' which allows the User to displaythe Customers in Mnemonic sequence instead of Customer number.Validation Rules- 3-10 type MNE (Uppercase alpha or numeric, first character alpha, or ''.'') characters. (Mandatory input)'
        enum:
          - Specifies an easy means of referencing Customer
      shortName:
        type: string
        description: 'Identifies the name of the Customer in a more descriptive form, and will be used for on-line enrichments in any field where a Customer ID or Mnemonic has been input. For countries where the Customer name should not be recorded (e.g. numbered Customers/ Accounts) any valid SWIFT character can be entered in this field with the exception that all characters cannot be spaces. A clear and unique identification of the Customer must be entered in this field. When entering or displaying data where a Customer ID or Mnemonic is involved, the content of this field will be used as the enrichment of the Customer number/Mnemonic.Validation Rules- 3-35 type S (uppercase alpha or numeric) characters. Special Characters ''&amp;'' and ''/'' are also allowed, with the exception that ''/'' cannot be entered as first character. If SHORT.NAME is reported in SWIFT Messages, the character ''&amp;'' would be replaced with spaces. (Mandatory input)'
        enum:
          - Short name of the customer
      gender:
        type: string
        description: Contains customer's gender. This additional client information is required by CRM.Validation Rules-- Maximum of 6 characters is allowed Allowed values are MALE FEMALE
        enum:
          - Customer's Gender
      maritalStatus:
        type: string
        description: Identifies the marital status of the customer. This customer profile information is required by CRM.Validation Rules-- Linked to the virtual table EB.LOOKUP. All values must have an entry on EB.LOOKUP table.
      accountOfficer:
        type: string
        description: 'Identifies the main Account Officer responsible for the Customer. his code will be defaulted on all Customer transactions within T24 except if it is overriden by another Account Officer code at the transaction or product level. The existence of the Account Officer code on every Customer transaction will allow generation of M.I.S. information at the Account Officer level.Validation Rules- 1-4 numeric character Account Officer code. (Mandatory input if no default value has been specified on the Customer DEFAULT Table for the corresponding sector code or the VERSION File [Ref- UTILITIES]. Otherwise Input is optional and will override default value.) It must be a valid code on the DEPT.ACCT.OFFICER table (Ref- GENERAL TABLES).'
        enum:
          - Account Officer responsible for the Customer
      sector:
        type: string
        description: Identifies the Sector code relating to the Customer. If the Sector code is defined on the Customer DEFAULT table the associated default values will be retrieved and added to a new Customer record during the Validation process except if some specific values have been input by the User.Validation Rules- 1-4 numeric character Sector code. (Mandatory input) It must be a valid code on the SECTOR table. The field must not be blank.
        enum:
          - Sector code relating to the Customer
      industry:
        type: string
        description: 'Identifies the Industry in which the Customer is trading. Each User can define their own industry codes according to the use they want to make of them. Production of central bank reports classified by Industry codes or the monitoring of the overall credit exposure by Industry type are typical examples of uses of this code.Validation Rules- 1-4 numeric character Industry code. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION File [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the INDUSTRY code table.'
        enum:
          - Industry in which Customer is trading
      segment:
        type: string
        description: 'Specifies how the Customer is considered by the bank and how he fits in with the Account Officer''s overall marketing strategy. Examples of this field are- ''Prime Customer'', ''No Potential'', etc. but it must be a valid code on the TARGET code table. The values of the field should be defined according to the bank''s overall marketing strategy.Validation Rules- 1-4 numeric characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code, or the VERSION File [Ref- UTILITIES]. Otherwise input is optional and will override default value.)'
        enum:
          - Specifies how the cus is considered by the bank
      customerstatus:
        type: string
        description: 'Identifies the Status of the Customer. The values applicable to this field can be defined by each bank/branch according to the their own practice.Validation Rules- 1-4 numeric characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the Customer STATUS table.'
        enum:
          - Identifies the Status of the Customer
      nationality:
        type: string
        description: 'Identifies the Nationality of the Customer.Validation Rules- 2 type SSS (uppercase alpha) Country code characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector Code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the COUNTRY table (Ref- GENERAL TABLES).'
        enum:
          - Nationality of the Customer
      residence:
        type: string
        description: 'Identifies the Country of Residence of the Customer. Any change in the value of this field will prompt a message reminding the User that the Town Country defined in line 4 of the SWIFT address should also be changed. If the User, for any reason, does not want to change the content of line 4 of the SWIFT address, he will be forced to confirm it by entering an Override.Validation Rules- 2 type SSS (uppercase alpha) Country code characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the COUNTRY table (Ref- GENERAL TABLES).'
        enum:
          - Country of Residence of the Customer
      customertype:
        type: string
        description: 'Indicates the type of customer, and is dependant on the CR (Customer Relationship Management) module being installed. The values of PROSPECT, EXTERNAL.USER, ACTIVE or null (the equivalent of ACTIVE) are allowed. If PROSPECT is entered then if the customer does not form a business relationship with the bank, such as opening an account, limit or contract then after a period of time defined on the CUST.RETENTION field on COMPANY the customer record and all associated data will be removed from the system. If the customer forms a business relationship with the bank then the wll be activated and after this point the customer record cannot be deleted. If opted for External.user then the customer can only be used as a signatory in applications EB.SIGNATORY.GROUP and EB.EXTERNAL.USER and then in field named SIGNATORY if used in any other applications, and restricted for use in any other fields in all remaining applications.'
        enum:
          - Indicates Customer's Type
      dateOfBirth:
        type: string
        format: date
        description: Specifies customer's date of birth. This additional client information is required by CRM.Validation Rules-- Standard date format (YYYYMMDD). Optional input. No default value.
      customerStartDate:
        type: string
        format: date
        description: Contains the date on which individual/corporate becomes the customer of the bankValidation Rules-- Standard date format (YYYYMMDD). (Optional input. No default value.)
      taxFileNumber:
        type: string
        description: Standard Free Text fieldOnly 1 field required for both TFN and Exempt code with no encryption. This field should be a multi purpose field with a dropdown enquiry but the user can still key in any value without it being validated
      taxIdentificationNumber:
        type: string
        description: This field identifies the number used for Tax purposes in Australia.
      countryOfResidenceOfTaxPurposes:
        type: string
        description: This field displays the country of tax residence
      residencyType:
        type: string
        description: 'Residence Status, e.g. Home Owner, Renting, Boarder etc.'
      dateOfChangeResTax:
        type: string
        format: date
        description: Date of change of residency for tax purpose status from resident to non-resident and vice-versa. Manually input by user.
      issueCheques:
        type: string
        description: This field denotes whether the customer is eligible for cheque issue facility and to know first cheque book issued or not. System automatically changes the value to 'YES' once first cheque book is issued to an account for the customer. Input 'No' if the customer is not eligible for the cheque issue facility. To make cheque facility available to the customer change 'NO' to Null.Validation Rules- User can only input 'NO' or Null. Value 'YES' is updated by the system.
      hardShip:
        type: string
        description: This field if used to denote if the customer is in hardship. Accept Y or N.
      customerLiability:
        type: string
        description: 'Indicates the Customer consolidation number for credit grouping purposes, within the same branch/country. This field allows Customer exposure to be consolidated at the branch or country level when analysing the risk by the LIMIT Application. If entered it must be a valid Customer code or Mnemonic. Note - This is a no change field. Any change must be done using theLIMIT.CHANGE application.Validation Rules- 1-10 numeric character Customer Number or 3-10 type MNE (uppercase alpha or numeric, or ''.'') character Customer Mnemonic. (Optional input. Default Value is = None.) The customer number entered here must not be linked to another liability.'
      netMonthlyIn:
        type: string
        description: Net income earned by customer each month.Validation Rules--Format of the amount fields based on the currency specified in LCCY 1-14 characters plus a decimal point (Standard Amount format) - type AMT.
      netMonthlyOut:
        type: string
        description: Net expenses of customer each month.Validation Rules--Format of the amount fields based on the currency specified in LCCY.1-14 characters plus a decimal point (Standard Amount format) - type AMT.
      confidentialText:
        type: string
        description: 'There are occasions where for the sake of client confidentiality that the client name is not used in advices or payment instructions generated by the bank. Typically a phrase such as ''One of our Clients'' would be used instead of the client name. This field controls the generation of the standard text in the &amp;#145;Ordering Customer&amp;#146; fields of the SWIFT messages, allowing the text to be in the language of the receiving bank. The standard text is defined in the ORD record in DE.TRANSLATION. To utilise this the conversion should be set to &amp;#145;CUS*TEXT*ORD&amp;#146; in the relevant DE.FORMAT.SWIFT record.Validation Rules- Input is either YES or NO Yes - will try to insert the standard text in the ordering customer field of the SWIFT message provided the system has been set correctly. If unsuccessful then the customer text will be used.'
      internetBanking:
        type: string
        description: 'If field is set to YES, then Internet Banking service will be enabled for the customer.'
      mobileBanking:
        type: string
        description: Indicates whether is Customer is subscribed to the mobile banking service or not.
      contactDate:
        type: string
        format: date
        description: Specifies the date that first contact was made with the Customer.Validation Rules- 1-9 type D (Date format in range 1950 - 2049) numeric characters. (Optional Input. No default value.) This field is for information only. It must be a valid date which is less than or equal to today.
      introducer:
        type: string
        description: Identifies the name of the person who introduced the Customer to the bank. This field is for information only and must not contain more than 35 characters.Validation Rules- 1-35 type A (alphanumeric) characters. (Optional input. No default value.)
      kycRelationship:
        type: string
        description: 'Indicates the relationship this customer is being held in. If input, must exist on CR.RELATIONSHIP table.'
      sourceOfKycVerification:
        type: string
        description: Specifies the Agency/Organisation which has verified the customer�s KYC norms. Dropdown Values. Not Mandatory.
      verifyingIndividual:
        type: string
        description: 'Specifies the name of the individual belonging to the Agency/Organisation which had conducted the customer�s KYC Verification. Dropdown, Not Mandatory.'
      kycComplete:
        type: string
        description: Know Your Customer is the due diligence and bank regulation that institutions must perform to identify their clients and ascertain relevant information pertinent to doing financial business with them. This field is for information only and contains YES or NULL. If set to YES then the information related to the customer has been collected and verified.
      lastKycReviewDate:
        type: string
        format: date
        description: Date customer KYC information was last reviewed.
      autoNextKycRev:
        type: string
        description: Date system has calculated customer should next be reviewed.
      manualNextKycRev:
        type: string
        description: Manual specification of next review date.
      lastSuitReviewDate:
        type: string
        format: date
        description: Date customer Suitability information was last reviewed.
      AutoNextSuitRevDate:
        type: string
        format: date
        description: Date system has calculated customer suitability should next be reviewed.
      ManualNextSuitRevDate:
        type: string
        format: date
        description: Manual specification of next suitability review date.
      amlCheck:
        type: string
        description: 'Field is used to describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities.It can have YES, SENT or NULL values. Depending on these values the AML.RESULT field will get updated.'
      amlResult:
        type: string
        description: 'If the value in AML.CHECK is NULL, then this field will be NULL. If the value in AML.CHECK is SENT, then the value in this field will be RESULT.AWAITED. And if the value in AML.CHECK is YES, then the value in this field will be either POSITIVE or NEGATIVE.'
      lastAmlResultDate:
        type: string
        format: date
        description: 'This field is the date field, when the last Anti Money Laundering result is performed.'
      calcRiskClass:
        type: string
        description: 'Personal Risk Class (calculated). If input, must exist on RISK.CLASS table.'
      manualRiskClass:
        type: string
        description: 'Personal Risk Class (manual override). If input, must exist on RISK.CLASS table.'
      sourceOfWealth:
        type: string
        description: |-
          Refers to the origin of the entire body of wealth (i.e. total assets) of the client.
          This information that should be obtained should given an indication as to the volume of wealth the client would reasonably be expected to have, and provided a picture of how it was acquired.

          Possible values:
          employmentIncome
          investmentIncome
          businessIncome
          oneOffPayment
          saleOfAssets
          windfall
      overrideReason:
        type: string
        description: 'Reason for changing the customer''s risk class from the calculated risk class. Mandatory, if CALC.RISK.CLASS is not the same as MANUAL.RISK.CLASS.'
      recordStatus:
        type: string
        description: |-
          Indicates the current status of the record.Validation Rules-No input fieldSystem generated.
          Example- INAU
      currNo:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
          Validation Rules-No input fieldSystem generated.
          Example- 1
      authoriser:
        type: string
        description: |-
          The user that authorised the record.Where a record has been modified multiple times (i.e the CURR.NO field is greater than 1) only the last authoriser is shown. 
          Validation Rules-No input fieldSystem generated.
      companyCode:
        type: string
        description: |-
          The company code that the record belongs to. 
          Validation Rules-No input fieldSystem generated.
          Example- AU0010001
      departmentCode:
        type: string
        description: |-
          The department code of the person that last modified the record. 
          Validation Rules-No input fieldSystem generated. 
          Example- 01
      auditorCode:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the audit information at which the function was used. 
          Validation Rules-No input fieldSystem generated.
      auditDateTime:
        type: string
        format: date
        description: |-
          Timestamp of the issue that is logged.
          17 characters Date Time format.
          It need to be displayed as DD MMM YYYY HH-MM-SS.sss.
          Example- 12 JAN 2015 12-34-25.123
          The value is not editable by the user.
  updateIndividualCustomerResponse:
    properties:
      header:
        $ref: '#/definitions/ScreenHeader'
      body:
        $ref: '#/definitions/updateIndividualCustomerResponseBody'
    description: updateIndividualCustomerResponse
  updateIndividualCustomerResponseBody:
    type: object
    properties:
      customerRatings:
        type: array
        description: Field identifies the rating of the customer.It is linked to EB.RATING table and must have an existing code on EB.RATING table.
        items:
          type: object
          properties:
            customerRating:
              type: string
              description: Field identifies the rating of the customer.It is linked to EB.RATING table and must have an existing code on EB.RATING table.
      address:
        type: array
        items:
          type: object
          properties:
            addressType:
              type: string
              description: 'This is field is used to select the Address type. Drop box. Options are POSTAL, Primary Residence / Registered Business and Blank. Optional Field.'
            addressLine_:
              type: string
              description: 'Address of the customer will be recorded here, based on Address type'
            locality:
              type: string
              description: This field mentions the Locality in which the customer has bought the new house.
            state:
              type: string
              description: This field mentions the State in which the customer has bought the new house.
            postCode:
              type: string
              description: The postcode of the new house purchased by the customer will be recorded here
            country:
              type: string
              description: This field mentions the Country in which the customer has bought the new house.
            dpID:
              type: string
              description: This field contains the Australia Post DPID returned from QAS after verifying an address. No input field at version level.
            addressFormatted:
              type: string
              description: This field captures the formatted Address response from QAS. Drop box Field. No input field at version level.
            addressValidated:
              type: string
              format: date
              description: This field denotes if the address if validated or not.
            addressDate:
              type: string
              format: date
              description: This field displays the date on which the QAS verification was done by the Address Interface. Standard Date Format. No input field at version level.
            addressReferenceId:
              type: string
              description: 'This field will store the Address Reference ID associated with one/multiple address returned by ESB (SearchAddress service). Upon selecting a closely matched address from the ADD.FORMATTED dropdown list, using the Address Reference ID an interface call (GetAddress service) is made which will return data for fields from ADD.LINE.1 to ADD.DP.ID.'
      preferredContactMethod:
        type: array
        items:
          type: object
          properties:
            channel:
              type: string
              description: 'This field is used to describe the communication channel of the customer. Dropdown. Optional Field Multi-value field along with ADDRESS.GROUP and ADDRESS.STATUS fields Options are POST, EMAIL, SMS, PHONE or FAX'
            addressGroup:
              type: string
              description: 'This field is used to select the Address Group for a particular Channel. Dropdown field. Optional Field. Options are ''Primary Residence / Registered Business'' or ''Postal'' when the Channel Select is ''Postal''. Or if the Channel Select is SMS/Email/PHONE the options are ''Primary'', ''Secondary'' or ''Office''.'
            addressStatus:
              type: string
              description: This field is used to select if the respective address is Undeliverable or not.Dropdown field. Optional. Options are Blank or 'Undeliverable'
      contactChannel:
        type: array
        description: Specifies the channel for communication between customer and bank Different types channels has been described below- Channel Description BRANCH When the customer visits the bank CALLCENTER Marketed through call center EMAIL Campaigned through email IM Campaigned through instant messenger INTERNET Communicated through internet NONE No channel used PERSONAL By meeting the customer personally POST Launched by mail service SKYPE Instant messenger service SMS By Short messaging service OTHER Channel not mentioned above Validation Rules- Input should have an entry on EB.LOOKUP table
        items:
          type: object
          properties:
            phone:
              type: string
              description: This field can contain phone number of the customer.
            sms:
              type: string
              description: This field can contain mobile number of the customer.
            email:
              type: string
              description: This field can contain e-mail addresses of the customer.
            addressLocation:
              type: string
              description: 'Address of the customer will be recorded here, based on Address type'
      fax:
        type: array
        description: This field can contain fax number of the customer.
        items:
          type: object
          properties:
            fax:
              type: string
              description: This field can contain fax number of the customer.
      idDocument:
        type: array
        items:
          type: object
          properties:
            legalId:
              type: string
              description: 'Part of the LEGAL multi-value set. Specifies any legal identification of the Customer. This field is for information only and specifies, for example, passport number, identity card number, PIN number etc.Validation Rules- 1-20 type A (alphanumeric) characters. (Optional input. No default value.)'
              enum:
                - Specifies any legal identification type
            legalDocumentName:
              type: string
              description: Part of the LEGAL multi-value set. Valdiated against EB.LOOKUP table CUS.LEGAL.DOC.NAME.
              enum:
                - Specifies the Legal Document name
            nameOnId:
              type: string
              description: 'Part of the LEGAL multi-value set. To support passports, enabling a holders name to be stored.'
              enum:
                - Specifies any legal identification of the Customer
            issueAuthority:
              type: string
              description: Part of the LEGAL multi-value set. Validated against EB.LOOKUP table CUS.LEGAL.ISS.AUTH.
              enum:
                - Specifies legal issuing authority
            issueDate:
              type: string
              format: date
              description: Defines the date of issue of cheques.Validation Rules-8 numeric characters.Standard date field.Optional Input (If not entered defaults to TODAY).No-change field.
            expiryDate:
              type: string
              format: date
              description: 'Part of the LEGAL multi-value set. Not mandatory, but if input must be greater than TODAY and greater than LEGAL.ISS.DATE.'
      relation:
        type: array
        description: This field is used to enumerate the customers marketing delivery preferences.Options are Marketing and Email Marketing
        items:
          type: object
          properties:
            relationCode:
              type: string
              description: Identifies the inter-relationship between Customer records and enables a link to be formed for the purpose of evaluating the overall Customer position. Input must be a valid Relation code and the reverse relationship will be shown automatically on the REVERS.REL.CODE when it has been defined in the RELATION table. An on-line display (internal file 'RELATION.CUSTOMER') also allows the User to check all the relationships of a Customer with other Customers within the same database. The relationship entered is that of the customer being created to that of the Customer defined in REL.CUSTOMER.Validation Rules- 1-3 numeric characters. Multivalue field associated with REL.CUSTOMER and REVERS.REL.CODE. (Optional input. No default value.)
              enum:
                - Identified relationship code
            relationCustomer:
              type: string
              description: 'Identifies the Customer Code or the Mnemonic of the Related Customer.Validation Rules- 1-10 numeric character Customer Number or 3-10 type SS (uppercase alpha or numeric, first character alpha) character Customer Mnemonic. Multivalue field associated with RELATION.CODE and REVERS.REL.CODE. (Mandatory input if corresponding RELATION.CODE is entered, otherwise not allowed.) Input must be a valid Customer code or mnemonic. The relationship between 2 customers may only be entered in one of the Customer records, not both.'
              enum:
                - Specifies inter-relationship Customer
            reverseRelation:
              type: string
              description: Identifies the Relationship code for the Related Customer. This field is generated automatically by the System according to the values defined in the RELATION table. No access to this field will be permitted to the User.Validation Rules- 1-3 numeric character Relation code. Multivalue field associated with RELATION.CODE and REL.CUSTOMER. This is a NOINPUT field.
              enum:
                - Relationship code for the related Customer
            role:
              type: string
              description: 'Part of the ROLE sub-value set. Role customer plays with this customer. Must exist on EB.ROLE table. Not a mandatory field, only if this customer has a role with the customer of the record.'
            moreRoleInfo:
              type: string
              description: 'Part of the ROLE sub-value set. When ROLE requires more information (see ROLE table), this field becomes mandatory. Otherwise it is optional.'
            roleNotes:
              type: string
              description: Part of the ROLE sub-value set. Additional notes that can be entered about this role.
            deliveryOptions:
              type: array
              items:
                type: object
                properties:
                  relationDeliveryOption:
                    type: string
                    description: 'Part of the ROLE sub-value set. Used on selected CUSTOMER records that are setup to be ''container'' type records which group together a set of clients, such as a joint customer relationship. Each of the clients has their own record which can be linked to the container. This field is used to specify what delivery addressing is to be used for the link customer. Only the first delivery option is used in a sub valued role list. There are three options- 1. - P.n (Use full name &amp; address of linked customer as the container PRINT.n address.) 2. - A.n (Only use address of linked customer as the container PRINT.n address. .Name &amp; short.name of the container is kept) 3.- C (Copy option - sends a copy of delivery messages using the MDR.CUSTOMER option on DE.PRODUCT). When the container customer is authorised the system creates the DE.ADDRESS records as indicated and where required will also create a DE.PRODUCT record.Validation Rules- Only one primary (PRINT.1) address can be entered, either as A.1 or P.1 If no primary address is entered the here the standard PRINT.1 address for this customer record will be created. Input only allowed if REL.CUSTOMER is present Only delivery options created in the EB.LOOKUP CUS.REL.DELIV.OPT table will be accepted.'
      financialDetails:
        type: array
        items:
          type: object
          properties:
            employmentStatus:
              type: string
              description: Identifies the employment status of the customer. This client information is required by CRM.Validation Rules-- Linked to the virtual table EB.LOOKUP. Input must have an entry on EB.LOOKUP table.
            occupation:
              type: string
              description: Specifies the occupation of the customer. This client information is required by CRM.Validation Rules-- 1-35 type A (alphanumeric) characters. Optional input. No default value.
            jobTitle:
              type: string
              description: 'Indicates the customers job title. If input, must exist on JOB.TITLE table.'
            employersName:
              type: string
              description: This field must contain the name of the customer's employer. This client information is required by CRM.Validation Rules-- 1-35 type A (alphanumeric) characters. Optional input. No default value.
            employersAddress:
              type: string
              description: This field must contain the address of the customer's employer. This client information is required by CRM.Validation Rules-- 1-35 type A (alphanumeric) characters. (Optional input. No default value.)
            employersBussiness:
              type: string
              description: This field must contain the business of customer's employer involved. This client information is required by CRM.Validation Rules-- 1-35 type A (alphanumeric) characters. Optional input. No default value.
            employmentStartId:
              type: string
              description: Specifies the employment start date of the customer. This client information is required by CRM.Validation Rules-- Standard date format (YYYYMMDD). Optional input. No default value.
            customerCurrency:
              type: string
              description: Identifies the currency of the customer. This client profile data is required by CRM.Validation Rules-- Input must be an existing code on the currency table
            salary:
              type: string
              description: Gross Salary of customer.Validation Rules-- Format of the amount fields based on the currency specified in CUSTOMER.CURRENCY field. If SALARY field has to be entered then CUSTOMER.CURRENCY field is Mandatory Corresponding currency specified in the amount field. 1-14 characters plus a decimal point (Standard Amount format) - type AMT.
            annualBonus:
              type: string
              description: Annual bonus received by customer.Validation Rules-- Format of the amount fields based on the currency specified in CUSTOMER.CURRENCY field. If ANNUAL.BONUS field has to be entered then CUSTOMER.CURRENCY field is Mandatory. Corresponding currency specified in the amount field. 1-14 characters plus a decimal point (Standard Amount format) - type AMT.
            salaryDateFrequency:
              type: string
              format: date
              description: Indicates the payment frequency of salary. This client profile data is required by CRM.Validation Rules-- This field has two parts 1) 1-9 Date characters. Default value calculated by the system from the frequency. 2) Frequency- 2-5 type FQU (standard Frequency format). In this instance the frequency code must start with 'M12' followed by the DD number. The frequency cycle must start with M12.
      residentialDetails:
        type: array
        items:
          type: object
          properties:
            residenceStatus:
              type: string
              description: Identifies the residence status of the customer. This residence information is needed by CRM.Validation Rules-- Linked to the virtual table EB.LOOKUP. All values must have an existing code on EB.LOOKUP table.
            residenceType:
              type: string
              description: This field must contain the residence type. This residence information is needed by CRM.Validation Rules-- Linked to the virtual table EB.LOOKUP. All values must have an existing code onEB.LOOKUP table.
            residenceSince:
              type: string
              description: ''
            residenceValue:
              type: string
              description: Price of the residence. This residence information is needed by CRM.Validation Rules-- Format of the amount fields based on the currency specified in LCCY. 1-14 characters plus a decimal point (Standard Amount format) - type AMT
            mortgageAmount:
              type: number
              format: int64
              description: Mortgage amount on property. This residence information is needed by CRM.Validation Rules-- Format of the amount fields based on the currency specified in LCCY. 1-14 characters plus a decimal point (Standard Amount format) - type AMT
      deliveryPreferences:
        type: array
        items:
          type: object
          properties:
            deliveryOption:
              type: string
              description: This field is used to enumerate the customers marketing delivery preferences.Options are Marketing and Email Marketing
            deliveryPref:
              type: string
              description: This field is used to select preference for the respective Delivery Option.Options are Opt-Out or blank.
      riskDetails:
        type: array
        items:
          type: object
          properties:
            riskAssetType:
              type: string
              description: Multi-value set indicating a customer's expertise in use with different asset classes. If the SC product is installed then the input must exist on ASSET.TYPE otherwise anything can be entered here.
            riskLevel:
              type: string
              description: Risk level. Values from 0 to 99 are valid.
            riskTolerance:
              type: string
              description: Indicates the tolerance in this risk class. Values from 0 to 99 are valid.
            riskFromDate:
              type: string
              format: date
              description: Date from which customer builds expertise in this risk class.
      overrideList:
        type: array
        items:
          type: object
          properties:
            override:
              type: string
              description: |-
                Records the overrides generated during processing of an activity. All the overrides generated in the property class templates (AA.ARR.XXXX, where XXXX - Property Class) for the Activity input are updated in this field.
                Standard override field, Multi-valued.
      inputterList:
        type: array
        items:
          type: object
          properties:
            inputter:
              type: string
              description: The users that have modified this record.Validation Rules-No input fieldSystem generated.
      dateTimeList:
        type: array
        items:
          type: object
          properties:
            dateTime:
              type: string
              format: date
              description: |-
                This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
                Validation Rules-No input fieldSystem generated.
      title:
        type: string
        description: 'This field is used to capture the Title in the Customer�s Name.2-12 Alphabetic characters, Mandatory Field'
      familyName:
        type: string
        description: 'This field is used to capture the Family Name of the Customer.1-40 Alphabetic characters, Mandatory Field'
      givenName:
        type: string
        description: 'This field is used to capture the Given Name of the Customer.1-40 Alphabetic characters, Optional Field'
      othergivenname_:
        type: string
        description: ''
      Mnemonic:
        type: string
        description: 'Specifies an alternative easy means of referencing the Customer. For countries where the Customer name should not be recorded (e.g. numbered Customers/accounts) any value can be entered in this field with the exception that the first character must be alpha. Like the ID, the Mnemonic must be unique across T24. Care should be taken when assigning Mnemonics to Customers and some rules should ideally be defined across the bank to allow easy identification of the Customers by their Mnemonics. Note - For each Customer, the System will automatically update the internal file ''MNEMONIC.CUSTOMER'' which allows the User to displaythe Customers in Mnemonic sequence instead of Customer number.Validation Rules- 3-10 type MNE (Uppercase alpha or numeric, first character alpha, or ''.'') characters. (Mandatory input)'
        enum:
          - Specifies an easy means of referencing Customer
      shortName:
        type: string
        description: 'Identifies the name of the Customer in a more descriptive form, and will be used for on-line enrichments in any field where a Customer ID or Mnemonic has been input. For countries where the Customer name should not be recorded (e.g. numbered Customers/ Accounts) any valid SWIFT character can be entered in this field with the exception that all characters cannot be spaces. A clear and unique identification of the Customer must be entered in this field. When entering or displaying data where a Customer ID or Mnemonic is involved, the content of this field will be used as the enrichment of the Customer number/Mnemonic.Validation Rules- 3-35 type S (uppercase alpha or numeric) characters. Special Characters ''&amp;'' and ''/'' are also allowed, with the exception that ''/'' cannot be entered as first character. If SHORT.NAME is reported in SWIFT Messages, the character ''&amp;'' would be replaced with spaces. (Mandatory input)'
        enum:
          - Short name of the customer
      gender:
        type: string
        description: Contains customer's gender. This additional client information is required by CRM.Validation Rules-- Maximum of 6 characters is allowed Allowed values are MALE FEMALE
        enum:
          - Customer's Gender
      maritalStatus:
        type: string
        description: Identifies the marital status of the customer. This customer profile information is required by CRM.Validation Rules-- Linked to the virtual table EB.LOOKUP. All values must have an entry on EB.LOOKUP table.
      accountOfficer:
        type: string
        description: 'Identifies the main Account Officer responsible for the Customer. his code will be defaulted on all Customer transactions within T24 except if it is overriden by another Account Officer code at the transaction or product level. The existence of the Account Officer code on every Customer transaction will allow generation of M.I.S. information at the Account Officer level.Validation Rules- 1-4 numeric character Account Officer code. (Mandatory input if no default value has been specified on the Customer DEFAULT Table for the corresponding sector code or the VERSION File [Ref- UTILITIES]. Otherwise Input is optional and will override default value.) It must be a valid code on the DEPT.ACCT.OFFICER table (Ref- GENERAL TABLES).'
        enum:
          - Account Officer responsible for the Customer
      sector:
        type: string
        description: Identifies the Sector code relating to the Customer. If the Sector code is defined on the Customer DEFAULT table the associated default values will be retrieved and added to a new Customer record during the Validation process except if some specific values have been input by the User.Validation Rules- 1-4 numeric character Sector code. (Mandatory input) It must be a valid code on the SECTOR table. The field must not be blank.
        enum:
          - Sector code relating to the Customer
      industry:
        type: string
        description: 'Identifies the Industry in which the Customer is trading. Each User can define their own industry codes according to the use they want to make of them. Production of central bank reports classified by Industry codes or the monitoring of the overall credit exposure by Industry type are typical examples of uses of this code.Validation Rules- 1-4 numeric character Industry code. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION File [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the INDUSTRY code table.'
        enum:
          - Industry in which Customer is trading
      segment:
        type: string
        description: 'Specifies how the Customer is considered by the bank and how he fits in with the Account Officer''s overall marketing strategy. Examples of this field are- ''Prime Customer'', ''No Potential'', etc. but it must be a valid code on the TARGET code table. The values of the field should be defined according to the bank''s overall marketing strategy.Validation Rules- 1-4 numeric characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code, or the VERSION File [Ref- UTILITIES]. Otherwise input is optional and will override default value.)'
        enum:
          - Specifies how the cus is considered by the bank
      customerstatus:
        type: string
        description: 'Identifies the Status of the Customer. The values applicable to this field can be defined by each bank/branch according to the their own practice.Validation Rules- 1-4 numeric characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the Customer STATUS table.'
        enum:
          - Identifies the Status of the Customer
      nationality:
        type: string
        description: 'Identifies the Nationality of the Customer.Validation Rules- 2 type SSS (uppercase alpha) Country code characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector Code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the COUNTRY table (Ref- GENERAL TABLES).'
        enum:
          - Nationality of the Customer
      residence:
        type: string
        description: 'Identifies the Country of Residence of the Customer. Any change in the value of this field will prompt a message reminding the User that the Town Country defined in line 4 of the SWIFT address should also be changed. If the User, for any reason, does not want to change the content of line 4 of the SWIFT address, he will be forced to confirm it by entering an Override.Validation Rules- 2 type SSS (uppercase alpha) Country code characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the COUNTRY table (Ref- GENERAL TABLES).'
        enum:
          - Country of Residence of the Customer
      customertype:
        type: string
        description: 'Indicates the type of customer, and is dependant on the CR (Customer Relationship Management) module being installed. The values of PROSPECT, EXTERNAL.USER, ACTIVE or null (the equivalent of ACTIVE) are allowed. If PROSPECT is entered then if the customer does not form a business relationship with the bank, such as opening an account, limit or contract then after a period of time defined on the CUST.RETENTION field on COMPANY the customer record and all associated data will be removed from the system. If the customer forms a business relationship with the bank then the wll be activated and after this point the customer record cannot be deleted. If opted for External.user then the customer can only be used as a signatory in applications EB.SIGNATORY.GROUP and EB.EXTERNAL.USER and then in field named SIGNATORY if used in any other applications, and restricted for use in any other fields in all remaining applications.'
        enum:
          - Indicates Customer's Type
      dateOfBirth:
        type: string
        format: date
        description: Specifies customer's date of birth. This additional client information is required by CRM.Validation Rules-- Standard date format (YYYYMMDD). Optional input. No default value.
      customerStartDate:
        type: string
        format: date
        description: Contains the date on which individual/corporate becomes the customer of the bankValidation Rules-- Standard date format (YYYYMMDD). (Optional input. No default value.)
      taxFileNumber:
        type: string
        description: Standard Free Text fieldOnly 1 field required for both TFN and Exempt code with no encryption. This field should be a multi purpose field with a dropdown enquiry but the user can still key in any value without it being validated
      exemptionCodeDesc:
        type: string
        description: The field displays the enrichment for Exemption code.
      taxIdentificationNumber:
        type: string
        description: This field identifies the number used for Tax purposes in Australia.
      countryOfResidenceOfTaxPurposes:
        type: string
        description: This field displays the country of tax residence
      residencyType:
        type: string
        description: 'Residence Status, e.g. Home Owner, Renting, Boarder etc.'
      dateOfChangeResTax:
        type: string
        format: date
        description: Date of change of residency for tax purpose status from resident to non-resident and vice-versa. Manually input by user.
      issueCheques:
        type: string
        description: This field denotes whether the customer is eligible for cheque issue facility and to know first cheque book issued or not. System automatically changes the value to 'YES' once first cheque book is issued to an account for the customer. Input 'No' if the customer is not eligible for the cheque issue facility. To make cheque facility available to the customer change 'NO' to Null.Validation Rules- User can only input 'NO' or Null. Value 'YES' is updated by the system.
      hardShip:
        type: string
        description: This field if used to denote if the customer is in hardship. Accept Y or N.
      customerLiability:
        type: string
        description: 'Indicates the Customer consolidation number for credit grouping purposes, within the same branch/country. This field allows Customer exposure to be consolidated at the branch or country level when analysing the risk by the LIMIT Application. If entered it must be a valid Customer code or Mnemonic. Note - This is a no change field. Any change must be done using theLIMIT.CHANGE application.Validation Rules- 1-10 numeric character Customer Number or 3-10 type MNE (uppercase alpha or numeric, or ''.'') character Customer Mnemonic. (Optional input. Default Value is = None.) The customer number entered here must not be linked to another liability.'
      netMonthlyIn:
        type: string
        description: Net income earned by customer each month.Validation Rules--Format of the amount fields based on the currency specified in LCCY 1-14 characters plus a decimal point (Standard Amount format) - type AMT.
      netMonthlyOut:
        type: string
        description: Net expenses of customer each month.Validation Rules--Format of the amount fields based on the currency specified in LCCY.1-14 characters plus a decimal point (Standard Amount format) - type AMT.
      confidentialText:
        type: string
        description: 'There are occasions where for the sake of client confidentiality that the client name is not used in advices or payment instructions generated by the bank. Typically a phrase such as ''One of our Clients'' would be used instead of the client name. This field controls the generation of the standard text in the &amp;#145;Ordering Customer&amp;#146; fields of the SWIFT messages, allowing the text to be in the language of the receiving bank. The standard text is defined in the ORD record in DE.TRANSLATION. To utilise this the conversion should be set to &amp;#145;CUS*TEXT*ORD&amp;#146; in the relevant DE.FORMAT.SWIFT record.Validation Rules- Input is either YES or NO Yes - will try to insert the standard text in the ordering customer field of the SWIFT message provided the system has been set correctly. If unsuccessful then the customer text will be used.'
      internetBanking:
        type: string
        description: 'If field is set to YES, then Internet Banking service will be enabled for the customer.'
      mobileBanking:
        type: string
        description: Indicates whether is Customer is subscribed to the mobile banking service or not.
      contactDate:
        type: string
        format: date
        description: Specifies the date that first contact was made with the Customer.Validation Rules- 1-9 type D (Date format in range 1950 - 2049) numeric characters. (Optional Input. No default value.) This field is for information only. It must be a valid date which is less than or equal to today.
      introducer:
        type: string
        description: Identifies the name of the person who introduced the Customer to the bank. This field is for information only and must not contain more than 35 characters.Validation Rules- 1-35 type A (alphanumeric) characters. (Optional input. No default value.)
      kycRelationship:
        type: string
        description: 'Indicates the relationship this customer is being held in. If input, must exist on CR.RELATIONSHIP table.'
      sourceOfKycVerification:
        type: string
        description: Specifies the Agency/Organisation which has verified the customer�s KYC norms. Dropdown Values. Not Mandatory.
      verifyingIndividual:
        type: string
        description: 'Specifies the name of the individual belonging to the Agency/Organisation which had conducted the customer�s KYC Verification. Dropdown, Not Mandatory.'
      kycComplete:
        type: string
        description: Know Your Customer is the due diligence and bank regulation that institutions must perform to identify their clients and ascertain relevant information pertinent to doing financial business with them. This field is for information only and contains YES or NULL. If set to YES then the information related to the customer has been collected and verified.
      lastKycReviewDate:
        type: string
        format: date
        description: Date customer KYC information was last reviewed.
      autoNextKycRev:
        type: string
        description: Date system has calculated customer should next be reviewed.
      manualNextKycRev:
        type: string
        description: Manual specification of next review date.
      lastSuitReviewDate:
        type: string
        format: date
        description: Date customer Suitability information was last reviewed.
      AutoNextSuitRevDate:
        type: string
        format: date
        description: Date system has calculated customer suitability should next be reviewed.
      ManualNextSuitRevDate:
        type: string
        format: date
        description: Manual specification of next suitability review date.
      amlCheck:
        type: string
        description: 'Field is used to describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities.It can have YES, SENT or NULL values. Depending on these values the AML.RESULT field will get updated.'
      amlResult:
        type: string
        description: 'If the value in AML.CHECK is NULL, then this field will be NULL. If the value in AML.CHECK is SENT, then the value in this field will be RESULT.AWAITED. And if the value in AML.CHECK is YES, then the value in this field will be either POSITIVE or NEGATIVE.'
      lastAmlResultDate:
        type: string
        format: date
        description: 'This field is the date field, when the last Anti Money Laundering result is performed.'
      calcRiskClass:
        type: string
        description: 'Personal Risk Class (calculated). If input, must exist on RISK.CLASS table.'
      manualRiskClass:
        type: string
        description: 'Personal Risk Class (manual override). If input, must exist on RISK.CLASS table.'
      sourceOfWealth:
        type: string
        description: |-
          Refers to the origin of the entire body of wealth (i.e. total assets) of the client.
          This information that should be obtained should given an indication as to the volume of wealth the client would reasonably be expected to have, and provided a picture of how it was acquired.

          Possible values:
          employmentIncome
          investmentIncome
          businessIncome
          oneOffPayment
          saleOfAssets
          windfall
      overrideReason:
        type: string
        description: 'Reason for changing the customer''s risk class from the calculated risk class. Mandatory, if CALC.RISK.CLASS is not the same as MANUAL.RISK.CLASS.'
      recordStatus:
        type: string
        description: |-
          Indicates the current status of the record.Validation Rules-No input fieldSystem generated.
          Example- INAU
      currNo:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
          Validation Rules-No input fieldSystem generated.
          Example- 1
      authoriser:
        type: string
        description: |-
          The user that authorised the record.Where a record has been modified multiple times (i.e the CURR.NO field is greater than 1) only the last authoriser is shown. 
          Validation Rules-No input fieldSystem generated.
      companyCode:
        type: string
        description: |-
          The company code that the record belongs to. 
          Validation Rules-No input fieldSystem generated.
          Example- AU0010001
      departmentCode:
        type: string
        description: |-
          The department code of the person that last modified the record. 
          Validation Rules-No input fieldSystem generated. 
          Example- 01
      auditorCode:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the audit information at which the function was used. 
          Validation Rules-No input fieldSystem generated.
      auditDateTime:
        type: string
        format: date
        description: |-
          Timestamp of the issue that is logged.
          17 characters Date Time format.
          It need to be displayed as DD MMM YYYY HH-MM-SS.sss.
          Example- 12 JAN 2015 12-34-25.123
          The value is not editable by the user.
  updateIndividualCustomerErrorResponse:
    properties:
      header:
        $ref: '#/definitions/ErrorHeader'
      error:
        $ref: '#/definitions/updateIndividualCustomerErrorResponseBody'
    description: updateIndividualCustomerErrorResponse
  updateIndividualCustomerErrorResponseBody:
    type: object
    properties:
      errorDetails:
        type: array
        items:
          type: object
          properties:
            fieldName:
              type: string
            code:
              type: string
            message:
              type: string
      type:
        type: string
  getIndividualCustomerResponse:
    properties:
      header:
        $ref: '#/definitions/ScreenHeader'
      body:
        $ref: '#/definitions/getIndividualCustomerResponseBody'
    description: getIndividualCustomerResponse
  getIndividualCustomerResponseBody:
    type: object
    properties:
      customerRatings:
        type: array
        description: Field identifies the rating of the customer.It is linked to EB.RATING table and must have an existing code on EB.RATING table.
        items:
          type: object
          properties:
            customerRating:
              type: string
              description: Field identifies the rating of the customer.It is linked to EB.RATING table and must have an existing code on EB.RATING table.
      address:
        type: array
        items:
          type: object
          properties:
            addressType:
              type: string
              description: 'This is field is used to select the Address type. Drop box. Options are POSTAL, Primary Residence / Registered Business and Blank. Optional Field.'
            addressLine_:
              type: string
              description: 'Address of the customer will be recorded here, based on Address type'
            locality:
              type: string
              description: This field mentions the Locality in which the customer has bought the new house.
            state:
              type: string
              description: This field mentions the State in which the customer has bought the new house.
            postCode:
              type: string
              description: The postcode of the new house purchased by the customer will be recorded here
            country:
              type: string
              description: This field mentions the Country in which the customer has bought the new house.
            dpID:
              type: string
              description: This field contains the Australia Post DPID returned from QAS after verifying an address. No input field at version level.
            addressFormatted:
              type: string
              description: This field captures the formatted Address response from QAS. Drop box Field. No input field at version level.
            addressValidated:
              type: string
              format: date
              description: This field denotes if the address if validated or not.
            addressDate:
              type: string
              format: date
              description: This field displays the date on which the QAS verification was done by the Address Interface. Standard Date Format. No input field at version level.
            addressReferenceId:
              type: string
              description: 'This field will store the Address Reference ID associated with one/multiple address returned by ESB (SearchAddress service). Upon selecting a closely matched address from the ADD.FORMATTED dropdown list, using the Address Reference ID an interface call (GetAddress service) is made which will return data for fields from ADD.LINE.1 to ADD.DP.ID.'
      preferredContactMethod:
        type: array
        items:
          type: object
          properties:
            channel:
              type: string
              description: 'This field is used to describe the communication channel of the customer. Dropdown. Optional Field Multi-value field along with ADDRESS.GROUP and ADDRESS.STATUS fields Options are POST, EMAIL, SMS, PHONE or FAX'
            addressGroup:
              type: string
              description: 'This field is used to select the Address Group for a particular Channel. Dropdown field. Optional Field. Options are ''Primary Residence / Registered Business'' or ''Postal'' when the Channel Select is ''Postal''. Or if the Channel Select is SMS/Email/PHONE the options are ''Primary'', ''Secondary'' or ''Office''.'
            addressStatus:
              type: string
              description: This field is used to select if the respective address is Undeliverable or not.Dropdown field. Optional. Options are Blank or 'Undeliverable'
      contactChannel:
        type: array
        description: Specifies the channel for communication between customer and bank Different types channels has been described below- Channel Description BRANCH When the customer visits the bank CALLCENTER Marketed through call center EMAIL Campaigned through email IM Campaigned through instant messenger INTERNET Communicated through internet NONE No channel used PERSONAL By meeting the customer personally POST Launched by mail service SKYPE Instant messenger service SMS By Short messaging service OTHER Channel not mentioned above Validation Rules- Input should have an entry on EB.LOOKUP table
        items:
          type: object
          properties:
            phone:
              type: string
              description: This field can contain phone number of the customer.
            sms:
              type: string
              description: This field can contain mobile number of the customer.
            email:
              type: string
              description: This field can contain e-mail addresses of the customer.
            addressLocation:
              type: string
              description: 'Address of the customer will be recorded here, based on Address type'
      fax:
        type: array
        description: This field can contain fax number of the customer.
        items:
          type: object
          properties:
            fax:
              type: string
              description: This field can contain fax number of the customer.
      idDocument:
        type: array
        items:
          type: object
          properties:
            legalId:
              type: string
              description: 'Part of the LEGAL multi-value set. Specifies any legal identification of the Customer. This field is for information only and specifies, for example, passport number, identity card number, PIN number etc.Validation Rules- 1-20 type A (alphanumeric) characters. (Optional input. No default value.)'
              enum:
                - Specifies any legal identification type
            legalDocumentName:
              type: string
              description: Part of the LEGAL multi-value set. Valdiated against EB.LOOKUP table CUS.LEGAL.DOC.NAME.
              enum:
                - Specifies the Legal Document name
            nameOnId:
              type: string
              description: 'Part of the LEGAL multi-value set. To support passports, enabling a holders name to be stored.'
              enum:
                - Specifies any legal identification of the Customer
            issueAuthority:
              type: string
              description: Part of the LEGAL multi-value set. Validated against EB.LOOKUP table CUS.LEGAL.ISS.AUTH.
              enum:
                - Specifies legal issuing authority
            issueDate:
              type: string
              format: date
              description: Defines the date of issue of cheques.Validation Rules-8 numeric characters.Standard date field.Optional Input (If not entered defaults to TODAY).No-change field.
            expiryDate:
              type: string
              format: date
              description: 'Part of the LEGAL multi-value set. Not mandatory, but if input must be greater than TODAY and greater than LEGAL.ISS.DATE.'
      relation:
        type: array
        description: This field is used to enumerate the customers marketing delivery preferences.Options are Marketing and Email Marketing
        items:
          type: object
          properties:
            relationCode:
              type: string
              description: Identifies the inter-relationship between Customer records and enables a link to be formed for the purpose of evaluating the overall Customer position. Input must be a valid Relation code and the reverse relationship will be shown automatically on the REVERS.REL.CODE when it has been defined in the RELATION table. An on-line display (internal file 'RELATION.CUSTOMER') also allows the User to check all the relationships of a Customer with other Customers within the same database. The relationship entered is that of the customer being created to that of the Customer defined in REL.CUSTOMER.Validation Rules- 1-3 numeric characters. Multivalue field associated with REL.CUSTOMER and REVERS.REL.CODE. (Optional input. No default value.)
              enum:
                - Identified relationship code
            relationCustomer:
              type: string
              description: 'Identifies the Customer Code or the Mnemonic of the Related Customer.Validation Rules- 1-10 numeric character Customer Number or 3-10 type SS (uppercase alpha or numeric, first character alpha) character Customer Mnemonic. Multivalue field associated with RELATION.CODE and REVERS.REL.CODE. (Mandatory input if corresponding RELATION.CODE is entered, otherwise not allowed.) Input must be a valid Customer code or mnemonic. The relationship between 2 customers may only be entered in one of the Customer records, not both.'
              enum:
                - Specifies inter-relationship Customer
            reverseRelation:
              type: string
              description: Identifies the Relationship code for the Related Customer. This field is generated automatically by the System according to the values defined in the RELATION table. No access to this field will be permitted to the User.Validation Rules- 1-3 numeric character Relation code. Multivalue field associated with RELATION.CODE and REL.CUSTOMER. This is a NOINPUT field.
              enum:
                - Relationship code for the related Customer
            role:
              type: string
              description: 'Part of the ROLE sub-value set. Role customer plays with this customer. Must exist on EB.ROLE table. Not a mandatory field, only if this customer has a role with the customer of the record.'
            moreRoleInfo:
              type: string
              description: 'Part of the ROLE sub-value set. When ROLE requires more information (see ROLE table), this field becomes mandatory. Otherwise it is optional.'
            roleNotes:
              type: string
              description: Part of the ROLE sub-value set. Additional notes that can be entered about this role.
            deliveryOptions:
              type: array
              items:
                type: object
                properties:
                  relationDeliveryOption:
                    type: string
                    description: 'Part of the ROLE sub-value set. Used on selected CUSTOMER records that are setup to be ''container'' type records which group together a set of clients, such as a joint customer relationship. Each of the clients has their own record which can be linked to the container. This field is used to specify what delivery addressing is to be used for the link customer. Only the first delivery option is used in a sub valued role list. There are three options- 1. - P.n (Use full name &amp; address of linked customer as the container PRINT.n address.) 2. - A.n (Only use address of linked customer as the container PRINT.n address. .Name &amp; short.name of the container is kept) 3.- C (Copy option - sends a copy of delivery messages using the MDR.CUSTOMER option on DE.PRODUCT). When the container customer is authorised the system creates the DE.ADDRESS records as indicated and where required will also create a DE.PRODUCT record.Validation Rules- Only one primary (PRINT.1) address can be entered, either as A.1 or P.1 If no primary address is entered the here the standard PRINT.1 address for this customer record will be created. Input only allowed if REL.CUSTOMER is present Only delivery options created in the EB.LOOKUP CUS.REL.DELIV.OPT table will be accepted.'
      financialDetails:
        type: array
        items:
          type: object
          properties:
            employmentStatus:
              type: string
              description: Identifies the employment status of the customer. This client information is required by CRM.Validation Rules-- Linked to the virtual table EB.LOOKUP. Input must have an entry on EB.LOOKUP table.
            occupation:
              type: string
              description: Specifies the occupation of the customer. This client information is required by CRM.Validation Rules-- 1-35 type A (alphanumeric) characters. Optional input. No default value.
            jobTitle:
              type: string
              description: 'Indicates the customers job title. If input, must exist on JOB.TITLE table.'
            employersName:
              type: string
              description: This field must contain the name of the customer's employer. This client information is required by CRM.Validation Rules-- 1-35 type A (alphanumeric) characters. Optional input. No default value.
            employersAddress:
              type: string
              description: This field must contain the address of the customer's employer. This client information is required by CRM.Validation Rules-- 1-35 type A (alphanumeric) characters. (Optional input. No default value.)
            employersBussiness:
              type: string
              description: This field must contain the business of customer's employer involved. This client information is required by CRM.Validation Rules-- 1-35 type A (alphanumeric) characters. Optional input. No default value.
            employmentStartId:
              type: string
              description: Specifies the employment start date of the customer. This client information is required by CRM.Validation Rules-- Standard date format (YYYYMMDD). Optional input. No default value.
            customerCurrency:
              type: string
              description: Identifies the currency of the customer. This client profile data is required by CRM.Validation Rules-- Input must be an existing code on the currency table
            salary:
              type: string
              description: Gross Salary of customer.Validation Rules-- Format of the amount fields based on the currency specified in CUSTOMER.CURRENCY field. If SALARY field has to be entered then CUSTOMER.CURRENCY field is Mandatory Corresponding currency specified in the amount field. 1-14 characters plus a decimal point (Standard Amount format) - type AMT.
            annualBonus:
              type: string
              description: Annual bonus received by customer.Validation Rules-- Format of the amount fields based on the currency specified in CUSTOMER.CURRENCY field. If ANNUAL.BONUS field has to be entered then CUSTOMER.CURRENCY field is Mandatory. Corresponding currency specified in the amount field. 1-14 characters plus a decimal point (Standard Amount format) - type AMT.
            salaryDateFrequency:
              type: string
              format: date
              description: Indicates the payment frequency of salary. This client profile data is required by CRM.Validation Rules-- This field has two parts 1) 1-9 Date characters. Default value calculated by the system from the frequency. 2) Frequency- 2-5 type FQU (standard Frequency format). In this instance the frequency code must start with 'M12' followed by the DD number. The frequency cycle must start with M12.
      residentialDetails:
        type: array
        items:
          type: object
          properties:
            residenceStatus:
              type: string
              description: Identifies the residence status of the customer. This residence information is needed by CRM.Validation Rules-- Linked to the virtual table EB.LOOKUP. All values must have an existing code on EB.LOOKUP table.
            residenceType:
              type: string
              description: This field must contain the residence type. This residence information is needed by CRM.Validation Rules-- Linked to the virtual table EB.LOOKUP. All values must have an existing code onEB.LOOKUP table.
            residenceSince:
              type: string
              description: ''
            residenceValue:
              type: string
              description: Price of the residence. This residence information is needed by CRM.Validation Rules-- Format of the amount fields based on the currency specified in LCCY. 1-14 characters plus a decimal point (Standard Amount format) - type AMT
            mortgageAmount:
              type: number
              format: int64
              description: Mortgage amount on property. This residence information is needed by CRM.Validation Rules-- Format of the amount fields based on the currency specified in LCCY. 1-14 characters plus a decimal point (Standard Amount format) - type AMT
      deliveryPreferences:
        type: array
        items:
          type: object
          properties:
            deliveryOption:
              type: string
              description: This field is used to enumerate the customers marketing delivery preferences.Options are Marketing and Email Marketing
            deliveryPref:
              type: string
              description: This field is used to select preference for the respective Delivery Option.Options are Opt-Out or blank.
      riskDetails:
        type: array
        items:
          type: object
          properties:
            riskAssetType:
              type: string
              description: Multi-value set indicating a customer's expertise in use with different asset classes. If the SC product is installed then the input must exist on ASSET.TYPE otherwise anything can be entered here.
            riskLevel:
              type: string
              description: Risk level. Values from 0 to 99 are valid.
            riskTolerance:
              type: string
              description: Indicates the tolerance in this risk class. Values from 0 to 99 are valid.
            riskFromDate:
              type: string
              format: date
              description: Date from which customer builds expertise in this risk class.
      overrideList:
        type: array
        items:
          type: object
          properties:
            override:
              type: string
              description: |-
                Records the overrides generated during processing of an activity. All the overrides generated in the property class templates (AA.ARR.XXXX, where XXXX - Property Class) for the Activity input are updated in this field.
                Standard override field, Multi-valued.
      inputterList:
        type: array
        items:
          type: object
          properties:
            inputter:
              type: string
              description: The users that have modified this record.Validation Rules-No input fieldSystem generated.
      dateTimeList:
        type: array
        items:
          type: object
          properties:
            dateTime:
              type: string
              format: date
              description: |-
                This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
                Validation Rules-No input fieldSystem generated.
      title:
        type: string
        description: 'This field is used to capture the Title in the Customer�s Name.2-12 Alphabetic characters, Mandatory Field'
      familyName:
        type: string
        description: 'This field is used to capture the Family Name of the Customer.1-40 Alphabetic characters, Mandatory Field'
      givenName:
        type: string
        description: 'This field is used to capture the Given Name of the Customer.1-40 Alphabetic characters, Optional Field'
      othergivenname_:
        type: string
        description: ''
      Mnemonic:
        type: string
        description: 'Specifies an alternative easy means of referencing the Customer. For countries where the Customer name should not be recorded (e.g. numbered Customers/accounts) any value can be entered in this field with the exception that the first character must be alpha. Like the ID, the Mnemonic must be unique across T24. Care should be taken when assigning Mnemonics to Customers and some rules should ideally be defined across the bank to allow easy identification of the Customers by their Mnemonics. Note - For each Customer, the System will automatically update the internal file ''MNEMONIC.CUSTOMER'' which allows the User to displaythe Customers in Mnemonic sequence instead of Customer number.Validation Rules- 3-10 type MNE (Uppercase alpha or numeric, first character alpha, or ''.'') characters. (Mandatory input)'
        enum:
          - Specifies an easy means of referencing Customer
      shortName:
        type: string
        description: 'Identifies the name of the Customer in a more descriptive form, and will be used for on-line enrichments in any field where a Customer ID or Mnemonic has been input. For countries where the Customer name should not be recorded (e.g. numbered Customers/ Accounts) any valid SWIFT character can be entered in this field with the exception that all characters cannot be spaces. A clear and unique identification of the Customer must be entered in this field. When entering or displaying data where a Customer ID or Mnemonic is involved, the content of this field will be used as the enrichment of the Customer number/Mnemonic.Validation Rules- 3-35 type S (uppercase alpha or numeric) characters. Special Characters ''&amp;'' and ''/'' are also allowed, with the exception that ''/'' cannot be entered as first character. If SHORT.NAME is reported in SWIFT Messages, the character ''&amp;'' would be replaced with spaces. (Mandatory input)'
        enum:
          - Short name of the customer
      gender:
        type: string
        description: Contains customer's gender. This additional client information is required by CRM.Validation Rules-- Maximum of 6 characters is allowed Allowed values are MALE FEMALE
        enum:
          - Customer's Gender
      maritalStatus:
        type: string
        description: Identifies the marital status of the customer. This customer profile information is required by CRM.Validation Rules-- Linked to the virtual table EB.LOOKUP. All values must have an entry on EB.LOOKUP table.
      accountOfficer:
        type: string
        description: 'Identifies the main Account Officer responsible for the Customer. his code will be defaulted on all Customer transactions within T24 except if it is overriden by another Account Officer code at the transaction or product level. The existence of the Account Officer code on every Customer transaction will allow generation of M.I.S. information at the Account Officer level.Validation Rules- 1-4 numeric character Account Officer code. (Mandatory input if no default value has been specified on the Customer DEFAULT Table for the corresponding sector code or the VERSION File [Ref- UTILITIES]. Otherwise Input is optional and will override default value.) It must be a valid code on the DEPT.ACCT.OFFICER table (Ref- GENERAL TABLES).'
        enum:
          - Account Officer responsible for the Customer
      sector:
        type: string
        description: Identifies the Sector code relating to the Customer. If the Sector code is defined on the Customer DEFAULT table the associated default values will be retrieved and added to a new Customer record during the Validation process except if some specific values have been input by the User.Validation Rules- 1-4 numeric character Sector code. (Mandatory input) It must be a valid code on the SECTOR table. The field must not be blank.
        enum:
          - Sector code relating to the Customer
      industry:
        type: string
        description: 'Identifies the Industry in which the Customer is trading. Each User can define their own industry codes according to the use they want to make of them. Production of central bank reports classified by Industry codes or the monitoring of the overall credit exposure by Industry type are typical examples of uses of this code.Validation Rules- 1-4 numeric character Industry code. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION File [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the INDUSTRY code table.'
        enum:
          - Industry in which Customer is trading
      segment:
        type: string
        description: 'Specifies how the Customer is considered by the bank and how he fits in with the Account Officer''s overall marketing strategy. Examples of this field are- ''Prime Customer'', ''No Potential'', etc. but it must be a valid code on the TARGET code table. The values of the field should be defined according to the bank''s overall marketing strategy.Validation Rules- 1-4 numeric characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code, or the VERSION File [Ref- UTILITIES]. Otherwise input is optional and will override default value.)'
        enum:
          - Specifies how the cus is considered by the bank
      customerstatus:
        type: string
        description: 'Identifies the Status of the Customer. The values applicable to this field can be defined by each bank/branch according to the their own practice.Validation Rules- 1-4 numeric characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the Customer STATUS table.'
        enum:
          - Identifies the Status of the Customer
      nationality:
        type: string
        description: 'Identifies the Nationality of the Customer.Validation Rules- 2 type SSS (uppercase alpha) Country code characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector Code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the COUNTRY table (Ref- GENERAL TABLES).'
        enum:
          - Nationality of the Customer
      residence:
        type: string
        description: 'Identifies the Country of Residence of the Customer. Any change in the value of this field will prompt a message reminding the User that the Town Country defined in line 4 of the SWIFT address should also be changed. If the User, for any reason, does not want to change the content of line 4 of the SWIFT address, he will be forced to confirm it by entering an Override.Validation Rules- 2 type SSS (uppercase alpha) Country code characters. (Mandatory input if no default value has been specified on the Customer DEFAULT table for the corresponding Sector code or the VERSION file [Ref- UTILITIES]. Otherwise input is optional and will override default value.) It must be a valid code on the COUNTRY table (Ref- GENERAL TABLES).'
        enum:
          - Country of Residence of the Customer
      customertype:
        type: string
        description: 'Indicates the type of customer, and is dependant on the CR (Customer Relationship Management) module being installed. The values of PROSPECT, EXTERNAL.USER, ACTIVE or null (the equivalent of ACTIVE) are allowed. If PROSPECT is entered then if the customer does not form a business relationship with the bank, such as opening an account, limit or contract then after a period of time defined on the CUST.RETENTION field on COMPANY the customer record and all associated data will be removed from the system. If the customer forms a business relationship with the bank then the wll be activated and after this point the customer record cannot be deleted. If opted for External.user then the customer can only be used as a signatory in applications EB.SIGNATORY.GROUP and EB.EXTERNAL.USER and then in field named SIGNATORY if used in any other applications, and restricted for use in any other fields in all remaining applications.'
        enum:
          - Indicates Customer's Type
      dateOfBirth:
        type: string
        format: date
        description: Specifies customer's date of birth. This additional client information is required by CRM.Validation Rules-- Standard date format (YYYYMMDD). Optional input. No default value.
      customerStartDate:
        type: string
        format: date
        description: Contains the date on which individual/corporate becomes the customer of the bankValidation Rules-- Standard date format (YYYYMMDD). (Optional input. No default value.)
      taxFileNumber:
        type: string
        description: Standard Free Text fieldOnly 1 field required for both TFN and Exempt code with no encryption. This field should be a multi purpose field with a dropdown enquiry but the user can still key in any value without it being validated
      exemptionCodeDesc:
        type: string
        description: The field displays the enrichment for Exemption code.
      taxIdentificationNumber:
        type: string
        description: This field identifies the number used for Tax purposes in Australia.
      countryOfResidenceOfTaxPurposes:
        type: string
        description: This field displays the country of tax residence
      residencyType:
        type: string
        description: 'Residence Status, e.g. Home Owner, Renting, Boarder etc.'
      dateOfChangeResTax:
        type: string
        format: date
        description: Date of change of residency for tax purpose status from resident to non-resident and vice-versa. Manually input by user.
      issueCheques:
        type: string
        description: This field denotes whether the customer is eligible for cheque issue facility and to know first cheque book issued or not. System automatically changes the value to 'YES' once first cheque book is issued to an account for the customer. Input 'No' if the customer is not eligible for the cheque issue facility. To make cheque facility available to the customer change 'NO' to Null.Validation Rules- User can only input 'NO' or Null. Value 'YES' is updated by the system.
      hardShip:
        type: string
        description: This field if used to denote if the customer is in hardship. Accept Y or N.
      customerLiability:
        type: string
        description: 'Indicates the Customer consolidation number for credit grouping purposes, within the same branch/country. This field allows Customer exposure to be consolidated at the branch or country level when analysing the risk by the LIMIT Application. If entered it must be a valid Customer code or Mnemonic. Note - This is a no change field. Any change must be done using theLIMIT.CHANGE application.Validation Rules- 1-10 numeric character Customer Number or 3-10 type MNE (uppercase alpha or numeric, or ''.'') character Customer Mnemonic. (Optional input. Default Value is = None.) The customer number entered here must not be linked to another liability.'
      netMonthlyIn:
        type: string
        description: Net income earned by customer each month.Validation Rules--Format of the amount fields based on the currency specified in LCCY 1-14 characters plus a decimal point (Standard Amount format) - type AMT.
      netMonthlyOut:
        type: string
        description: Net expenses of customer each month.Validation Rules--Format of the amount fields based on the currency specified in LCCY.1-14 characters plus a decimal point (Standard Amount format) - type AMT.
      confidentialText:
        type: string
        description: 'There are occasions where for the sake of client confidentiality that the client name is not used in advices or payment instructions generated by the bank. Typically a phrase such as ''One of our Clients'' would be used instead of the client name. This field controls the generation of the standard text in the &amp;#145;Ordering Customer&amp;#146; fields of the SWIFT messages, allowing the text to be in the language of the receiving bank. The standard text is defined in the ORD record in DE.TRANSLATION. To utilise this the conversion should be set to &amp;#145;CUS*TEXT*ORD&amp;#146; in the relevant DE.FORMAT.SWIFT record.Validation Rules- Input is either YES or NO Yes - will try to insert the standard text in the ordering customer field of the SWIFT message provided the system has been set correctly. If unsuccessful then the customer text will be used.'
      internetBanking:
        type: string
        description: 'If field is set to YES, then Internet Banking service will be enabled for the customer.'
      mobileBanking:
        type: string
        description: Indicates whether is Customer is subscribed to the mobile banking service or not.
      contactDate:
        type: string
        format: date
        description: Specifies the date that first contact was made with the Customer.Validation Rules- 1-9 type D (Date format in range 1950 - 2049) numeric characters. (Optional Input. No default value.) This field is for information only. It must be a valid date which is less than or equal to today.
      introducer:
        type: string
        description: Identifies the name of the person who introduced the Customer to the bank. This field is for information only and must not contain more than 35 characters.Validation Rules- 1-35 type A (alphanumeric) characters. (Optional input. No default value.)
      kycRelationship:
        type: string
        description: 'Indicates the relationship this customer is being held in. If input, must exist on CR.RELATIONSHIP table.'
      sourceOfKycVerification:
        type: string
        description: Specifies the Agency/Organisation which has verified the customer�s KYC norms. Dropdown Values. Not Mandatory.
      verifyingIndividual:
        type: string
        description: 'Specifies the name of the individual belonging to the Agency/Organisation which had conducted the customer�s KYC Verification. Dropdown, Not Mandatory.'
      kycComplete:
        type: string
        description: Know Your Customer is the due diligence and bank regulation that institutions must perform to identify their clients and ascertain relevant information pertinent to doing financial business with them. This field is for information only and contains YES or NULL. If set to YES then the information related to the customer has been collected and verified.
      lastKycReviewDate:
        type: string
        format: date
        description: Date customer KYC information was last reviewed.
      autoNextKycRev:
        type: string
        description: Date system has calculated customer should next be reviewed.
      manualNextKycRev:
        type: string
        description: Manual specification of next review date.
      lastSuitReviewDate:
        type: string
        format: date
        description: Date customer Suitability information was last reviewed.
      AutoNextSuitRevDate:
        type: string
        format: date
        description: Date system has calculated customer suitability should next be reviewed.
      ManualNextSuitRevDate:
        type: string
        format: date
        description: Manual specification of next suitability review date.
      amlCheck:
        type: string
        description: 'Field is used to describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities.It can have YES, SENT or NULL values. Depending on these values the AML.RESULT field will get updated.'
      amlResult:
        type: string
        description: 'If the value in AML.CHECK is NULL, then this field will be NULL. If the value in AML.CHECK is SENT, then the value in this field will be RESULT.AWAITED. And if the value in AML.CHECK is YES, then the value in this field will be either POSITIVE or NEGATIVE.'
      lastAmlResultDate:
        type: string
        format: date
        description: 'This field is the date field, when the last Anti Money Laundering result is performed.'
      calcRiskClass:
        type: string
        description: 'Personal Risk Class (calculated). If input, must exist on RISK.CLASS table.'
      manualRiskClass:
        type: string
        description: 'Personal Risk Class (manual override). If input, must exist on RISK.CLASS table.'
      sourceOfWealth:
        type: string
        description: |-
          Refers to the origin of the entire body of wealth (i.e. total assets) of the client.
          This information that should be obtained should given an indication as to the volume of wealth the client would reasonably be expected to have, and provided a picture of how it was acquired.

          Possible values:
          employmentIncome
          investmentIncome
          businessIncome
          oneOffPayment
          saleOfAssets
          windfall
      overrideReason:
        type: string
        description: 'Reason for changing the customer''s risk class from the calculated risk class. Mandatory, if CALC.RISK.CLASS is not the same as MANUAL.RISK.CLASS.'
      recordStatus:
        type: string
        description: |-
          Indicates the current status of the record.Validation Rules-No input fieldSystem generated.
          Example- INAU
      currNo:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
          Validation Rules-No input fieldSystem generated.
          Example- 1
      authoriser:
        type: string
        description: |-
          The user that authorised the record.Where a record has been modified multiple times (i.e the CURR.NO field is greater than 1) only the last authoriser is shown. 
          Validation Rules-No input fieldSystem generated.
      companyCode:
        type: string
        description: |-
          The company code that the record belongs to. 
          Validation Rules-No input fieldSystem generated.
          Example- AU0010001
      departmentCode:
        type: string
        description: |-
          The department code of the person that last modified the record. 
          Validation Rules-No input fieldSystem generated. 
          Example- 01
      auditorCode:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the audit information at which the function was used. 
          Validation Rules-No input fieldSystem generated.
      auditDateTime:
        type: string
        format: date
        description: |-
          Timestamp of the issue that is logged.
          17 characters Date Time format.
          It need to be displayed as DD MMM YYYY HH-MM-SS.sss.
          Example- 12 JAN 2015 12-34-25.123
          The value is not editable by the user.
  getIndividualCustomerErrorResponse:
    properties:
      header:
        $ref: '#/definitions/ErrorHeader'
      error:
        $ref: '#/definitions/getIndividualCustomerErrorResponseBody'
    description: getIndividualCustomerErrorResponse
  getIndividualCustomerErrorResponseBody:
    type: object
    properties:
      errorDetails:
        type: array
        items:
          type: object
          properties:
            fieldName:
              type: string
            code:
              type: string
            message:
              type: string
      type:
        type: string
  findCustomerRelationResponseQueryHeader:
    properties:
      audit:
        type: object
        properties:
          T24_time:
            type: integer
            format: int32
          parse_time:
            type: integer
            format: int32
      page_size:
        type: integer
        format: int32
      page_start:
        type: integer
        format: int32
      total_size:
        type: integer
        format: int32
      page_token:
        type: string
      data:
        type: object
        properties:
          HDR:
            type: string
            description: ''
          NO.REC:
            type: string
            description: ''
  findCustomerRelationResponse:
    properties:
      header:
        $ref: '#/definitions/findCustomerRelationResponseQueryHeader'
      body:
        $ref: '#/definitions/findCustomerRelationResponseBody'
    description: findCustomerRelationResponse
  findCustomerRelationResponseBody:
    type: array
    items:
      type: object
      properties:
        customer:
          type: string
          description: 'This field denotes the customer(s) of the Arrangement contract. Defaulted from Associated multi-value field with Customer role, Delivery required, Tax liability %, GL and Limit allocation.Validation rules1 -6 numeric character customer number. or 3 - 10 alphanumeric character customer mnemonic. (mandatory input)Must be either a valid customer number or customer mnemonic of a customer on the CUSTOMER file.'
        relatedAs:
          type: string
          description: Related to customer
        toCustomer:
          type: string
          description: Customer to which payment is made.
  findCustomerRelationErrorResponse:
    properties:
      header:
        $ref: '#/definitions/ErrorHeader'
      error:
        $ref: '#/definitions/findCustomerRelationErrorResponseBody'
    description: findCustomerRelationErrorResponse
  findCustomerRelationErrorResponseBody:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      type:
        type: string
  getCarrierAddressResponseQueryHeader:
    properties:
      audit:
        type: object
        properties:
          T24_time:
            type: integer
            format: int32
          parse_time:
            type: integer
            format: int32
      page_size:
        type: integer
        format: int32
      page_start:
        type: integer
        format: int32
      total_size:
        type: integer
        format: int32
      page_token:
        type: string
      data:
        type: object
        properties:
          NO.REC:
            type: string
            description: ''
  getCarrierAddressResponse:
    properties:
      header:
        $ref: '#/definitions/getCarrierAddressResponseQueryHeader'
      body:
        $ref: '#/definitions/getCarrierAddressResponseBody'
    description: getCarrierAddressResponse
  getCarrierAddressResponseBody:
    type: array
    items:
      type: object
      properties:
        carrierId:
          type: string
          description: Id of the carrier
        carrierAddress:
          type: string
          description: This specifies the carrier address.
  getCarrierAddressErrorResponse:
    properties:
      header:
        $ref: '#/definitions/ErrorHeader'
      error:
        $ref: '#/definitions/getCarrierAddressErrorResponseBody'
    description: getCarrierAddressErrorResponse
  getCarrierAddressErrorResponseBody:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      type:
        type: string
  QueryHeader:
    properties:
      audit:
        type: object
        properties:
          T24_time:
            type: integer
            format: int32
          parse_time:
            type: integer
            format: int32
      page_size:
        type: integer
        format: int32
      page_start:
        type: integer
        format: int32
      total_size:
        type: integer
        format: int32
      page_token:
        type: string
  getCustomerByLegalIDResponse:
    properties:
      header:
        $ref: '#/definitions/QueryHeader'
      body:
        $ref: '#/definitions/getCustomerByLegalIDResponseBody'
    description: getCustomerByLegalIDResponse
  getCustomerByLegalIDResponseBody:
    type: array
    items:
      type: object
      properties:
        customerId:
          type: string
          description: Standard T24 customer field. Validation Rules A maximum of 10 characters may be entered. Must be the key to a valid entry on the CUSTOMER file.
          maxLength: 10
        customerName:
          type: string
          description: Identifies the name of the customer.
          maxLength: 35
  getCustomerByLegalIDErrorResponse:
    properties:
      header:
        $ref: '#/definitions/ErrorHeader'
      error:
        $ref: '#/definitions/getCustomerByLegalIDErrorResponseBody'
    description: getCustomerByLegalIDErrorResponse
  getCustomerByLegalIDErrorResponseBody:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      type:
        type: string
  getAccountSignatoryCustomersResponse:
    properties:
      header:
        $ref: '#/definitions/QueryHeader'
      body:
        $ref: '#/definitions/getAccountSignatoryCustomersResponseBody'
    description: getAccountSignatoryCustomersResponse
  getAccountSignatoryCustomersResponseBody:
    type: array
    items:
      type: object
      properties:
        customerAccountNumber:
          type: string
          description: ''
          maxLength: 35
        mandateId:
          type: string
          description: ''
        mandateDescription:
          type: string
          description: ''
        minimumNoToSign:
          type: string
          description: ''
        signatorieslist:
          type: array
          items:
            type: object
            properties:
              signatoryGroupId:
                type: string
                description: ''
              signatories:
                type: string
                description: |-
                  Indicates the customers who are signing this particular transaction .In case of bank user this field is entered manually whereas for external users this field is automatically updated with external user key 
                  Validation Rules- 
                  1. Accepts only valid customers 
                  2. Duplicate customer not allowed.
              endDate:
                type: string
                description: 'If a frequency has been specified the user can specify a Start Date or it can be defaulted from the Base Date. Additionally an End Date or a Number of Payments can be specified to indicate to T24 when the payments should terminate. This field is part of a multi value set of fields with START.DATE, NUM.PAYMENTS and ACTUAL.AMT. Must be a valid date.'
              startDate:
                type: string
                description: Effective Date
  getAccountSignatoryCustomersErrorResponse:
    properties:
      header:
        $ref: '#/definitions/ErrorHeader'
      error:
        $ref: '#/definitions/getAccountSignatoryCustomersErrorResponseBody'
    description: getAccountSignatoryCustomersErrorResponse
  getAccountSignatoryCustomersErrorResponseBody:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      type:
        type: string
  createLimit:
    properties:
      header:
        $ref: '#/definitions/PayloadHeader'
      body:
        $ref: '#/definitions/createLimitBody'
    description: createLimit
  createLimitBody:
    type: object
    properties:
      riskList:
        type: array
        items:
          type: object
          properties:
            countryOfRisk:
              type: string
              description: ''
            countryPercent:
              type: number
              description: ''
      notesList:
        type: array
        items:
          type: object
          properties:
            notes:
              type: string
              description: Descriptive notes on customer interaction with the bank Validation Rules- Optional input. Maximum of 40 characters allowed.
      collateralInformation:
        type: array
        items:
          type: object
          properties:
            collateralCode:
              type: string
              description: ''
            maximumValueOfCollateral:
              type: string
              description: ''
      overrideList:
        type: array
        items:
          type: object
          properties:
            override:
              type: string
              description: |-
                Records the overrides generated during processing of an activity. All the overrides generated in the property class templates (AA.ARR.XXXX, where XXXX - Property Class) for the Activity input are updated in this field.
                Standard override field, Multi-valued.
      inputterList:
        type: array
        items:
          type: object
          properties:
            inputter:
              type: string
              description: The users that have modified this record.Validation Rules-No input fieldSystem generated.
      dateTimeList:
        type: array
        items:
          type: object
          properties:
            dateTime:
              type: string
              format: date
              description: |-
                This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
                Validation Rules-No input fieldSystem generated.
      limitCurrency:
        type: string
        description: ''
      limitProposalDate:
        type: string
        format: date
        description: ''
      limitApprovalDate:
        type: string
        format: date
        description: ''
      limitOfferedUntil:
        type: string
        description: ''
      limitReviewFrequency:
        type: string
        description: ''
      limitExpiryDate:
        type: string
        format: date
        description: ''
      onlineLimitDate:
        type: string
        format: date
        description: ''
      lastDrawingDate:
        type: string
        format: date
        description: ''
      internalAmount:
        type: number
        format: int64
        description: ''
      advisedAmountToTheCustomer:
        type: number
        format: int64
        description: ''
      fixedOrVariableTypeOfLimit:
        type: string
        description: ''
      totalLimitAmount:
        type: number
        format: int64
        description: ''
      limitAvailableMarker:
        type: string
        description: ''
      limitProduct:
        type: string
        description: ''
      recordStatus:
        type: string
        description: |-
          Indicates the current status of the record.Validation Rules-No input fieldSystem generated.
          Example- INAU
      currNo:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
          Validation Rules-No input fieldSystem generated.
          Example- 1
      authoriser:
        type: string
        description: |-
          The user that authorised the record.Where a record has been modified multiple times (i.e the CURR.NO field is greater than 1) only the last authoriser is shown. 
          Validation Rules-No input fieldSystem generated.
      companyCode:
        type: string
        description: |-
          The company code that the record belongs to. 
          Validation Rules-No input fieldSystem generated.
          Example- AU0010001
      departmentCode:
        type: string
        description: |-
          The department code of the person that last modified the record. 
          Validation Rules-No input fieldSystem generated. 
          Example- 01
  createLimitResponse:
    properties:
      header:
        $ref: '#/definitions/ScreenHeader'
      body:
        $ref: '#/definitions/createLimitResponseBody'
    description: createLimitResponse
  createLimitResponseBody:
    type: object
    properties:
      riskList:
        type: array
        items:
          type: object
          properties:
            countryOfRisk:
              type: string
              description: ''
            countryPercent:
              type: number
              description: ''
      notesList:
        type: array
        items:
          type: object
          properties:
            notes:
              type: string
              description: Descriptive notes on customer interaction with the bank Validation Rules- Optional input. Maximum of 40 characters allowed.
      collateralInformation:
        type: array
        items:
          type: object
          properties:
            collateralCode:
              type: string
              description: ''
            maximumValueOfCollateral:
              type: string
              description: ''
      overrideList:
        type: array
        items:
          type: object
          properties:
            override:
              type: string
              description: |-
                Records the overrides generated during processing of an activity. All the overrides generated in the property class templates (AA.ARR.XXXX, where XXXX - Property Class) for the Activity input are updated in this field.
                Standard override field, Multi-valued.
      inputterList:
        type: array
        items:
          type: object
          properties:
            inputter:
              type: string
              description: The users that have modified this record.Validation Rules-No input fieldSystem generated.
      dateTimeList:
        type: array
        items:
          type: object
          properties:
            dateTime:
              type: string
              format: date
              description: |-
                This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
                Validation Rules-No input fieldSystem generated.
      limitCurrency:
        type: string
        description: ''
      limitProposalDate:
        type: string
        format: date
        description: ''
      limitApprovalDate:
        type: string
        format: date
        description: ''
      limitOfferedUntil:
        type: string
        description: ''
      limitReviewFrequency:
        type: string
        description: ''
      limitExpiryDate:
        type: string
        format: date
        description: ''
      onlineLimitDate:
        type: string
        format: date
        description: ''
      lastDrawingDate:
        type: string
        format: date
        description: ''
      internalAmount:
        type: number
        format: int64
        description: ''
      advisedAmountToTheCustomer:
        type: number
        format: int64
        description: ''
      fixedOrVariableTypeOfLimit:
        type: string
        description: ''
      totalLimitAmount:
        type: number
        format: int64
        description: ''
      limitAvailableMarker:
        type: string
        description: ''
      limitProduct:
        type: string
        description: ''
      recordStatus:
        type: string
        description: |-
          Indicates the current status of the record.Validation Rules-No input fieldSystem generated.
          Example- INAU
      currNo:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
          Validation Rules-No input fieldSystem generated.
          Example- 1
      authoriser:
        type: string
        description: |-
          The user that authorised the record.Where a record has been modified multiple times (i.e the CURR.NO field is greater than 1) only the last authoriser is shown. 
          Validation Rules-No input fieldSystem generated.
      companyCode:
        type: string
        description: |-
          The company code that the record belongs to. 
          Validation Rules-No input fieldSystem generated.
          Example- AU0010001
      departmentCode:
        type: string
        description: |-
          The department code of the person that last modified the record. 
          Validation Rules-No input fieldSystem generated. 
          Example- 01
  createLimitErrorResponse:
    properties:
      header:
        $ref: '#/definitions/ErrorHeader'
      error:
        $ref: '#/definitions/createLimitErrorResponseBody'
    description: createLimitErrorResponse
  createLimitErrorResponseBody:
    type: object
    properties:
      errorDetails:
        type: array
        items:
          type: object
          properties:
            fieldName:
              type: string
            code:
              type: string
            message:
              type: string
      type:
        type: string
  updateLimit:
    properties:
      header:
        $ref: '#/definitions/PayloadHeader'
      body:
        $ref: '#/definitions/updateLimitBody'
    description: updateLimit
  updateLimitBody:
    type: object
    properties:
      riskList:
        type: array
        items:
          type: object
          properties:
            countryOfRisk:
              type: string
              description: ''
            countryPercent:
              type: number
              description: ''
      notesList:
        type: array
        items:
          type: object
          properties:
            notes:
              type: string
              description: Descriptive notes on customer interaction with the bank Validation Rules- Optional input. Maximum of 40 characters allowed.
      collateralInformation:
        type: array
        items:
          type: object
          properties:
            collateralCode:
              type: string
              description: ''
            maximumValueOfCollateral:
              type: string
              description: ''
      overrideList:
        type: array
        items:
          type: object
          properties:
            override:
              type: string
              description: |-
                Records the overrides generated during processing of an activity. All the overrides generated in the property class templates (AA.ARR.XXXX, where XXXX - Property Class) for the Activity input are updated in this field.
                Standard override field, Multi-valued.
      inputterList:
        type: array
        items:
          type: object
          properties:
            inputter:
              type: string
              description: The users that have modified this record.Validation Rules-No input fieldSystem generated.
      dateTimeList:
        type: array
        items:
          type: object
          properties:
            dateTime:
              type: string
              format: date
              description: |-
                This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
                Validation Rules-No input fieldSystem generated.
      limitCurrency:
        type: string
        description: ''
      limitProposalDate:
        type: string
        format: date
        description: ''
      limitApprovalDate:
        type: string
        format: date
        description: ''
      limitOfferedUntil:
        type: string
        description: ''
      limitReviewFrequency:
        type: string
        description: ''
      limitExpiryDate:
        type: string
        format: date
        description: ''
      onlineLimitDate:
        type: string
        format: date
        description: ''
      lastDrawingDate:
        type: string
        format: date
        description: ''
      internalAmount:
        type: number
        format: int64
        description: ''
      advisedAmountToTheCustomer:
        type: number
        format: int64
        description: ''
      fixedOrVariableTypeOfLimit:
        type: string
        description: ''
      totalLimitAmount:
        type: number
        format: int64
        description: ''
      maximumAmtOfUnsecuredLimit:
        type: string
        description: ''
      limitAvailableMarker:
        type: string
        description: ''
      additionalIncrease:
        type: string
        description: ''
      limitExtensionDate:
        type: string
        format: date
        description: ''
      limitProduct:
        type: string
        description: ''
      recordStatus:
        type: string
        description: |-
          Indicates the current status of the record.Validation Rules-No input fieldSystem generated.
          Example- INAU
      currNo:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
          Validation Rules-No input fieldSystem generated.
          Example- 1
      authoriser:
        type: string
        description: |-
          The user that authorised the record.Where a record has been modified multiple times (i.e the CURR.NO field is greater than 1) only the last authoriser is shown. 
          Validation Rules-No input fieldSystem generated.
      companyCode:
        type: string
        description: |-
          The company code that the record belongs to. 
          Validation Rules-No input fieldSystem generated.
          Example- AU0010001
      departmentCode:
        type: string
        description: |-
          The department code of the person that last modified the record. 
          Validation Rules-No input fieldSystem generated. 
          Example- 01
  updateLimitResponse:
    properties:
      header:
        $ref: '#/definitions/ScreenHeader'
      body:
        $ref: '#/definitions/updateLimitResponseBody'
    description: updateLimitResponse
  updateLimitResponseBody:
    type: object
    properties:
      riskList:
        type: array
        items:
          type: object
          properties:
            countryOfRisk:
              type: string
              description: ''
            countryPercent:
              type: number
              description: ''
      notesList:
        type: array
        items:
          type: object
          properties:
            notes:
              type: string
              description: Descriptive notes on customer interaction with the bank Validation Rules- Optional input. Maximum of 40 characters allowed.
      collateralInformation:
        type: array
        items:
          type: object
          properties:
            collateralCode:
              type: string
              description: ''
            maximumValueOfCollateral:
              type: string
              description: ''
      overrideList:
        type: array
        items:
          type: object
          properties:
            override:
              type: string
              description: |-
                Records the overrides generated during processing of an activity. All the overrides generated in the property class templates (AA.ARR.XXXX, where XXXX - Property Class) for the Activity input are updated in this field.
                Standard override field, Multi-valued.
      inputterList:
        type: array
        items:
          type: object
          properties:
            inputter:
              type: string
              description: The users that have modified this record.Validation Rules-No input fieldSystem generated.
      dateTimeList:
        type: array
        items:
          type: object
          properties:
            dateTime:
              type: string
              format: date
              description: |-
                This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
                Validation Rules-No input fieldSystem generated.
      limitCurrency:
        type: string
        description: ''
      limitProposalDate:
        type: string
        format: date
        description: ''
      limitApprovalDate:
        type: string
        format: date
        description: ''
      limitOfferedUntil:
        type: string
        description: ''
      limitReviewFrequency:
        type: string
        description: ''
      limitExpiryDate:
        type: string
        format: date
        description: ''
      onlineLimitDate:
        type: string
        format: date
        description: ''
      lastDrawingDate:
        type: string
        format: date
        description: ''
      internalAmount:
        type: number
        format: int64
        description: ''
      advisedAmountToTheCustomer:
        type: number
        format: int64
        description: ''
      fixedOrVariableTypeOfLimit:
        type: string
        description: ''
      totalLimitAmount:
        type: number
        format: int64
        description: ''
      maximumAmtOfUnsecuredLimit:
        type: string
        description: ''
      limitAvailableMarker:
        type: string
        description: ''
      additionalIncrease:
        type: string
        description: ''
      limitExtensionDate:
        type: string
        format: date
        description: ''
      limitProduct:
        type: string
        description: ''
      recordStatus:
        type: string
        description: |-
          Indicates the current status of the record.Validation Rules-No input fieldSystem generated.
          Example- INAU
      currNo:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
          Validation Rules-No input fieldSystem generated.
          Example- 1
      authoriser:
        type: string
        description: |-
          The user that authorised the record.Where a record has been modified multiple times (i.e the CURR.NO field is greater than 1) only the last authoriser is shown. 
          Validation Rules-No input fieldSystem generated.
      companyCode:
        type: string
        description: |-
          The company code that the record belongs to. 
          Validation Rules-No input fieldSystem generated.
          Example- AU0010001
      departmentCode:
        type: string
        description: |-
          The department code of the person that last modified the record. 
          Validation Rules-No input fieldSystem generated. 
          Example- 01
  updateLimitErrorResponse:
    properties:
      header:
        $ref: '#/definitions/ErrorHeader'
      error:
        $ref: '#/definitions/updateLimitErrorResponseBody'
    description: updateLimitErrorResponse
  updateLimitErrorResponseBody:
    type: object
    properties:
      errorDetails:
        type: array
        items:
          type: object
          properties:
            fieldName:
              type: string
            code:
              type: string
            message:
              type: string
      type:
        type: string
  getLimitResponse:
    properties:
      header:
        $ref: '#/definitions/ScreenHeader'
      body:
        $ref: '#/definitions/getLimitResponseBody'
    description: getLimitResponse
  getLimitResponseBody:
    type: object
    properties:
      riskList:
        type: array
        items:
          type: object
          properties:
            countryOfRisk:
              type: string
              description: ''
            countryPercent:
              type: number
              description: ''
      notesList:
        type: array
        items:
          type: object
          properties:
            notes:
              type: string
              description: Descriptive notes on customer interaction with the bank Validation Rules- Optional input. Maximum of 40 characters allowed.
      collateralInformation:
        type: array
        items:
          type: object
          properties:
            collateralCode:
              type: string
              description: ''
            maximumValueOfCollateral:
              type: string
              description: ''
      overrideList:
        type: array
        items:
          type: object
          properties:
            override:
              type: string
              description: |-
                Records the overrides generated during processing of an activity. All the overrides generated in the property class templates (AA.ARR.XXXX, where XXXX - Property Class) for the Activity input are updated in this field.
                Standard override field, Multi-valued.
      inputterList:
        type: array
        items:
          type: object
          properties:
            inputter:
              type: string
              description: The users that have modified this record.Validation Rules-No input fieldSystem generated.
      dateTimeList:
        type: array
        items:
          type: object
          properties:
            dateTime:
              type: string
              format: date
              description: |-
                This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
                Validation Rules-No input fieldSystem generated.
      limitCurrency:
        type: string
        description: ''
      limitProposalDate:
        type: string
        format: date
        description: ''
      limitApprovalDate:
        type: string
        format: date
        description: ''
      limitOfferedUntil:
        type: string
        description: ''
      limitReviewFrequency:
        type: string
        description: ''
      limitExpiryDate:
        type: string
        format: date
        description: ''
      onlineLimitDate:
        type: string
        format: date
        description: ''
      lastDrawingDate:
        type: string
        format: date
        description: ''
      internalAmount:
        type: number
        format: int64
        description: ''
      advisedAmountToTheCustomer:
        type: number
        format: int64
        description: ''
      fixedOrVariableTypeOfLimit:
        type: string
        description: ''
      totalLimitAmount:
        type: number
        format: int64
        description: ''
      limitAvailableMarker:
        type: string
        description: ''
      limitProduct:
        type: string
        description: ''
      recordStatus:
        type: string
        description: |-
          Indicates the current status of the record.Validation Rules-No input fieldSystem generated.
          Example- INAU
      currNo:
        type: string
        description: |-
          This field is populated by using the auditor review function, and holds the date and time at which the function was used. 
          Validation Rules-No input fieldSystem generated.
          Example- 1
      authoriser:
        type: string
        description: |-
          The user that authorised the record.Where a record has been modified multiple times (i.e the CURR.NO field is greater than 1) only the last authoriser is shown. 
          Validation Rules-No input fieldSystem generated.
      companyCode:
        type: string
        description: |-
          The company code that the record belongs to. 
          Validation Rules-No input fieldSystem generated.
          Example- AU0010001
      departmentCode:
        type: string
        description: |-
          The department code of the person that last modified the record. 
          Validation Rules-No input fieldSystem generated. 
          Example- 01
  getLimitErrorResponse:
    properties:
      header:
        $ref: '#/definitions/ErrorHeader'
      error:
        $ref: '#/definitions/getLimitErrorResponseBody'
    description: getLimitErrorResponse
  getLimitErrorResponseBody:
    type: object
    properties:
      errorDetails:
        type: array
        items:
          type: object
          properties:
            fieldName:
              type: string
            code:
              type: string
            message:
              type: string
      type:
        type: string
