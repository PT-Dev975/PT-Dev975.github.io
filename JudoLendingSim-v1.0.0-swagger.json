{
    "swagger": "2.0",
    "info": {
        "description": "Judo Lending Simulation",
        "version": "v1.0.0",
        "title": "Judo Lending Simulation"
    },
    "host": "localhost:9090",
    "basePath": "/api/v1.0.0",
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "/product/createLocSim": {
            "post": {
                "operationId": "createLocSim",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createLocSim"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createLocSimResponse",
                        "schema": {
                            "$ref": "#/definitions/createLocSimResponse"
                        }
                    },
                    "default": {
                        "description": "createLocSimErrorResponse",
                        "schema": {
                            "$ref": "#/definitions/createLocSimErrorResponse"
                        }
                    }
                }
            }
        },
        "/product/getPaymentSchedule": {
            "get": {
                "operationId": "getPaymentSchedule",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Arrangement",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "DateFrom",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "DateTo",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "SimRef",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The total number of records per page",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "page_start",
                        "in": "query",
                        "description": "The record from which the response should be displayed",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "page_token",
                        "in": "query",
                        "description": "Random and unique string for each page. Used for security purpose",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "getPaymentScheduleResponse",
                        "schema": {
                            "$ref": "#/definitions/getPaymentScheduleResponse"
                        }
                    },
                    "default": {
                        "description": "getPaymentScheduleErrorResponse",
                        "schema": {
                            "$ref": "#/definitions/getPaymentScheduleErrorResponse"
                        }
                    }
                }
            }
        },
        "/product/createHLSim": {
            "post": {
                "operationId": "createHLSim",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createHLSim"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createHLSimResponse",
                        "schema": {
                            "$ref": "#/definitions/createHLSimResponse"
                        }
                    },
                    "default": {
                        "description": "createHLSimErrorResponse",
                        "schema": {
                            "$ref": "#/definitions/createHLSimErrorResponse"
                        }
                    }
                }
            }
        },
        "/product/createBLSim": {
            "post": {
                "operationId": "createBLSim",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createBLSim"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createBLSimResponse",
                        "schema": {
                            "$ref": "#/definitions/createBLSimResponse"
                        }
                    },
                    "default": {
                        "description": "createBLSimErrorResponse",
                        "schema": {
                            "$ref": "#/definitions/createBLSimErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "PayloadHeader": {
            "type": "object",
            "properties": {
                "override_acceptId": {
                    "type": "string"
                }
            }
        },
        "createLocSim": {
            "properties": {
                "header": {
                    "$ref": "#/definitions/PayloadHeader"
                },
                "body": {
                    "$ref": "#/definitions/createLocSimBody"
                }
            },
            "description": "createLocSim"
        },
        "createLocSimBody": {
            "type": "object",
            "properties": {
                "parties": {
                    "type": "array",
                    "description": "",
                    "items": {
                        "type": "object",
                        "properties": {
                            "partyId": {
                                "type": "string",
                                "description": "This field denotes the customer(s) of the Arrangement contract.\nThis field is required to be input for new arrangement, takeover, and Change primary customer activities.\nAssociated multi-value with CUSTOMER.ROLE field.\nValidation Rules:\n1 -6 numeric character customer number. or 3 - 10 alphanumeric character customer mnemonic. (mandatory input).\nMust be either a valid customer number or customer mnemonic of a customer on the CUSTOMER file.\n"
                            },
                            "partyRole": {
                                "type": "string",
                                "description": "Associated with CUSTOMER field. Denotes the role of the customer in the Arrangement.\nValidation Rules:\nMandatory input. If not input by the user, defaulted with the system created role 'Owner'.\nMust be a valid record in AA.CUSTOMER.ROLE table.\n"
                            }
                        }
                    }
                },
                "agents": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "agentId": {
                                "type": "string",
                                "description": "Holds the agent ID from CUSTOMER table.\n"
                            },
                            "agentArrangementId": {
                                "type": "string",
                                "description": "Hold the agentâ€™s arrangement ID, based on which commissions have to be calculated. Should be a valid AA.ARRANGEMENT (AGENT LINE).\n"
                            },
                            "agentRole": {
                                "type": "string",
                                "description": ""
                            }
                        }
                    }
                },
                "arrangmentId": {
                    "type": "string",
                    "description": "Unique identification number for the arrangement contract. The format of the ID is as follows.\nAA YYDDD xxxxx.\nwhere: AA - Arrangement Architecture module identifier, YYDDD - Year and date of input in julian date format, xxxxx - Is a system generated unique identifier.\nFor 'New Arrangement' activity this field should be input as 'NEW' and will be updated by the system while processing the activity with the unique reference number.\nWhen attempting an activity for a existing arrangement and the arrangement has generated a underlying ACCOUNT record, then the ACCOUNT id may be used as an alternate id.\nValidation Rules:\nMust be 'NEW' or an existing Arrangement ID.\n"
                },
                "productId": {
                    "type": "string",
                    "description": "This field denotes product of the arrangement contract. The characteristics of the arrangement is derived from the Product to which it is linked to.\nAn arrangement product and arrangement contract is a series of properties (AA.PROPERTY) relating to different components (AA.PROPERTY.CLASS). Each product has a set of mandatory components and optional components.\nIt is possible to change the product of the arrangement during its life-cycle subject to certain restrictions. For each product change this field is updated along with the effective date of change.\n"
                },
                "variation": {
                    "type": "string",
                    "description": "The field specifies the variation of the product that the arrangement is running. When selecting a product from the catalogue, entering the customer number and validating, AA will automatically choose the correct variation based upon the eligibility rules and priority specified. If a user manually specified the variation, eligibility will still be checked and if the user is not eligible but the rules are configured to raise an override, the user can choose to accept the override.\n"
                },
                "currency": {
                    "type": "string",
                    "description": "The SWIFT Currency Code for the entry. The Currency of the Account in Field 1.  Not used in Entries over local currency Accounts.\n3 type S (upper-case alpha or numeric) characters Currency Code, or blank. (Internal file, no input.)\n"
                },
                "pricing": {
                    "type": "string",
                    "description": "Method used to assign a Relationship Pricing Arrangement(s) to the financial arrangement.\nAutomatic (or blank) â€“ The conditions in the productâ€™s Pricing Rules property will determine the pricing plan to apply. This option is valid if the Pricing Rules are set to 'Automatic' or 'Automatic or Manual'.\nManual â€“ The user will manually assign a plan with the following field. This option is valid if the Pricing Rules are set to 'Manual' or 'Automatic or Manual'.\nNo Pricing â€“ No plan will be applied.\nNone â€“ No plan will be applied.\nThis is an optional field.\nShould be either AUTOMATIC, MANUAL or NO.PRICING or NONE.\n"
                },
                "pricingPlan": {
                    "type": "string",
                    "description": "If 'Automatic' is specified in PRICING.SELECTION field, then AA will determine the best plan and populate this field with the Plan Product ID. If 'Manual' is selected the user must enter the Plan Product ID. AA will validate to ensure that a valid Relationship Pricing Arrangement exists for the customer. This Plan ID/Variation will also be stored in AA.ARRANGEMENT.\n"
                },
                "simulationId": {
                    "type": "string",
                    "description": ""
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Standard date field, which is the trade date of the contract. Can be input during NEW/ROLLOVER/CHANGE.PRODUCT activities, amendment during other activities would cause error.\nValidations\n1. A date field type only.\n2. Initially defaulted to the effective date, if it is a forward dated activity then the current system date will be defaulted.\n3. Can be changed but must be equal to or less than the current system date.\n4. A back dated date is acceptable but must be within the parameters of the Product Proofing.\n5. Cannot have a date that is greater than the existing field EFFECTIVE.DATE in AA.ARRANGEMENT.ACTIVITY.\n"
                },
                "activityId": {
                    "type": "string",
                    "description": ""
                },
                "effectiveDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Effective date of the Activity to be processed. This is always required for processing any activity.\nStandard date field.\n"
                },
                "reason": {
                    "type": "string",
                    "description": "A text field to store the reason behind performing the current activity. For example, if the rate is manually revised or product changed or redeemed(and not restricted to the above activities alone), a user may record a reason for performing such activity for future verification and audit.\n"
                },
                "balance": {
                    "type": "object",
                    "properties": {
                        "alternateIds": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "alternateIdType": {
                                        "type": "string",
                                        "description": "In this application any alternate account systems defined in the ACCOUNT.PARAMETER application will be defaulted to allow maintenance of the alternate account system.\nWhen alternate account systems are defined in the ALT.ACT.PARAMETER application and entered in the ACCOUNT.PARAMETER ALTERNATE.ID field, their system identifiers will be displayed here, allowing maintenance of the alternate account identifiers in the following field.\nNo amendments are allowed.\nMultivalue field.\nThis is a NOINPUT field.\n"
                                    },
                                    "alternateId": {
                                        "type": "string",
                                        "description": "Alternate System IDs are typically used for accounts that have been taken over from a different system or bank. Each of these previous account systems are specified in T24 and for accounts which have been taken over, the alternate account ID specific to the previous system will be specified at the arrangement level.\nUp to 16 type A (alphanumeric) characters.\n"
                                    }
                                }
                            }
                        },
                        "restrictionRules": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "postingRestriction": {
                                        "type": "string",
                                        "description": "This field Specifies the account closure posting restriction code (defined in POSTING.RESTRICT). This would be used to update the ACCOUNT.CLOSURE record that is automatically created by the system once the close activity is triggered. POSTING.RESTRICT should be between 90 to 99..\n"
                                    },
                                    "blockingCode": {
                                        "type": "string",
                                        "description": "Pre defined set of blocking code that are defined in EB.LOOKUP and is linked to each posting restriction.\nEach blocking code is linked to corresponding posting restriction by defining them in posting restriction table.\nWhen a blocking code is linked to a posting restriction then this code should be defined in the posting restriction record or else system will not allow to link the blocking code.\nValidation Rules:\nThis field will accept a record from the EB.LOOKUP.\nNot a Mandatory field.\nVirtual table name for EB.LOOKUP will be BLOCK.REASON.CODES.\n"
                                    },
                                    "blockingReason": {
                                        "type": "string",
                                        "description": "This field will be used to capture Free Text information.\nThis field will take virtually unlimited text.\nCan be added in addition to the BLOCKING.CODE field.\nNot a mandatory field.\n"
                                    },
                                    "startDate": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Identifies the Date & Frequency of the Standalone DD for execution.\nThe claim value date is the date component of this field. Hence the date & the frequency has to be given after considering the Claim value date as given in DD.PARAMETER.\nThe date is cycled with the given frequency and this mandate reference is updated in DD.STANDALONE.FQU.LIST with the next execution date.\nWhenever the frequency is modified, then the underlying claim (DD.ITEM) is marked as 'DELETED' and new claim is raised for the given frequency. Incase the Claim is already sent(DD.ITEM status is 'CLAIMSENT'), then override is raised. However the DD.ITEM will not be marked as 'DELETED' as claim file is already generated.\nMandatory when STAND.ALONE.DDI set to Yes\nThis field is sub-divided into two elements: 1. Date 1-9 type D (date format in range 1950-2049) characters. 2. Optional Frequency 1-5 type SS (uppercase alpha or numeric, first character alpha) characters. (Mandatory input)\nThe date input or generated will correspond to the first execution of the Standalone DD.\nUsing the date & frequency in case given , DD.STANDALONE.FQU.LIST is updated with the next execution date.\nAn override will be required if the date input is a non-working day.\nDate entered should be greater than today and should not be more than Termination date.\n"
                                    },
                                    "expiryDate": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Specifies the date on which the Limit will expire. But if there are contracts against this limit,  then the limit will move to history only after the contracts mature. Any new drawings against this limit would raise overrides stating that the limit expires before the maturity date.\nWarning of the approach of this date is given on the Limits Approaching Expiry Date overnight report. The number of days prior to Expiry Date that the warning starts to appear is defined by the Expiries Reporting field on the LIMIT.PARAMETER table.\n6 to 11 type D (date) characters. (Defaults to a year from the current run     date.) The date input must be greater than or equal to the Limit Review Date\n"
                                    },
                                    "unblockingCode": {
                                        "type": "string",
                                        "description": "This field will be used to define the Description when removing the restriction.\nValidation Rules:\nThis field will accept a record from the EB.LOOKUP.\nNot a Mandatory field.\nVirtual table name for EB.LOOKUP will be UNBLOCK.REASON.CODES.\n"
                                    },
                                    "unblockingReason": {
                                        "type": "string",
                                        "description": "This field will be used to capture Free Text information for removal of restriction.\nThis field will take virtually unlimited text.\nCan be added in addition to UNBLOCKING.CODE field.\nNot a mandatory field.\n"
                                    }
                                }
                            }
                        },
                        "accountType": {
                            "type": "string",
                            "description": "The title lines are used to describe the specific account in multiple languages.\nUp to 35 type A (alphanumeric) characters.\n"
                        },
                        "accountName": {
                            "type": "string",
                            "description": "Identifies the first part, or the whole, of the Account Title.\nThis Field distinguishes individual Accounts, e.g. for a Customer who holds more than one Account.  The title can be continued in the ACCOUNT TITLE 2 Field.\nMulti-lingual field to hold the account title in different languages.\nUp to 35 type A (alphanumeric) characters. (Mandatory for Internal Accounts, otherwise optional input. Default is the Short Name from the Customer record.)\n"
                        },
                        "portfolioId": {
                            "type": "string",
                            "description": "Either the portfolio the Security Position is for or the depot the security position is for. Format is 6N - 3N Where 6N is the customer number and 3N the suffix. If the suffix is 999 then the security position is for the depository whose ID is the 6N prefix of this field, if the suffix is 777 then then security position is for the boker whose ID is the 6N prefix, otherwise (suffix is not 999 or 777) then this is the ID of the portfolio the security position is for.\nNo input field, Internally generated by the system.\n"
                        },
                        "anniversary": {
                            "type": "string",
                            "description": "This field stores the Anniversary Date of the arrangement in the format 'MMDD'. This is user inputtable field which will be used to get the start and end date of periodic rules if Rule Start is set to 'Anniversary' in the periodic attribute.\n"
                        },
                        "mnemonic": {
                            "type": "string",
                            "description": "Provides an alternative means of referencing the company details and is used in the naming of the files belonging to this company.\nThe mnemonic code rather than the Company ID may be used to reference the company.\nThe mnemonic code is used in the prefix of the files created /belonging for/to this company.\nThe code cannot be amended as an amendment would require files to be renamed/copied.\n2-3 type AA (alphanumeric, first character must be alpha) characters. (Mandatory input)  Cannot be changed.  The mnemonic code must be unique (no other company can have the same mnemonic value).\n"
                        },
                        "accountReference": {
                            "type": "string",
                            "description": "The field holds the reference of the underlying ACCOUNT application. This should just be the same as trying a new input on ACCOUNT application. If this field is populated, system would use the reference stated here to create the ACCOUNT. It is recommended that the reference be populated during TAKEOVER processing so that lock during key generation is avoided and Arrangement could load in a true multi-thread fashion. If it is not stated, system would try to create ACCOUNT reference using auto id generation of the ACCOUNT application.\n"
                        },
                        "customerReference": {
                            "type": "string",
                            "description": "It is used in Customer beneficiary only. Mapped to Credit their ref field in FT and Ben.Reference in STO. For detail description about this field, refer credit.their.ref in FT or BEN.REFERENCE in STO.\nMust be swift characters. 35 type Swift characters.\n(not mandatory)\n"
                        },
                        "originationReference": {
                            "type": "string",
                            "description": "This field is for information purposes only. This field may find use to store the external reference identifier which initiated this arrangement - like a Loan Origination's reference.\nThis is a standard T24 NOCHANGE Field of 35 characters in length and holds any character.\n"
                        },
                        "policyidentifier": {
                            "type": "string",
                            "description": ""
                        },
                        "legalEntity": {
                            "type": "string",
                            "description": ""
                        },
                        "entityAllocationDate": {
                            "type": "string",
                            "format": "date",
                            "description": ""
                        },
                        "loanContractId": {
                            "type": "string",
                            "description": ""
                        },
                        "arrangementSplitRole": {
                            "type": "string",
                            "description": ""
                        },
                        "brokerCompany": {
                            "type": "string",
                            "description": ""
                        },
                        "brokerIndividual": {
                            "type": "string",
                            "description": ""
                        },
                        "losId": {
                            "type": "string",
                            "description": ""
                        },
                        "numberToSign": {
                            "type": "string",
                            "description": ""
                        },
                        "sourceOfFund": {
                            "type": "string",
                            "description": ""
                        },
                        "accountPurpose": {
                            "type": "string",
                            "description": ""
                        },
                        "firstHomeBuyer": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "activityCharges": {
                    "type": "object",
                    "properties": {
                        "activities": {
                            "type": "array",
                            "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "activityId": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "charges": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "chargePropertyId": {
                                                    "type": "string",
                                                    "description": "This field indicates the charge that would be collected when the corresponding activity is triggered. This field is associated with the ACTIVITY.ID field. The charge defined will correspond to the CHARGE property. These properties and their conditions would be defined in the product designer of an product.\nValidation rule.\nShould be a valid AA.PROPERTY belonging to the CHARGE property class.\n"
                                                },
                                                "appplicationPeriod": {
                                                    "type": "string",
                                                    "description": "This will have to accept a valid T24 period.This Field will denote the application period for current aplication Method.\n"
                                                },
                                                "applicationMethod": {
                                                    "type": "string",
                                                    "description": "This will hold three values either DUE or CAPITALISE or DEFER.This Field denote which application method(DUE or CAPITALISE or DEFER)should be taken while applying activity charges.\n",
                                                    "enum": [
                                                        "DUE",
                                                        "CAPITALISE",
                                                        "DEFER"
                                                    ]
                                                },
                                                "chargeAutoSettle": {
                                                    "type": "string",
                                                    "description": "This field aids turning off the automatic settlement for the corresponding charge property. If the field is set as â€˜Yesâ€™ settlement processing will be done for the assocaited charge property when settlement property class is configured for â€˜Chargeâ€™ payment type.\nAllowed Values:.\nâ€˜Yesâ€™ or â€˜Noâ€™.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "settleActivity": {
                            "type": "string",
                            "description": "Defines the repayment activity to be triggered when there is unallocated credit. Triggered as secondary activity of Activity charge make due.\n"
                        }
                    }
                },
                "principaldrint": {
                    "type": "object",
                    "properties": {
                        "interest": {
                            "type": "array",
                            "description": "",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "fixed": {
                                        "type": "string",
                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA fixed rate is directly entered by the user specifying the Defined Property and is not defined by an index table. Fixed rates are entered as positive numbers unless a negative rate is allowed.\nThis field is part of a multi value set of fields including FIXED.RATE, FLOATING.INDEX, PERIODIC.INDEX, PERIODIC.PERIOD, PERIODIC.BASE, MARGIN.TYPE, MARGIN.OPER, MARGIN.RATE, TIER.MIN.RATE, TIER.MAX.RATE, TIER.AMOUNT,TIER.PERCENT.\n"
                                    },
                                    "floating": {
                                        "type": "string",
                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA floating interest rate is tied to a variable base rate (i.e. BASIC.INTEREST). During interest calculation, T24 will use the currency specific rate applicable for the calculation date (i.e. the rate used for the calculation will change whenever the base rate is changed).\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "spread": {
                                        "type": "string",
                                        "description": "It would be possible to specify that the rate for a given tier be â€˜Linkedâ€™, by setting the field Linked Rate to Yes.\nThis can be mixed with normal rate calculations as well.\nWhere the Linked Rate is set to Yes, system would expect that an Arrangement reference in given in the â€˜Linked Arrangementâ€™ field along with the Interest property to be linked to.\n"
                                    },
                                    "minMaxRate": {
                                        "type": "string",
                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "maxRate": {
                                        "type": "string",
                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "effectiveRate": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "negativeRate": {
                                        "type": "string",
                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                    },
                                    "orPercent": {
                                        "type": "number",
                                        "description": "The tier percent relates to the field RATE.TIER.TYPE and percentages can be entered if BAND is selected.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. Either TIER.PERCENT or TIER.AMOUNT can be entered by not both. If TIER.PERCENT is defined, then the Sum of Tier percentage should be 100%.\n"
                                    },
                                    "margins": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "margin": {
                                                    "type": "string",
                                                    "description": "Identifies whether there are single or multiple margins.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                },
                                                "marginOperation": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "attributes": {
                            "type": "array",
                            "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "attributes": {
                                        "type": "string",
                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "This field along with FIELD and OPERAND, helps the user to set the conditions for the Alert to be triggered. Holds the actual value of the field on which the criteria is based. If a value is provided at the event definition level, then that value is defaulted here. If not, the user can provide the value at the time of Subscribing.\nThe fields from FIELD to VALUE are displayed in this subscription screen only when INHERIT is set to Yes in the corresponding TEC.ITEMS record. These set of fields define the criteria for alerts.\n"
                                    },
                                    "linkedArrangement": {
                                        "type": "string",
                                        "description": "Where at least one tier is set to be Linked Rate, the Arrangement to be linked for calculating the Interest Rate, must be specified here (or automatically defaulted by the system, where a Limit is attached)\n"
                                    },
                                    "attribute": {
                                        "type": "string",
                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                    }
                                }
                            }
                        },
                        "periodicInterest": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "periodicIndex": {
                                        "type": "string",
                                        "description": "A periodic rate is tied to an index (e.g. LIBOR) which is dependent on a period of time (e.g. term) and possibly an amount. Once the arrangement is active, the rate is fixed until it is reset. Periodic rates can be reset at a pre-determined frequency.\nTo define a periodic rate, the user specifies:.\nPERIODIC.INTEREST index to use.\nPeriod (this will default to TERM if a Term Amount Property exists).\nInterest selection method if the term is not found on the index. The option currently available is INTERPOLATE.\nRate Reset period.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "periodicRate": {
                                        "type": "string",
                                        "description": "Indicates the rate on which the index runs on the date stated in the key. When a periodic index is used and the field is left blank, then system computes the rate from PERIODIC.INTEREST and defaults it here. When a rate is already present(say, the user changes the system computed rate), then system does not compute the new rate.\nValidation Rules:\nSystem defaulted and modifiable.\nStandard Rate field.\nValid only if Periodic index is stated.\n"
                                    },
                                    "periodicPeriodType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "periodicPeriod": {
                                        "type": "string",
                                        "description": "Defines the interest period to be used when linking to PERIODIC.INTEREST.(This will default to TERM if a Term Amount Property exists),. When a period is stated in Years or Weeks, they would be converted to Months and Days respectively and then located on the PI table.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "periodicMethod": {
                                        "type": "string",
                                        "description": "If system does not find a interest rate in the correct bucket of PERIODIC.INTEREST table, it automatically applies a method to arrive at a rate chosen by this method.\nValid method is:.\nINTERPOLATE - System automatically interpolates the rate. This is the DEFAULT option as well.\n"
                                    },
                                    "initialResetDate": {
                                        "type": "string",
                                        "format": "date",
                                        "description": ""
                                    },
                                    "periodicReset": {
                                        "type": "string",
                                        "description": "This indicates the reset period of the index stated. System would automatically reset the PERIODIC.RATE at the frequency stated in this field. Applicable only at Arrangement level. Periodic index may still be used without this field meaning, it never resets the computed rate.\nValidation rule:.\nValid PERIOD field.\n"
                                    },
                                    "effectiveRate": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "negativeRate": {
                                        "type": "string",
                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                    },
                                    "margins": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "marginType": {
                                                    "type": "string",
                                                    "description": "Identifies whether there are single or multiple margins\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                },
                                                "marginOperation": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "activites": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "onActivity": {
                                        "type": "string",
                                        "description": "When the periodic interest rate needs to be recalculated for certain activities, this field in combination with RECALCULATE may be used to setup the activity for which interest needs to be recalculated.\nValidation Rules:\n1. Applicable only for Periodic interest rate recalculation.\n2. Must be a valid activity in AA.ACTIVITY.\n"
                                    },
                                    "recalculate": {
                                        "type": "string",
                                        "description": "Related to ON.ACTIVITY activity, when flagged to RATE, system will recalculate Periodic rate when the activity setup in ON.ACTIVITY is processed. When the value is NOTHING periodic rate would not be recalculated when the activity setup in ON.ACTIVITY is processed.\nValidation Rules:\n1. Mandatory when ON.ACTIVITY is setup.\nThe fields ON.ACTIVITY and RECALCULATE in interest property class will be enhanced to allow user to define when to recalculate â€˜Profit Amountâ€™.\nAll activities which could result in payment schedule recalculation can be configured to recalculate â€˜Profit Amountâ€™ i.e., activities with payment schedule calculate and update action.\n"
                                    }
                                }
                            }
                        },
                        "references": {
                            "type": "array",
                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "customType": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    },
                                    "customName": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    },
                                    "customValue": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    }
                                }
                            }
                        },
                        "tiers": {
                            "type": "string",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n"
                        },
                        "linkedProperty": {
                            "type": "string",
                            "description": "This field will be used to specify the Interest Property of the Linked Arrangement that should be referred to, for getting the Interest Rate.\nWhere at least one tier is set to be â€˜Linked Rateâ€™, this must be specified.\n"
                        },
                        "dayBasis": {
                            "type": "string",
                            "description": "T24 can calculate interest based upon several different day basis types. Each T24 Interest Day Basis type is represented as a numerator and denominator.\nNumerator (interest days).\no 360 Each month is considered to have 30 days.\no 366 The exact number of days will be used.\nDenominator (days in the year).\no 360 Each year is considered to have 360 days.\no 365 Each year is considered to have 365 days.\no 366 The exact number of days in the year will be used (365 or 366).\nT24 allows the following interest day basis types:.\nType Notes.\nA (360/360) A1 and A2 are variations which alter the method of treating a month as 30 days.\nB (366/360).\nC (366/366).\nD (360/366).\nE (366/365).\nF (360/365) F1 and F2 are variations which alter the method of treating a month as 30 days.\nThis is a Mandatory field.\n"
                        },
                        "calcThreshold": {
                            "type": "string",
                            "description": "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated.\n"
                        },
                        "accrualRule": {
                            "type": "string",
                            "description": "When accruing interest,T24 must determine which amounts to include in each day's balance, the actual days to include in the period (e.g. first day, last day) and how to round any calculations.\nT24 allows users to define the calculation method to use, by specifying an accrual rule in EB.ACCRUAL.PARAM. Users can define the following:.\nFirst Day Inclusive (Yes/No).\nLast Day Inclusive (Yes/No).\nRounding Rule (Natural, Down, Up, Currency, None).\nIntermediate Calculation Rounding (Yes/No).\nCredit value date adjustment.\nDebit value date adjustment.\n"
                        },
                        "compounding": {
                            "type": "string",
                            "description": "T24 supports the compounding of both debit and credit interest.\nCompounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year. This field defines the number of compounding periods to be applied.\nNote that the compounding type provides a factor in the calculation only and does not actually cause the base principal amount to be actually increased by the calculated interest amount.\nThe following compound frequencies are supported:.\nDAILY.\nInterest is compounded 360/5/6 times a year (from days in year in INTEREST.BASIS).\nWEEKn.\nInterest is compounded 52/n times per year based on a number of WEEKS.\n-- Bi-weekly compounding should be defined as WEEK2 and will result in 26 periods.\n-- Four-Weekly compounding should be defined as WEEK4 and results in 13 periods.\nMnn.\nInterest is compounded 12/n times a year based on a numberof months.\n-- Monthly compounding should be defined as M01 and will result in 12 periods.\n-- Bi-Monthly should be defined as M02 and will result in 6 periods.\n-- Quarterly should be defined as M03 and will result in 4 periods.\n-- Semi-Annual should be defined as M06 and will result in 6 periods.\n-- Annual should be defined as M12 and will result in 1 period.\n-- Bi-Annual should be defined as M24 and will result in 0.5 periods.\n-- Any number of months up to 99 may be defined and results in 12/n periods.\nTWMTH.\nInterest is compounded twice a month resulting in 24 periods as opposed to WEEK2.\nwhich results in 26 periods.\nNnnn.\n- Compounding takes place nnn times per year.\n"
                        },
                        "compoundYieldMethod": {
                            "type": "string",
                            "description": "This field indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate. System uses the below formula to calculate the interest amount,.\nDaily Effective Rate(ERd) = (1+Interest Rate)^(1/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\nWhen the field is set as NULL the effective rate is calculated based on the compounding frequency defined in the field COMPOUND.TYPE using the below formula,.\nDaily Effective Rate(ERd) = (1+Interest Rate/Compound Freq)^(Compound Freq/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\n"
                        },
                        "minIntAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field indicates the minimum interest amount to be posted for an arrangement/account.\nIf the calculated interest amount is less than the amount specified in this field, system will waive the interest amount or adjust the interest amount based on the option set in the field MIN.INT.WAIVE.\n"
                        },
                        "minIntWaive": {
                            "type": "string",
                            "description": "This field indicates if the calculated interest amount has to be waived or adjusted.\nIf the field is set to YES, then the system will waive the interest amount if it is less than the MIN.INT.AMOUNT specified.\nIf NULL value is set and if the calculated interest amount is less than the MIN.INT.AMOUNT specified, then system will post the minimum interest amount.\n"
                        },
                        "referLimit": {
                            "type": "string",
                            "description": "For an arrangement under ACCOUNTS Product Line, it is possible link the first tier amount of debit interest to the LIMIT record attached.\nIt can be achieved by setting the field REFER.LIMIT in INTEREST property condition as â€˜YESâ€™. This functionality can be enabled only if the LIMIT is managed by AA.\n"
                        },
                        "suppressAccrual": {
                            "type": "string",
                            "description": "The Field accepts the options 'YES' or 'ALTERNATE'.\nIndicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property.\nFor Example:.\nIt will be set as YES by the system if the DONOR.ACCRUAL field is set as SUPPRESS for any product / arrangement in INTEREST.COMPENSTION property of a Bundle arrangement.\nIf it is set as 'ALTERNATE' for a property then the Accrual will be suppressed for the property for which it is set and Accrual will happen for the Alternate property which is set in Activity Restriction.\nBlank value in this field denotes that there is no suppression of accrual.\nThis is a Non Mandatory field.\n"
                        }
                    }
                },
                "principalcrint": {
                    "type": "object",
                    "properties": {
                        "interest": {
                            "type": "array",
                            "description": "",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "fixed": {
                                        "type": "string",
                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA fixed rate is directly entered by the user specifying the Defined Property and is not defined by an index table. Fixed rates are entered as positive numbers unless a negative rate is allowed.\nThis field is part of a multi value set of fields including FIXED.RATE, FLOATING.INDEX, PERIODIC.INDEX, PERIODIC.PERIOD, PERIODIC.BASE, MARGIN.TYPE, MARGIN.OPER, MARGIN.RATE, TIER.MIN.RATE, TIER.MAX.RATE, TIER.AMOUNT,TIER.PERCENT.\n"
                                    },
                                    "floating": {
                                        "type": "string",
                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA floating interest rate is tied to a variable base rate (i.e. BASIC.INTEREST). During interest calculation, T24 will use the currency specific rate applicable for the calculation date (i.e. the rate used for the calculation will change whenever the base rate is changed).\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "spread": {
                                        "type": "string",
                                        "description": "It would be possible to specify that the rate for a given tier be â€˜Linkedâ€™, by setting the field Linked Rate to Yes.\nThis can be mixed with normal rate calculations as well.\nWhere the Linked Rate is set to Yes, system would expect that an Arrangement reference in given in the â€˜Linked Arrangementâ€™ field along with the Interest property to be linked to.\n"
                                    },
                                    "minMaxRate": {
                                        "type": "string",
                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "maxRate": {
                                        "type": "string",
                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "effectiveRate": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "negativeRate": {
                                        "type": "string",
                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                    },
                                    "orPercent": {
                                        "type": "number",
                                        "description": "The tier percent relates to the field RATE.TIER.TYPE and percentages can be entered if BAND is selected.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. Either TIER.PERCENT or TIER.AMOUNT can be entered by not both. If TIER.PERCENT is defined, then the Sum of Tier percentage should be 100%.\n"
                                    },
                                    "margins": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "margin": {
                                                    "type": "string",
                                                    "description": "Identifies whether there are single or multiple margins.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                },
                                                "marginOperation": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "attributes": {
                            "type": "array",
                            "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "attributes": {
                                        "type": "string",
                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "This field along with FIELD and OPERAND, helps the user to set the conditions for the Alert to be triggered. Holds the actual value of the field on which the criteria is based. If a value is provided at the event definition level, then that value is defaulted here. If not, the user can provide the value at the time of Subscribing.\nThe fields from FIELD to VALUE are displayed in this subscription screen only when INHERIT is set to Yes in the corresponding TEC.ITEMS record. These set of fields define the criteria for alerts.\n"
                                    },
                                    "linkedArrangement": {
                                        "type": "string",
                                        "description": "Where at least one tier is set to be Linked Rate, the Arrangement to be linked for calculating the Interest Rate, must be specified here (or automatically defaulted by the system, where a Limit is attached)\n"
                                    },
                                    "attribute": {
                                        "type": "string",
                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                    }
                                }
                            }
                        },
                        "periodicInterest": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "periodicIndex": {
                                        "type": "string",
                                        "description": "A periodic rate is tied to an index (e.g. LIBOR) which is dependent on a period of time (e.g. term) and possibly an amount. Once the arrangement is active, the rate is fixed until it is reset. Periodic rates can be reset at a pre-determined frequency.\nTo define a periodic rate, the user specifies:.\nPERIODIC.INTEREST index to use.\nPeriod (this will default to TERM if a Term Amount Property exists).\nInterest selection method if the term is not found on the index. The option currently available is INTERPOLATE.\nRate Reset period.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "periodicRate": {
                                        "type": "string",
                                        "description": "Indicates the rate on which the index runs on the date stated in the key. When a periodic index is used and the field is left blank, then system computes the rate from PERIODIC.INTEREST and defaults it here. When a rate is already present(say, the user changes the system computed rate), then system does not compute the new rate.\nValidation Rules:\nSystem defaulted and modifiable.\nStandard Rate field.\nValid only if Periodic index is stated.\n"
                                    },
                                    "periodicPeriodType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "periodicPeriod": {
                                        "type": "string",
                                        "description": "Defines the interest period to be used when linking to PERIODIC.INTEREST.(This will default to TERM if a Term Amount Property exists),. When a period is stated in Years or Weeks, they would be converted to Months and Days respectively and then located on the PI table.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "periodicMethod": {
                                        "type": "string",
                                        "description": "If system does not find a interest rate in the correct bucket of PERIODIC.INTEREST table, it automatically applies a method to arrive at a rate chosen by this method.\nValid method is:.\nINTERPOLATE - System automatically interpolates the rate. This is the DEFAULT option as well.\n"
                                    },
                                    "initialResetDate": {
                                        "type": "string",
                                        "format": "date",
                                        "description": ""
                                    },
                                    "periodicReset": {
                                        "type": "string",
                                        "description": "This indicates the reset period of the index stated. System would automatically reset the PERIODIC.RATE at the frequency stated in this field. Applicable only at Arrangement level. Periodic index may still be used without this field meaning, it never resets the computed rate.\nValidation rule:.\nValid PERIOD field.\n"
                                    },
                                    "effectiveRate": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "negativeRate": {
                                        "type": "string",
                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                    },
                                    "margins": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "marginType": {
                                                    "type": "string",
                                                    "description": "Identifies whether there are single or multiple margins\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                },
                                                "marginOperation": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "activites": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "onActivity": {
                                        "type": "string",
                                        "description": "When the periodic interest rate needs to be recalculated for certain activities, this field in combination with RECALCULATE may be used to setup the activity for which interest needs to be recalculated.\nValidation Rules:\n1. Applicable only for Periodic interest rate recalculation.\n2. Must be a valid activity in AA.ACTIVITY.\n"
                                    },
                                    "recalculate": {
                                        "type": "string",
                                        "description": "Related to ON.ACTIVITY activity, when flagged to RATE, system will recalculate Periodic rate when the activity setup in ON.ACTIVITY is processed. When the value is NOTHING periodic rate would not be recalculated when the activity setup in ON.ACTIVITY is processed.\nValidation Rules:\n1. Mandatory when ON.ACTIVITY is setup.\nThe fields ON.ACTIVITY and RECALCULATE in interest property class will be enhanced to allow user to define when to recalculate â€˜Profit Amountâ€™.\nAll activities which could result in payment schedule recalculation can be configured to recalculate â€˜Profit Amountâ€™ i.e., activities with payment schedule calculate and update action.\n"
                                    }
                                }
                            }
                        },
                        "references": {
                            "type": "array",
                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "customType": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    },
                                    "customName": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    },
                                    "customValue": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    }
                                }
                            }
                        },
                        "tiers": {
                            "type": "string",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n"
                        },
                        "linkedProperty": {
                            "type": "string",
                            "description": "This field will be used to specify the Interest Property of the Linked Arrangement that should be referred to, for getting the Interest Rate.\nWhere at least one tier is set to be â€˜Linked Rateâ€™, this must be specified.\n"
                        },
                        "dayBasis": {
                            "type": "string",
                            "description": "T24 can calculate interest based upon several different day basis types. Each T24 Interest Day Basis type is represented as a numerator and denominator.\nNumerator (interest days).\no 360 Each month is considered to have 30 days.\no 366 The exact number of days will be used.\nDenominator (days in the year).\no 360 Each year is considered to have 360 days.\no 365 Each year is considered to have 365 days.\no 366 The exact number of days in the year will be used (365 or 366).\nT24 allows the following interest day basis types:.\nType Notes.\nA (360/360) A1 and A2 are variations which alter the method of treating a month as 30 days.\nB (366/360).\nC (366/366).\nD (360/366).\nE (366/365).\nF (360/365) F1 and F2 are variations which alter the method of treating a month as 30 days.\nThis is a Mandatory field.\n"
                        },
                        "calcThreshold": {
                            "type": "string",
                            "description": "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated.\n"
                        },
                        "accrualRule": {
                            "type": "string",
                            "description": "When accruing interest,T24 must determine which amounts to include in each day's balance, the actual days to include in the period (e.g. first day, last day) and how to round any calculations.\nT24 allows users to define the calculation method to use, by specifying an accrual rule in EB.ACCRUAL.PARAM. Users can define the following:.\nFirst Day Inclusive (Yes/No).\nLast Day Inclusive (Yes/No).\nRounding Rule (Natural, Down, Up, Currency, None).\nIntermediate Calculation Rounding (Yes/No).\nCredit value date adjustment.\nDebit value date adjustment.\n"
                        },
                        "compounding": {
                            "type": "string",
                            "description": "T24 supports the compounding of both debit and credit interest.\nCompounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year. This field defines the number of compounding periods to be applied.\nNote that the compounding type provides a factor in the calculation only and does not actually cause the base principal amount to be actually increased by the calculated interest amount.\nThe following compound frequencies are supported:.\nDAILY.\nInterest is compounded 360/5/6 times a year (from days in year in INTEREST.BASIS).\nWEEKn.\nInterest is compounded 52/n times per year based on a number of WEEKS.\n-- Bi-weekly compounding should be defined as WEEK2 and will result in 26 periods.\n-- Four-Weekly compounding should be defined as WEEK4 and results in 13 periods.\nMnn.\nInterest is compounded 12/n times a year based on a numberof months.\n-- Monthly compounding should be defined as M01 and will result in 12 periods.\n-- Bi-Monthly should be defined as M02 and will result in 6 periods.\n-- Quarterly should be defined as M03 and will result in 4 periods.\n-- Semi-Annual should be defined as M06 and will result in 6 periods.\n-- Annual should be defined as M12 and will result in 1 period.\n-- Bi-Annual should be defined as M24 and will result in 0.5 periods.\n-- Any number of months up to 99 may be defined and results in 12/n periods.\nTWMTH.\nInterest is compounded twice a month resulting in 24 periods as opposed to WEEK2.\nwhich results in 26 periods.\nNnnn.\n- Compounding takes place nnn times per year.\n"
                        },
                        "compoundYieldMethod": {
                            "type": "string",
                            "description": "This field indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate. System uses the below formula to calculate the interest amount,.\nDaily Effective Rate(ERd) = (1+Interest Rate)^(1/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\nWhen the field is set as NULL the effective rate is calculated based on the compounding frequency defined in the field COMPOUND.TYPE using the below formula,.\nDaily Effective Rate(ERd) = (1+Interest Rate/Compound Freq)^(Compound Freq/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\n"
                        },
                        "minIntAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field indicates the minimum interest amount to be posted for an arrangement/account.\nIf the calculated interest amount is less than the amount specified in this field, system will waive the interest amount or adjust the interest amount based on the option set in the field MIN.INT.WAIVE.\n"
                        },
                        "minIntWaive": {
                            "type": "string",
                            "description": "This field indicates if the calculated interest amount has to be waived or adjusted.\nIf the field is set to YES, then the system will waive the interest amount if it is less than the MIN.INT.AMOUNT specified.\nIf NULL value is set and if the calculated interest amount is less than the MIN.INT.AMOUNT specified, then system will post the minimum interest amount.\n"
                        },
                        "referLimit": {
                            "type": "string",
                            "description": "For an arrangement under ACCOUNTS Product Line, it is possible link the first tier amount of debit interest to the LIMIT record attached.\nIt can be achieved by setting the field REFER.LIMIT in INTEREST property condition as â€˜YESâ€™. This functionality can be enabled only if the LIMIT is managed by AA.\n"
                        },
                        "suppressAccrual": {
                            "type": "string",
                            "description": "The Field accepts the options 'YES' or 'ALTERNATE'.\nIndicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property.\nFor Example:.\nIt will be set as YES by the system if the DONOR.ACCRUAL field is set as SUPPRESS for any product / arrangement in INTEREST.COMPENSTION property of a Bundle arrangement.\nIf it is set as 'ALTERNATE' for a property then the Accrual will be suppressed for the property for which it is set and Accrual will happen for the Alternate property which is set in Activity Restriction.\nBlank value in this field denotes that there is no suppression of accrual.\nThis is a Non Mandatory field.\n"
                        }
                    }
                },
                "penalinterest": {
                    "type": "object",
                    "properties": {
                        "interest": {
                            "type": "array",
                            "description": "",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "fixed": {
                                        "type": "string",
                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA fixed rate is directly entered by the user specifying the Defined Property and is not defined by an index table. Fixed rates are entered as positive numbers unless a negative rate is allowed.\nThis field is part of a multi value set of fields including FIXED.RATE, FLOATING.INDEX, PERIODIC.INDEX, PERIODIC.PERIOD, PERIODIC.BASE, MARGIN.TYPE, MARGIN.OPER, MARGIN.RATE, TIER.MIN.RATE, TIER.MAX.RATE, TIER.AMOUNT,TIER.PERCENT.\n"
                                    },
                                    "floating": {
                                        "type": "string",
                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA floating interest rate is tied to a variable base rate (i.e. BASIC.INTEREST). During interest calculation, T24 will use the currency specific rate applicable for the calculation date (i.e. the rate used for the calculation will change whenever the base rate is changed).\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "spread": {
                                        "type": "string",
                                        "description": "It would be possible to specify that the rate for a given tier be â€˜Linkedâ€™, by setting the field Linked Rate to Yes.\nThis can be mixed with normal rate calculations as well.\nWhere the Linked Rate is set to Yes, system would expect that an Arrangement reference in given in the â€˜Linked Arrangementâ€™ field along with the Interest property to be linked to.\n"
                                    },
                                    "minMaxRate": {
                                        "type": "string",
                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "maxRate": {
                                        "type": "string",
                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "effectiveRate": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "negativeRate": {
                                        "type": "string",
                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                    },
                                    "orPercent": {
                                        "type": "number",
                                        "description": "The tier percent relates to the field RATE.TIER.TYPE and percentages can be entered if BAND is selected.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. Either TIER.PERCENT or TIER.AMOUNT can be entered by not both. If TIER.PERCENT is defined, then the Sum of Tier percentage should be 100%.\n"
                                    },
                                    "margins": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "margin": {
                                                    "type": "string",
                                                    "description": "Identifies whether there are single or multiple margins.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                },
                                                "marginOperation": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "attributes": {
                            "type": "array",
                            "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "attributes": {
                                        "type": "string",
                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "This field along with FIELD and OPERAND, helps the user to set the conditions for the Alert to be triggered. Holds the actual value of the field on which the criteria is based. If a value is provided at the event definition level, then that value is defaulted here. If not, the user can provide the value at the time of Subscribing.\nThe fields from FIELD to VALUE are displayed in this subscription screen only when INHERIT is set to Yes in the corresponding TEC.ITEMS record. These set of fields define the criteria for alerts.\n"
                                    },
                                    "linkedArrangement": {
                                        "type": "string",
                                        "description": "Where at least one tier is set to be Linked Rate, the Arrangement to be linked for calculating the Interest Rate, must be specified here (or automatically defaulted by the system, where a Limit is attached)\n"
                                    },
                                    "attribute": {
                                        "type": "string",
                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                    }
                                }
                            }
                        },
                        "periodicInterest": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "periodicIndex": {
                                        "type": "string",
                                        "description": "A periodic rate is tied to an index (e.g. LIBOR) which is dependent on a period of time (e.g. term) and possibly an amount. Once the arrangement is active, the rate is fixed until it is reset. Periodic rates can be reset at a pre-determined frequency.\nTo define a periodic rate, the user specifies:.\nPERIODIC.INTEREST index to use.\nPeriod (this will default to TERM if a Term Amount Property exists).\nInterest selection method if the term is not found on the index. The option currently available is INTERPOLATE.\nRate Reset period.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "periodicRate": {
                                        "type": "string",
                                        "description": "Indicates the rate on which the index runs on the date stated in the key. When a periodic index is used and the field is left blank, then system computes the rate from PERIODIC.INTEREST and defaults it here. When a rate is already present(say, the user changes the system computed rate), then system does not compute the new rate.\nValidation Rules:\nSystem defaulted and modifiable.\nStandard Rate field.\nValid only if Periodic index is stated.\n"
                                    },
                                    "periodicPeriodType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "periodicPeriod": {
                                        "type": "string",
                                        "description": "Defines the interest period to be used when linking to PERIODIC.INTEREST.(This will default to TERM if a Term Amount Property exists),. When a period is stated in Years or Weeks, they would be converted to Months and Days respectively and then located on the PI table.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "periodicMethod": {
                                        "type": "string",
                                        "description": "If system does not find a interest rate in the correct bucket of PERIODIC.INTEREST table, it automatically applies a method to arrive at a rate chosen by this method.\nValid method is:.\nINTERPOLATE - System automatically interpolates the rate. This is the DEFAULT option as well.\n"
                                    },
                                    "initialResetDate": {
                                        "type": "string",
                                        "format": "date",
                                        "description": ""
                                    },
                                    "periodicReset": {
                                        "type": "string",
                                        "description": "This indicates the reset period of the index stated. System would automatically reset the PERIODIC.RATE at the frequency stated in this field. Applicable only at Arrangement level. Periodic index may still be used without this field meaning, it never resets the computed rate.\nValidation rule:.\nValid PERIOD field.\n"
                                    },
                                    "effectiveRate": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "negativeRate": {
                                        "type": "string",
                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                    },
                                    "margins": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "marginType": {
                                                    "type": "string",
                                                    "description": "Identifies whether there are single or multiple margins\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                },
                                                "marginOperation": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "activites": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "onActivity": {
                                        "type": "string",
                                        "description": "When the periodic interest rate needs to be recalculated for certain activities, this field in combination with RECALCULATE may be used to setup the activity for which interest needs to be recalculated.\nValidation Rules:\n1. Applicable only for Periodic interest rate recalculation.\n2. Must be a valid activity in AA.ACTIVITY.\n"
                                    },
                                    "recalculate": {
                                        "type": "string",
                                        "description": "Related to ON.ACTIVITY activity, when flagged to RATE, system will recalculate Periodic rate when the activity setup in ON.ACTIVITY is processed. When the value is NOTHING periodic rate would not be recalculated when the activity setup in ON.ACTIVITY is processed.\nValidation Rules:\n1. Mandatory when ON.ACTIVITY is setup.\nThe fields ON.ACTIVITY and RECALCULATE in interest property class will be enhanced to allow user to define when to recalculate â€˜Profit Amountâ€™.\nAll activities which could result in payment schedule recalculation can be configured to recalculate â€˜Profit Amountâ€™ i.e., activities with payment schedule calculate and update action.\n"
                                    }
                                }
                            }
                        },
                        "references": {
                            "type": "array",
                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "customType": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    },
                                    "customName": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    },
                                    "customValue": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    }
                                }
                            }
                        },
                        "tiers": {
                            "type": "string",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n"
                        },
                        "linkedProperty": {
                            "type": "string",
                            "description": "This field will be used to specify the Interest Property of the Linked Arrangement that should be referred to, for getting the Interest Rate.\nWhere at least one tier is set to be â€˜Linked Rateâ€™, this must be specified.\n"
                        },
                        "dayBasis": {
                            "type": "string",
                            "description": "T24 can calculate interest based upon several different day basis types. Each T24 Interest Day Basis type is represented as a numerator and denominator.\nNumerator (interest days).\no 360 Each month is considered to have 30 days.\no 366 The exact number of days will be used.\nDenominator (days in the year).\no 360 Each year is considered to have 360 days.\no 365 Each year is considered to have 365 days.\no 366 The exact number of days in the year will be used (365 or 366).\nT24 allows the following interest day basis types:.\nType Notes.\nA (360/360) A1 and A2 are variations which alter the method of treating a month as 30 days.\nB (366/360).\nC (366/366).\nD (360/366).\nE (366/365).\nF (360/365) F1 and F2 are variations which alter the method of treating a month as 30 days.\nThis is a Mandatory field.\n"
                        },
                        "calcThreshold": {
                            "type": "string",
                            "description": "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated.\n"
                        },
                        "accrualRule": {
                            "type": "string",
                            "description": "When accruing interest,T24 must determine which amounts to include in each day's balance, the actual days to include in the period (e.g. first day, last day) and how to round any calculations.\nT24 allows users to define the calculation method to use, by specifying an accrual rule in EB.ACCRUAL.PARAM. Users can define the following:.\nFirst Day Inclusive (Yes/No).\nLast Day Inclusive (Yes/No).\nRounding Rule (Natural, Down, Up, Currency, None).\nIntermediate Calculation Rounding (Yes/No).\nCredit value date adjustment.\nDebit value date adjustment.\n"
                        },
                        "compounding": {
                            "type": "string",
                            "description": "T24 supports the compounding of both debit and credit interest.\nCompounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year. This field defines the number of compounding periods to be applied.\nNote that the compounding type provides a factor in the calculation only and does not actually cause the base principal amount to be actually increased by the calculated interest amount.\nThe following compound frequencies are supported:.\nDAILY.\nInterest is compounded 360/5/6 times a year (from days in year in INTEREST.BASIS).\nWEEKn.\nInterest is compounded 52/n times per year based on a number of WEEKS.\n-- Bi-weekly compounding should be defined as WEEK2 and will result in 26 periods.\n-- Four-Weekly compounding should be defined as WEEK4 and results in 13 periods.\nMnn.\nInterest is compounded 12/n times a year based on a numberof months.\n-- Monthly compounding should be defined as M01 and will result in 12 periods.\n-- Bi-Monthly should be defined as M02 and will result in 6 periods.\n-- Quarterly should be defined as M03 and will result in 4 periods.\n-- Semi-Annual should be defined as M06 and will result in 6 periods.\n-- Annual should be defined as M12 and will result in 1 period.\n-- Bi-Annual should be defined as M24 and will result in 0.5 periods.\n-- Any number of months up to 99 may be defined and results in 12/n periods.\nTWMTH.\nInterest is compounded twice a month resulting in 24 periods as opposed to WEEK2.\nwhich results in 26 periods.\nNnnn.\n- Compounding takes place nnn times per year.\n"
                        },
                        "compoundYieldMethod": {
                            "type": "string",
                            "description": "This field indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate. System uses the below formula to calculate the interest amount,.\nDaily Effective Rate(ERd) = (1+Interest Rate)^(1/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\nWhen the field is set as NULL the effective rate is calculated based on the compounding frequency defined in the field COMPOUND.TYPE using the below formula,.\nDaily Effective Rate(ERd) = (1+Interest Rate/Compound Freq)^(Compound Freq/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\n"
                        },
                        "minIntAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field indicates the minimum interest amount to be posted for an arrangement/account.\nIf the calculated interest amount is less than the amount specified in this field, system will waive the interest amount or adjust the interest amount based on the option set in the field MIN.INT.WAIVE.\n"
                        },
                        "minIntWaive": {
                            "type": "string",
                            "description": "This field indicates if the calculated interest amount has to be waived or adjusted.\nIf the field is set to YES, then the system will waive the interest amount if it is less than the MIN.INT.AMOUNT specified.\nIf NULL value is set and if the calculated interest amount is less than the MIN.INT.AMOUNT specified, then system will post the minimum interest amount.\n"
                        },
                        "referLimit": {
                            "type": "string",
                            "description": "For an arrangement under ACCOUNTS Product Line, it is possible link the first tier amount of debit interest to the LIMIT record attached.\nIt can be achieved by setting the field REFER.LIMIT in INTEREST property condition as â€˜YESâ€™. This functionality can be enabled only if the LIMIT is managed by AA.\n"
                        },
                        "suppressAccrual": {
                            "type": "string",
                            "description": "The Field accepts the options 'YES' or 'ALTERNATE'.\nIndicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property.\nFor Example:.\nIt will be set as YES by the system if the DONOR.ACCRUAL field is set as SUPPRESS for any product / arrangement in INTEREST.COMPENSTION property of a Bundle arrangement.\nIf it is set as 'ALTERNATE' for a property then the Accrual will be suppressed for the property for which it is set and Accrual will happen for the Alternate property which is set in Activity Restriction.\nBlank value in this field denotes that there is no suppression of accrual.\nThis is a Non Mandatory field.\n"
                        }
                    }
                },
                "limit": {
                    "type": "object",
                    "properties": {
                        "limitReference": {
                            "type": "string",
                            "description": "If the Customer has a Credit Limit covering this Account, this field identifies the type of limit applicable to the Account and forms part of the key to the Limit record containing Credit Limit details. This field is also used to indicate Nostro Accounts.\nExcept for Nostro and Internal Accounts, this field is accessed by the Limits System whenever a debit transaction is processed for this Account.\nIf no Limit Reference is specified, an 'UNAUTHORISED OVERDRAFT' message is displayed and an Override is required before the transaction will be accepted.\nIf a Limit Reference is specified, the corresponding Limit record is checked (see below). If it covers the new Working Balance, the transaction is accepted, otherwise a message is displayed and an Override is required before the transaction will be accepted.\nThe key to the corresponding Limit record is built up as follows: cccccc.nnnnnnn.ss\nWhere 'cccccc' is the Liability number for the Customer in Field CUSTOMER of this record and 'nnnnnnn.ss' is the Limit Reference specified in this field.\n3-9 numeric characters consisting of a 3-7 digit Limit Reference Code and optionally, a 2 digit sequence number separated by '.' Or 'NOSTRO' to denote a Nostro Account (generated automatically by the system). (Optional input. No default.)\nThe Limit Reference Code (nnnnnnn) must be an existing code on the LIMIT.REF table.\nLimit Reference code must be a suitable one for Account records, as defined in the Limit Parameter table.\nThere must be a Limit record corresponding to the key built up as described above.\nError message is generated if single limit is set to 'Y' and one more accounts is attached to same limit (If single limit field is set to 'Y' then the limit can be utilised by one account. If multiple accounts are to utilise a single limit then, single limit field to be defined as 'N' for all such accounts.\n"
                        },
                        "expiryDate": {
                            "type": "string",
                            "format": "date",
                            "description": "Specifies the date on which the Limit will expire. But if there are contracts against this limit,  then the limit will move to history only after the contracts mature. Any new drawings against this limit would raise overrides stating that the limit expires before the maturity date.\nWarning of the approach of this date is given on the Limits Approaching Expiry Date overnight report. The number of days prior to Expiry Date that the warning starts to appear is defined by the Expiries Reporting field on the LIMIT.PARAMETER table.\n6 to 11 type D (date) characters. (Defaults to a year from the current run     date.) The date input must be greater than or equal to the Limit Review Date\n"
                        },
                        "limitAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "The limit amount which is actually available for use.\nThe amount available under the limit, against which all system limit checks are performed. The value of the ONLINE LIMIT is calculated by the system as described below.\nIf the limit is an unsecured limit, a sub-limit or a secured but fixed limit, the value in this field is always equal to the value in field 21, MAXIMUM TOTAL.\nIf the limit is a variable secured limit, the value in this field is equal to the lower of (a) the MAXIMUM TOTAL or (b) the sum of the SECURED AMT's in field 24 plus the MAXIMUM UNSECURED in field 20.\nNote:      If time bands are in effect (field 25, TIME CODE), the            ONLINE LIMIT amount will reflect the split of the            available limit across these periods. In the case of an            unsecured limit, a sub-limit or a fixed secured limit,            this field will contain the same values as field 26, LIMIT            BAND.            In the case of a variable secured limit, this field will            contain either the same values as field 26, LIMIT BAND            or, if the total ONLINE LIMIT amount is lower than the            MAXIMUM TOTAL in field 21, the ONLINE LIMIT amount            apportioned pro-rata across the time bands in line with            the specified LIMIT BAND split.\n1 to 19 type AMT (standard amount format). (No input, system-generated field) Multivalue field associated with fields 25 to 45.\n"
                        },
                        "reviewFreq": {
                            "type": "string",
                            "description": "Specifies the next date on which the limit is to be reviewed. This field is mapped to LIMIT record linked to the Arrangement.\nValidation Rules:\nStandard T24 frequency code.\nThe first review date must not be later than the Limit EXPIRY.DATE.\n"
                        }
                    }
                },
                "schedule": {
                    "type": "object",
                    "properties": {
                        "payment": {
                            "type": "array",
                            "description": "payment",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "paymentType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "paymentMethod": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "paymentFrequency": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "billType": {
                                        "type": "string",
                                        "description": "Bill Type would be picked from EB.LOOKUP instead of the hard-coded values of PAYMENT, EXPECTED.\nHowever all the options would not be available for this field within PAYMENT.SCHEDULE.\nThe following values would not be available,.\n1.INFO.\n2.PR.CHARGE.\n3.ACT.CHARGE.\n4.DEF.CHARGE.\n5.DISBURSEMENT.\nOther user defined values may be given which then can be used in Overdue PC to define different aging rules for the BillType.\nWhen a user defined value is captured it would be assumed as PAYMENT type Bill, and not 'Expected' type bill.\nValidations:.\nâ€¢Standard lookup field.\nâ€¢Maximum number of characters is restricted to 15.\nâ€¢INFO, PR.CHARGE, ACT.CHARGE, DEF.CHARGE options not applicable for this field although it is part of the lookup values.\n"
                                    },
                                    "billProduced": {
                                        "type": "string",
                                        "description": "By default T24 will create the Bill on the due date, however for products which require a Bill notice to be sent in advance of the due date, it is possible for the user to enter the number of days prior. This will result in the due amounts being projected and recorded on the bill.\nNumber of working days prior to the due date when the bill needs to be produced is defined in the field BILL.PRODUCED.\n"
                                    },
                                    "autoSettle": {
                                        "type": "string",
                                        "description": "By default NULL. If set to NULL, indicates AUTO.SETTLE is not enabled.\n"
                                    },
                                    "property": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "propertyId": {
                                                    "type": "string",
                                                    "description": "Any alphanumeric character can be used to define the name of the property.\nMaximum of 15 characters are allowed.\n"
                                                },
                                                "dueFrequency": {
                                                    "type": "string",
                                                    "description": "Indicates the actual frequency when the payment needs to be made due. Due frequency is defined for each payment property under a payment type.\nPayment frequency is defaulted when due frequency is null.\nGenerally both payment and due frequency has same value. When multiple properties are defined for a given payment type, due frequency of one of the property can de different from the payment frequency.\nExample:.\na) M 01 31. M = Monthly. 01 = one monthly intervals. 31 = the last day of the month.\nb) M 03 31 M = Monthly. 03 = three monthly intervals. 31 = the last day of the month.\nc) M 01 10 M=Monthly, 01 = at monthly intervals10 = 10th of the month.\nd) 31 MAR 2006 W , where W= weekly. In this case, the first schedule would fall on 31March 2006.\ne) 31 Mar 2006 BSNSS, where BSNSS = every business day. In this case, the first schedule would fall on 31March 2006.\nStandard T24 Recurrence frequency field.\nInput prohibited for a date prior to the system date.\n"
                                                }
                                            }
                                        }
                                    },
                                    "payments": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "percentage": {
                                                    "type": "number",
                                                    "description": "This field stores the Percentage of holdings to be redeemed/subscribed.This input is only recorded and not used for calculations.\nInput is allowed for SWITCH orders alone.\n"
                                                },
                                                "startDate": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Identifies the Date & Frequency of the Standalone DD for execution.\nThe claim value date is the date component of this field. Hence the date & the frequency has to be given after considering the Claim value date as given in DD.PARAMETER.\nThe date is cycled with the given frequency and this mandate reference is updated in DD.STANDALONE.FQU.LIST with the next execution date.\nWhenever the frequency is modified, then the underlying claim (DD.ITEM) is marked as 'DELETED' and new claim is raised for the given frequency. Incase the Claim is already sent(DD.ITEM status is 'CLAIMSENT'), then override is raised. However the DD.ITEM will not be marked as 'DELETED' as claim file is already generated.\nMandatory when STAND.ALONE.DDI set to Yes\nThis field is sub-divided into two elements: 1. Date 1-9 type D (date format in range 1950-2049) characters. 2. Optional Frequency 1-5 type SS (uppercase alpha or numeric, first character alpha) characters. (Mandatory input)\nThe date input or generated will correspond to the first execution of the Standalone DD.\nUsing the date & frequency in case given , DD.STANDALONE.FQU.LIST is updated with the next execution date.\nAn override will be required if the date input is a non-working day.\nDate entered should be greater than today and should not be more than Termination date.\n"
                                                },
                                                "endDate": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": ""
                                                },
                                                "numberPayments": {
                                                    "type": "string",
                                                    "description": "If a frequency has been specified the user can specify a Start Date or it can be defaulted from the Base Date. Additionally an End Date or a Number of Payments can be specified to indicate to T24 when the payments should terminate.\nThis field is part of a multi value set of fields with START.DATE, END.DATE and ACTUAL.AMT.\n"
                                                },
                                                "calcAmount": {
                                                    "type": "number",
                                                    "format": "int64",
                                                    "description": "There can be two amounts for each payment definition; Calculated Amount and Actual Amount.\nA calculated amount is determined by T24 based upon the Payment Type and Properties involved.\nSystem maintained(NOINPUT) field.\n"
                                                },
                                                "actualAmount": {
                                                    "type": "number",
                                                    "format": "int64",
                                                    "description": "There can be two amounts for each payment definition; Calculated Amount and Actual Amount. An actual amount can be entered by the user to override the calculated amount or manual payments. When adhoc payments are defined we need to define the actual anount for each payment date This field is part of a multi value set of fields with START.DATE, END.DATE and NUM.PAYMENTS.\nFor Disbursement Schedule(Account - Pay), the field is mandatory and sum of the future schedules should sum up to the CUR<Term Amount>.\nValidation Rules:\n1-9 numeric characters plus decimal point and commas.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "amortisationTerm": {
                            "type": "string",
                            "description": "If specific amount (residual amount) needs to be collected at the maturity date of the term, we can achieve this either by actually defining the residual amount or by defininng a amortisation term.\nThis field indicates the term for amortisation. The actual payment amount is calculated based on the amortisation term and not on the actual term defined in TERM.AMOUNT property of the arrangement. This calculated payment is then spread across actual term of the arrangement. If the amortisation term is greater than the actual term then we would be left with residual amount at the maturity date.\nAny residual amount must then be paid by the client on maturity of the arrangement. Input in this field is allowed only for Constant, linear payment types. The term can be entered as a number of Days (D), Weeks(W), Months(M) or Years(Y).\n"
                        },
                        "residualAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "If a specific amount needs to be collected on the final schedule date, that amount may be stated in this field. The amount stated in this field is 'Exclusive' of any scheduled calculated amount on the final schedule and is always considered to be belonging to ACCOUNT property.\nAs an illustration, if an Annuity Arrangement for 100000 is assumed and an amount of 20000 is stated as RESIDUAL.AMOUNT, the Annuity amount(CALC.AMOUNT) would be computed based on only 80000. If the Annuity amount is say 1500, on the final schedule date, system would make due 1500+20000 = 21500.\nThe residual amount would be recorded in bills under a special payment type called 'RESIDUAL.PRINCIPAL'.\nThe amount stated in this field would be automatically made due on PAYMENT.END.DATE.\nStandard T24 amount field in the arrangement currency.\n"
                        },
                        "billsCombined": {
                            "type": "string",
                            "description": "Indicates whether bills which have the same due date and are produced on the same date should be combined. In case of capitalisation (where we have two payment one is made due and other capitalised) even if bills combined set to YES, system would generate two separate bills. In another scenario where have one payment type to be made due and two payment types to be capitalised, then system would combine the those two payment types.\nInput allowed should be either YES or NO.\n"
                        },
                        "recalcFrequency": {
                            "type": "string",
                            "description": "If 'Nothing' is selected in field RECALCULATE, a recalculation frequency should be specified.\nExample:.\na) M 01 31. M = Monthly. 01 = one monthly intervals. 31 = the last day of the month.\nb) M 03 31 M = Monthly. 03 = three monthly intervals. 31 = the last day of the month.\nc) M 01 10 M=Monthly, 01 = at monthly intervals10 = 10th of the month.\nd) 31 MAR 2006 W , where W= weekly. In this case, the first schedule would fall on 31March 2006.\ne) 31 Mar 2006 BSNSS, where BSNSS = every business day. In this case, the first schedule would fall on 31March 2006.\nStandard date format.\nMust be a valid date.\nAn override will be required if the date is not defined on the HOLIDAY table.\nAn override will be required if the date as defined on the HOLIDAY table is a non working day.\nInput prohibited for a date prior to the system date.\n"
                        }
                    }
                },
                "restriction": {
                    "type": "object",
                    "properties": {
                        "rules": {
                            "type": "array",
                            "description": "",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "ruleName": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "periodicAttribute": {
                                        "type": "string",
                                        "description": "Contains the effective date of the property condition Not applicable at product level System updated field no input allowed.\n"
                                    },
                                    "balanceType": {
                                        "type": "string",
                                        "description": "Balance Type ID\n20 alpha numeric.\n"
                                    },
                                    "periodicValue": {
                                        "type": "string",
                                        "description": "This is the actual rule value, which will be compared against the evaluated rule value.\nAllowed Values:.\nInput must be a valid data type defined in the corresponding AA.PERIODIC.ATTRIBUTE.CLASS record.\n"
                                    },
                                    "activities": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "activityClassId": {
                                                    "type": "string",
                                                    "description": "This field denotes the id of the activity class record.\nActivities are performed on either the entire Arrangement (Ex. New Arrangement) or on a specific Property (like Change Principal Interest). Since Properties are user-defined, Temenos has specified the composition of each Activity as an Activity Class which targets either a Property Class or the entire Arrangement.\n"
                                                },
                                                "activityId": {
                                                    "type": "string",
                                                    "description": ""
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "changeProduct": {
                    "type": "object",
                    "properties": {
                        "changelPeriod": {
                            "type": "string",
                            "description": "The user can define a Product for the arrangement to change to after a period of time (e.g. 6 months) or on a specific date. A period (say 6M, 12M) may be stated in this field. The arrangement start date would be considered as the base date for computing the period. For subsequent.\nchange product events, the last change product date is considered as base date and not the arrangement start date.\nValidation rule:.\nValid PERIOD field.\nMaximum of 4 characters.\n"
                        },
                        "changeActivity": {
                            "type": "string",
                            "description": "This Field will determine which Activity will be trigger during Loan Renewal.\nMandatory if RENEWAL.DATE is used. Options:.\nROLLOVER.\nRESET.\nCHANGE.PRODUCT.\n"
                        },
                        "productId": {
                            "type": "string",
                            "description": "This field denotes product of the arrangement contract. The characteristics of the arrangement is derived from the Product to which it is linked to.\nAn arrangement product and arrangement contract is a series of properties (AA.PROPERTY) relating to different components (AA.PROPERTY.CLASS). Each product has a set of mandatory components and optional components.\nIt is possible to change the product of the arrangement during its life-cycle subject to certain restrictions. For each product change this field is updated along with the effective date of change.\n"
                        },
                        "changeDate": {
                            "type": "string",
                            "format": "date",
                            "description": "This field indicates the date on which the arrangement would change from a existing product to a new product.\nBoth date and period are not allowed together. System would ignore the DATE.CONVENTION stated.\nValidation rule:.\nMust be a valid Date.\nMaximum of 11 Alphanumeric characters allowed.\n"
                        }
                    }
                },
                "settlement": {
                    "type": "object",
                    "properties": {
                        "linkedAccounts": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "linkedAccountType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "linkedAccount": {
                                        "type": "string",
                                        "description": ""
                                    }
                                }
                            }
                        },
                        "payin": {
                            "type": "array",
                            "description": "When PAYIN.ACCOUNT used is an Arrangement Account, then an activity has to be specified to debit that arrangement as well. That activity need to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Debit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYIN.ACCOUNT Required only if the PAYIN.ACCOUNT is an AA Account.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "payinSettlement": {
                                        "type": "string",
                                        "description": "The field may be used as a switch to turn off the Settlement instruction temporarily without having the need to clear or delete the field contents. If the field is set to NO, then it means the instructions are not active. Validation Rules: Valid input is Yes or No. Default value is Yes.\n"
                                    },
                                    "paymentTypes": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "paymentTypeAccount": {
                                                    "type": "string",
                                                    "description": "Payment types for the AA contract that require settlement by DD to be defined.\nValid payment type from AA.PAYMENT.TYPE.\n"
                                                }
                                            }
                                        }
                                    },
                                    "payinActivity": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "mandateReference": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "The DD mandate to be used if the settlement method is DD. The DD number must be the account of the arrangement.\nShould be a valid Mandate Ref from DD.DDI.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "settlement": {
                            "type": "array",
                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "payinAccount": {
                                        "type": "string",
                                        "description": "Contains the Account number from where funds are to be debited and Credited against this payment type. Multiple accounts could be defined here and the rules of funding is governed by the PAYIN.AC.DB.RULE field. Validation Rules: Should be a valid T24 ACCOUNT Number.\n"
                                    },
                                    "paymentType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "reference": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payinActivity": {
                                                    "type": "string",
                                                    "description": "When PAYIN.ACCOUNT used is an Arrangement Account, then an activity has to be specified to debit that arrangement as well. That activity need to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Debit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYIN.ACCOUNT Required only if the PAYIN.ACCOUNT is an AA Account.\n"
                                                },
                                                "payinDbRule": {
                                                    "type": "string",
                                                    "description": "The field decides the manner in which system should utilise the funds available in PAYIN.ACCOUNT during settlement process. 1) FULL: System debits the PAYIN account to the extent of the bill amount irrespective of whether or not the funds are avaliable in the specified account. For this purpose, system creates an overdraft in the PAYIN.ACCOUNT in case funds are only partially available provided the PAYIN.ACCOUNT has a limit attached to it. 2) PARTIAL: System debits the PAYIN.ACCOUNT only to the extent of funds availabe. 3) NONE: System would not debit the PAYIN.ACCOUNT if funds are not fully available to settle the bill.\n"
                                                },
                                                "payinSettleActivity": {
                                                    "type": "string",
                                                    "description": "Activity to be used to settle the Dues of the current Arrangement. Typically this would be a APPLYPAYMENT activity. User activity may also be stated in this field. Validation Rules: Should be a valid record in AA.ACTIVITY.\n"
                                                },
                                                "payinRcType": {
                                                    "type": "string",
                                                    "description": "Defines the RC.TYPE reference to be used during handoff to inform the recycler what type of transaction is being handed-off.\nValidation Rules:\nShould be a valid entry in RC.TYPE.\nValid only if PAYIN.TXN.TYPE is defined.\n"
                                                },
                                                "payinRcCondition": {
                                                    "type": "string",
                                                    "description": "Defines the RC.CONDITION to be used for the payment type to allow variation of different retry conditions.\nValidation Rules:\nShould be a valid entry in RC.CONDITION.\nValid only if PAYIN.TXN.TYPE is defined.\n"
                                                },
                                                "transactionType": {
                                                    "type": "string",
                                                    "description": "Indicates whether the Customer is placing an order to buy or sell.\nThe transaction code is user defined for convenience and adaptability to cover all eventualities within theSecuritys Module From Coupon Payments to Redemptions and Capital Increase Type updates. Within the Open Orderapplication it is suggested that the same codes as for the Sec.Trade application i.e. For A purchase of securitiesSPR and for a Sale SSL be used.\n1-3 type S (uppercase alpha) character Sc.Trans.Name. (Mandatory Input.)\nMust be a valid code on the SC.TRANS.NAME file.\n"
                                                },
                                                "nominatedAmount": {
                                                    "type": "number",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "additionalAmount": {
                                                    "type": "number",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "excludeProperties": {
                                                    "type": "string",
                                                    "description": ""
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "payout": {
                            "type": "array",
                            "description": "When PAYOUT.ACCOUNT used is an Arrangement Account, then an activity has to be specified to Credit the Account arrangement as well. That activity needs to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Credit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYOUT.ACCOUNT Required only if the PAYOUT.ACCOUNT is an AA Account.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "payoutSettlement": {
                                        "type": "string",
                                        "description": "The field may be used as a switch to turn off the Settlement instruction temporarily without having the need to clear or delete the field contents. If the field is set to NO, then it means the instructions are not active. Validation Rules: Valid input is Yes or No. Default value is Yes.\n"
                                    },
                                    "payoutSettleActivity": {
                                        "type": "string",
                                        "description": "Contains the PROPERTY based on which the Payout settlement instruction would be processed. This definition allows users to configure multiple payouts happening to multiple accounts. For example, user can configure Current Interest to be paid out to one account, whilst the Maturity deposit amount may be credited to another account. Validation Rules: Should be a valid record in AA.PROPERTY.\n"
                                    },
                                    "propertyClasses": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payoutPropertyClass": {
                                                    "type": "string",
                                                    "description": "Contains the PROPERTY CLASS based on which the Payout settlement instruction would be processed. This definition allows users to configure multiple payouts happening to multiple accounts. For example, user can configure Interest to be paid out to one account, whilst the Maturity deposit amount to be credited to another account. Validation Rules: Should be a valid record in AA.PROPERTY.CLASS.\n"
                                                }
                                            }
                                        }
                                    },
                                    "properties": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payoutProperty": {
                                                    "type": "string",
                                                    "description": "Contains the PROPERTY based on which the Payout settlement instruction would be processed. This definition allows users to configure multiple payouts happening to multiple accounts. For example, user can configure Current Interest to be paid out to one account, whilst the Maturity deposit amount may be credited to another account. Validation Rules: Should be a valid record in AA.PROPERTY.\n"
                                                }
                                            }
                                        }
                                    },
                                    "payoutActivity": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payoutAccount": {
                                                    "type": "string",
                                                    "description": "Contains the Account to which funds are to be credited from this Arrangement. Validation Rules: Should be a valid T24 ACCOUNT Number.\n"
                                                },
                                                "payoutBeneficiary": {
                                                    "type": "string",
                                                    "description": "This field is a link to the core BENEFICIARY table and is used to define who is the ultimate beneficiary of the funds.\nWhen configured a PAYMENT.ORDER will be generated and the routing will be decided via the PAYMENT.ORDER.PARAMETER.\nBased on the setting in PAYMENT.ORDER.PARAMETER either a FUNDS.TRANSFER or TPH message will be produced.\nAlong with values from the PAYMENT.ORDER.PRODUCT record the BENEFICIARY record is mapped through to the PAYMENT.ORDER application and then mapped through to FUNDS.TRANSFER or TPH.\nCurrent functionality also allows for a T24 account to be defined in the Beneficiary record which will be credited.\no Optional field.\no Mutually exclusive with PAYOUT.ACCOUNT.\no Is used in conjunction with PAYOUT.PO.PRODUCT.\no Drills down to the BENEFICIARY table.\n"
                                                },
                                                "payoutPoProduct": {
                                                    "type": "string",
                                                    "description": "This field is linked to the PAYMENT.ORDER.PRODUCT table and its value is passed through to the PAYMENT.ORDER application.\nIts main purpose will be to control parameters for TPH processing and pass outgoing messages parameters.\no Optional field.\no Is used in conjunction with PAYOUT.BENEFICIARY.\no Drills down to the PAYMENT.ORDER.PRODUCT table.\n"
                                                },
                                                "payoutPercentage": {
                                                    "type": "number",
                                                    "description": "Will allow the ability to define only a percentage value.\nThe system will cascade 'from top-to bottom' down the multiple fields taking the percentages in order (a blank field will be considered for processing last).\nThe percentage defined is the % portion of the Billed amount, which will be settled from the respective account.\nThe total percentages may not exceed 100%, The total percentages may not total 100%.\nIn the case of any rounding issues the last account will be deemed as the account to process any required adjustments.\nA blank field can be defined at last, In this case the remainder of the bill will be settled from this account.\n"
                                                },
                                                "payoutAmount": {
                                                    "type": "number",
                                                    "format": "int64",
                                                    "description": "Will allow the ability to define only a fixed value.\nThe system will cascade 'from top-to bottom' down the multiple fields taking the amounts defined in order (a blank field will be considered for processing last).\nWhen a bill is generated to be collected the individual amounts or total amounts defined may exceed the billed amount.\nIn this case the amount defined is classed as an 'up-to' amount. This is the maximum that can be taken and will honour the ACCOUNT.DEBIT.RULE field.\nTo satisfy the bill a lesser amount can also be taken.\nWhen a bill is generated to be collected the individual amounts or total amounts defined may not satisfy the billed amount.\nThe amount defined will be the amount to be taken.\nIn this case any remainder of the bill will be made due.\n"
                                                },
                                                "payoutActivity": {
                                                    "type": "string",
                                                    "description": "When PAYOUT.ACCOUNT used is an Arrangement Account, then an activity has to be specified to Credit the Account arrangement as well. That activity needs to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Credit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYOUT.ACCOUNT Required only if the PAYOUT.ACCOUNT is an AA Account.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "retryDays": {
                            "type": "string",
                            "description": ""
                        },
                        "defaultSettlementAccount": {
                            "type": "string",
                            "description": "An account specified here will be used as the settlement account for all PAYIN or PAYOUT entries which do not have a Settlement Account, Beneficiary or DD Mandate Reference defined.\nInput in this field is optional. Must be a valid account.\n"
                        }
                    }
                },
                "maintainfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "documentfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "newarrfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "judoloanvarfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "ddrejectfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "dischargefee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "rtgsfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "sundryfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "locservfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "locextfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "agent": {
                    "type": "object",
                    "properties": {
                        "agents": {
                            "type": "array",
                            "description": "",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "agentId": {
                                        "type": "string",
                                        "description": "Holds the agent ID from CUSTOMER table.\n"
                                    },
                                    "agentArrangementId": {
                                        "type": "string",
                                        "description": "Hold the agentâ€™s arrangement ID, based on which commissions have to be calculated. Should be a valid AA.ARRANGEMENT (AGENT LINE).\n"
                                    },
                                    "agentRole": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "events": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "fixedAmount": {
                                                    "type": "number",
                                                    "format": "int64",
                                                    "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                                },
                                                "marginOperand": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                },
                                                "marginPercent": {
                                                    "type": "number",
                                                    "description": "Defines a percentage is applied over the default commission amount, to calculate the final commission for a financial arrangement. Is used in conjunction with MARGIN.OPERAND.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "ArrangementHeader": {
            "properties": {
                "transactionStatus": {
                    "type": "string"
                },
                "aaaId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "audit": {
                    "type": "object",
                    "properties": {
                        "T24_time": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "parse_time": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            }
        },
        "createLocSimResponse": {
            "properties": {
                "header": {
                    "$ref": "#/definitions/ArrangementHeader"
                },
                "body": {
                    "$ref": "#/definitions/createLocSimResponseBody"
                }
            },
            "description": "createLocSimResponse"
        },
        "createLocSimResponseBody": {
            "type": "object",
            "properties": {
                "arrangementActivity": {
                    "type": "object",
                    "properties": {
                        "parties": {
                            "type": "array",
                            "description": "",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "partyId": {
                                        "type": "string",
                                        "description": "This field denotes the customer(s) of the Arrangement contract.\nThis field is required to be input for new arrangement, takeover, and Change primary customer activities.\nAssociated multi-value with CUSTOMER.ROLE field.\nValidation Rules:\n1 -6 numeric character customer number. or 3 - 10 alphanumeric character customer mnemonic. (mandatory input).\nMust be either a valid customer number or customer mnemonic of a customer on the CUSTOMER file.\n"
                                    },
                                    "partyRole": {
                                        "type": "string",
                                        "description": "Associated with CUSTOMER field. Denotes the role of the customer in the Arrangement.\nValidation Rules:\nMandatory input. If not input by the user, defaulted with the system created role 'Owner'.\nMust be a valid record in AA.CUSTOMER.ROLE table.\n"
                                    }
                                }
                            }
                        },
                        "agents": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "agentId": {
                                        "type": "string",
                                        "description": "Holds the agent ID from CUSTOMER table.\n"
                                    },
                                    "agentArrangementId": {
                                        "type": "string",
                                        "description": "Hold the agentâ€™s arrangement ID, based on which commissions have to be calculated. Should be a valid AA.ARRANGEMENT (AGENT LINE).\n"
                                    },
                                    "agentRole": {
                                        "type": "string",
                                        "description": ""
                                    }
                                }
                            }
                        },
                        "arrangmentId": {
                            "type": "string",
                            "description": "Unique identification number for the arrangement contract. The format of the ID is as follows.\nAA YYDDD xxxxx.\nwhere: AA - Arrangement Architecture module identifier, YYDDD - Year and date of input in julian date format, xxxxx - Is a system generated unique identifier.\nFor 'New Arrangement' activity this field should be input as 'NEW' and will be updated by the system while processing the activity with the unique reference number.\nWhen attempting an activity for a existing arrangement and the arrangement has generated a underlying ACCOUNT record, then the ACCOUNT id may be used as an alternate id.\nValidation Rules:\nMust be 'NEW' or an existing Arrangement ID.\n"
                        },
                        "productId": {
                            "type": "string",
                            "description": "This field denotes product of the arrangement contract. The characteristics of the arrangement is derived from the Product to which it is linked to.\nAn arrangement product and arrangement contract is a series of properties (AA.PROPERTY) relating to different components (AA.PROPERTY.CLASS). Each product has a set of mandatory components and optional components.\nIt is possible to change the product of the arrangement during its life-cycle subject to certain restrictions. For each product change this field is updated along with the effective date of change.\n"
                        },
                        "variation": {
                            "type": "string",
                            "description": "The field specifies the variation of the product that the arrangement is running. When selecting a product from the catalogue, entering the customer number and validating, AA will automatically choose the correct variation based upon the eligibility rules and priority specified. If a user manually specified the variation, eligibility will still be checked and if the user is not eligible but the rules are configured to raise an override, the user can choose to accept the override.\n"
                        },
                        "currency": {
                            "type": "string",
                            "description": "The SWIFT Currency Code for the entry. The Currency of the Account in Field 1.  Not used in Entries over local currency Accounts.\n3 type S (upper-case alpha or numeric) characters Currency Code, or blank. (Internal file, no input.)\n"
                        },
                        "pricing": {
                            "type": "string",
                            "description": "Method used to assign a Relationship Pricing Arrangement(s) to the financial arrangement.\nAutomatic (or blank) â€“ The conditions in the productâ€™s Pricing Rules property will determine the pricing plan to apply. This option is valid if the Pricing Rules are set to 'Automatic' or 'Automatic or Manual'.\nManual â€“ The user will manually assign a plan with the following field. This option is valid if the Pricing Rules are set to 'Manual' or 'Automatic or Manual'.\nNo Pricing â€“ No plan will be applied.\nNone â€“ No plan will be applied.\nThis is an optional field.\nShould be either AUTOMATIC, MANUAL or NO.PRICING or NONE.\n"
                        },
                        "pricingPlan": {
                            "type": "string",
                            "description": "If 'Automatic' is specified in PRICING.SELECTION field, then AA will determine the best plan and populate this field with the Plan Product ID. If 'Manual' is selected the user must enter the Plan Product ID. AA will validate to ensure that a valid Relationship Pricing Arrangement exists for the customer. This Plan ID/Variation will also be stored in AA.ARRANGEMENT.\n"
                        },
                        "simulationId": {
                            "type": "string",
                            "description": ""
                        },
                        "tradeDate": {
                            "type": "string",
                            "format": "date",
                            "description": "Standard date field, which is the trade date of the contract. Can be input during NEW/ROLLOVER/CHANGE.PRODUCT activities, amendment during other activities would cause error.\nValidations\n1. A date field type only.\n2. Initially defaulted to the effective date, if it is a forward dated activity then the current system date will be defaulted.\n3. Can be changed but must be equal to or less than the current system date.\n4. A back dated date is acceptable but must be within the parameters of the Product Proofing.\n5. Cannot have a date that is greater than the existing field EFFECTIVE.DATE in AA.ARRANGEMENT.ACTIVITY.\n"
                        },
                        "activityId": {
                            "type": "string",
                            "description": ""
                        },
                        "effectiveDate": {
                            "type": "string",
                            "format": "date",
                            "description": "Effective date of the Activity to be processed. This is always required for processing any activity.\nStandard date field.\n"
                        },
                        "reason": {
                            "type": "string",
                            "description": "A text field to store the reason behind performing the current activity. For example, if the rate is manually revised or product changed or redeemed(and not restricted to the above activities alone), a user may record a reason for performing such activity for future verification and audit.\n"
                        }
                    }
                },
                "activities": {
                    "type": "object",
                    "properties": {
                        "{activityName}": {
                            "type": "object",
                            "properties": {
                                "activity": {
                                    "type": "string"
                                },
                                "transactionStatus": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "properties": {
                    "type": "object",
                    "properties": {
                        "balance": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "alternateIds": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "alternateIdType": {
                                                        "type": "string",
                                                        "description": "In this application any alternate account systems defined in the ACCOUNT.PARAMETER application will be defaulted to allow maintenance of the alternate account system.\nWhen alternate account systems are defined in the ALT.ACT.PARAMETER application and entered in the ACCOUNT.PARAMETER ALTERNATE.ID field, their system identifiers will be displayed here, allowing maintenance of the alternate account identifiers in the following field.\nNo amendments are allowed.\nMultivalue field.\nThis is a NOINPUT field.\n"
                                                    },
                                                    "alternateId": {
                                                        "type": "string",
                                                        "description": "Alternate System IDs are typically used for accounts that have been taken over from a different system or bank. Each of these previous account systems are specified in T24 and for accounts which have been taken over, the alternate account ID specific to the previous system will be specified at the arrangement level.\nUp to 16 type A (alphanumeric) characters.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "restrictionRules": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "postingRestriction": {
                                                        "type": "string",
                                                        "description": "This field Specifies the account closure posting restriction code (defined in POSTING.RESTRICT). This would be used to update the ACCOUNT.CLOSURE record that is automatically created by the system once the close activity is triggered. POSTING.RESTRICT should be between 90 to 99..\n"
                                                    },
                                                    "blockingCode": {
                                                        "type": "string",
                                                        "description": "Pre defined set of blocking code that are defined in EB.LOOKUP and is linked to each posting restriction.\nEach blocking code is linked to corresponding posting restriction by defining them in posting restriction table.\nWhen a blocking code is linked to a posting restriction then this code should be defined in the posting restriction record or else system will not allow to link the blocking code.\nValidation Rules:\nThis field will accept a record from the EB.LOOKUP.\nNot a Mandatory field.\nVirtual table name for EB.LOOKUP will be BLOCK.REASON.CODES.\n"
                                                    },
                                                    "blockingReason": {
                                                        "type": "string",
                                                        "description": "This field will be used to capture Free Text information.\nThis field will take virtually unlimited text.\nCan be added in addition to the BLOCKING.CODE field.\nNot a mandatory field.\n"
                                                    },
                                                    "startDate": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": "Identifies the Date & Frequency of the Standalone DD for execution.\nThe claim value date is the date component of this field. Hence the date & the frequency has to be given after considering the Claim value date as given in DD.PARAMETER.\nThe date is cycled with the given frequency and this mandate reference is updated in DD.STANDALONE.FQU.LIST with the next execution date.\nWhenever the frequency is modified, then the underlying claim (DD.ITEM) is marked as 'DELETED' and new claim is raised for the given frequency. Incase the Claim is already sent(DD.ITEM status is 'CLAIMSENT'), then override is raised. However the DD.ITEM will not be marked as 'DELETED' as claim file is already generated.\nMandatory when STAND.ALONE.DDI set to Yes\nThis field is sub-divided into two elements: 1. Date 1-9 type D (date format in range 1950-2049) characters. 2. Optional Frequency 1-5 type SS (uppercase alpha or numeric, first character alpha) characters. (Mandatory input)\nThe date input or generated will correspond to the first execution of the Standalone DD.\nUsing the date & frequency in case given , DD.STANDALONE.FQU.LIST is updated with the next execution date.\nAn override will be required if the date input is a non-working day.\nDate entered should be greater than today and should not be more than Termination date.\n"
                                                    },
                                                    "expiryDate": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": "Specifies the date on which the Limit will expire. But if there are contracts against this limit,  then the limit will move to history only after the contracts mature. Any new drawings against this limit would raise overrides stating that the limit expires before the maturity date.\nWarning of the approach of this date is given on the Limits Approaching Expiry Date overnight report. The number of days prior to Expiry Date that the warning starts to appear is defined by the Expiries Reporting field on the LIMIT.PARAMETER table.\n6 to 11 type D (date) characters. (Defaults to a year from the current run     date.) The date input must be greater than or equal to the Limit Review Date\n"
                                                    },
                                                    "unblockingCode": {
                                                        "type": "string",
                                                        "description": "This field will be used to define the Description when removing the restriction.\nValidation Rules:\nThis field will accept a record from the EB.LOOKUP.\nNot a Mandatory field.\nVirtual table name for EB.LOOKUP will be UNBLOCK.REASON.CODES.\n"
                                                    },
                                                    "unblockingReason": {
                                                        "type": "string",
                                                        "description": "This field will be used to capture Free Text information for removal of restriction.\nThis field will take virtually unlimited text.\nCan be added in addition to UNBLOCKING.CODE field.\nNot a mandatory field.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "accountType": {
                                            "type": "string",
                                            "description": "The title lines are used to describe the specific account in multiple languages.\nUp to 35 type A (alphanumeric) characters.\n"
                                        },
                                        "accountName": {
                                            "type": "string",
                                            "description": "Identifies the first part, or the whole, of the Account Title.\nThis Field distinguishes individual Accounts, e.g. for a Customer who holds more than one Account.  The title can be continued in the ACCOUNT TITLE 2 Field.\nMulti-lingual field to hold the account title in different languages.\nUp to 35 type A (alphanumeric) characters. (Mandatory for Internal Accounts, otherwise optional input. Default is the Short Name from the Customer record.)\n"
                                        },
                                        "portfolioId": {
                                            "type": "string",
                                            "description": "Either the portfolio the Security Position is for or the depot the security position is for. Format is 6N - 3N Where 6N is the customer number and 3N the suffix. If the suffix is 999 then the security position is for the depository whose ID is the 6N prefix of this field, if the suffix is 777 then then security position is for the boker whose ID is the 6N prefix, otherwise (suffix is not 999 or 777) then this is the ID of the portfolio the security position is for.\nNo input field, Internally generated by the system.\n"
                                        },
                                        "anniversary": {
                                            "type": "string",
                                            "description": "This field stores the Anniversary Date of the arrangement in the format 'MMDD'. This is user inputtable field which will be used to get the start and end date of periodic rules if Rule Start is set to 'Anniversary' in the periodic attribute.\n"
                                        },
                                        "mnemonic": {
                                            "type": "string",
                                            "description": "Provides an alternative means of referencing the company details and is used in the naming of the files belonging to this company.\nThe mnemonic code rather than the Company ID may be used to reference the company.\nThe mnemonic code is used in the prefix of the files created /belonging for/to this company.\nThe code cannot be amended as an amendment would require files to be renamed/copied.\n2-3 type AA (alphanumeric, first character must be alpha) characters. (Mandatory input)  Cannot be changed.  The mnemonic code must be unique (no other company can have the same mnemonic value).\n"
                                        },
                                        "accountReference": {
                                            "type": "string",
                                            "description": "The field holds the reference of the underlying ACCOUNT application. This should just be the same as trying a new input on ACCOUNT application. If this field is populated, system would use the reference stated here to create the ACCOUNT. It is recommended that the reference be populated during TAKEOVER processing so that lock during key generation is avoided and Arrangement could load in a true multi-thread fashion. If it is not stated, system would try to create ACCOUNT reference using auto id generation of the ACCOUNT application.\n"
                                        },
                                        "customerReference": {
                                            "type": "string",
                                            "description": "It is used in Customer beneficiary only. Mapped to Credit their ref field in FT and Ben.Reference in STO. For detail description about this field, refer credit.their.ref in FT or BEN.REFERENCE in STO.\nMust be swift characters. 35 type Swift characters.\n(not mandatory)\n"
                                        },
                                        "originationReference": {
                                            "type": "string",
                                            "description": "This field is for information purposes only. This field may find use to store the external reference identifier which initiated this arrangement - like a Loan Origination's reference.\nThis is a standard T24 NOCHANGE Field of 35 characters in length and holds any character.\n"
                                        },
                                        "policyidentifier": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "legalEntity": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "entityAllocationDate": {
                                            "type": "string",
                                            "format": "date",
                                            "description": ""
                                        },
                                        "loanContractId": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "arrangementSplitRole": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "brokerCompany": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "brokerIndividual": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "losId": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "numberToSign": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "sourceOfFund": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "accountPurpose": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "firstHomeBuyer": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "messaging": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "activityCharges": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "activities": {
                                            "type": "array",
                                            "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "activityId": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "charges": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "chargePropertyId": {
                                                                    "type": "string",
                                                                    "description": "This field indicates the charge that would be collected when the corresponding activity is triggered. This field is associated with the ACTIVITY.ID field. The charge defined will correspond to the CHARGE property. These properties and their conditions would be defined in the product designer of an product.\nValidation rule.\nShould be a valid AA.PROPERTY belonging to the CHARGE property class.\n"
                                                                },
                                                                "appplicationPeriod": {
                                                                    "type": "string",
                                                                    "description": "This will have to accept a valid T24 period.This Field will denote the application period for current aplication Method.\n"
                                                                },
                                                                "applicationMethod": {
                                                                    "type": "string",
                                                                    "description": "This will hold three values either DUE or CAPITALISE or DEFER.This Field denote which application method(DUE or CAPITALISE or DEFER)should be taken while applying activity charges.\n",
                                                                    "enum": [
                                                                        "DUE",
                                                                        "CAPITALISE",
                                                                        "DEFER"
                                                                    ]
                                                                },
                                                                "chargeAutoSettle": {
                                                                    "type": "string",
                                                                    "description": "This field aids turning off the automatic settlement for the corresponding charge property. If the field is set as â€˜Yesâ€™ settlement processing will be done for the assocaited charge property when settlement property class is configured for â€˜Chargeâ€™ payment type.\nAllowed Values:.\nâ€˜Yesâ€™ or â€˜Noâ€™.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "settleActivity": {
                                            "type": "string",
                                            "description": "Defines the repayment activity to be triggered when there is unallocated credit. Triggered as secondary activity of Activity charge make due.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "customer": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "principaldrint": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "interest": {
                                            "type": "array",
                                            "description": "",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "fixed": {
                                                        "type": "string",
                                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA fixed rate is directly entered by the user specifying the Defined Property and is not defined by an index table. Fixed rates are entered as positive numbers unless a negative rate is allowed.\nThis field is part of a multi value set of fields including FIXED.RATE, FLOATING.INDEX, PERIODIC.INDEX, PERIODIC.PERIOD, PERIODIC.BASE, MARGIN.TYPE, MARGIN.OPER, MARGIN.RATE, TIER.MIN.RATE, TIER.MAX.RATE, TIER.AMOUNT,TIER.PERCENT.\n"
                                                    },
                                                    "floating": {
                                                        "type": "string",
                                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA floating interest rate is tied to a variable base rate (i.e. BASIC.INTEREST). During interest calculation, T24 will use the currency specific rate applicable for the calculation date (i.e. the rate used for the calculation will change whenever the base rate is changed).\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "spread": {
                                                        "type": "string",
                                                        "description": "It would be possible to specify that the rate for a given tier be â€˜Linkedâ€™, by setting the field Linked Rate to Yes.\nThis can be mixed with normal rate calculations as well.\nWhere the Linked Rate is set to Yes, system would expect that an Arrangement reference in given in the â€˜Linked Arrangementâ€™ field along with the Interest property to be linked to.\n"
                                                    },
                                                    "minMaxRate": {
                                                        "type": "string",
                                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "maxRate": {
                                                        "type": "string",
                                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "effectiveRate": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "negativeRate": {
                                                        "type": "string",
                                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                                    },
                                                    "orPercent": {
                                                        "type": "number",
                                                        "description": "The tier percent relates to the field RATE.TIER.TYPE and percentages can be entered if BAND is selected.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. Either TIER.PERCENT or TIER.AMOUNT can be entered by not both. If TIER.PERCENT is defined, then the Sum of Tier percentage should be 100%.\n"
                                                    },
                                                    "margins": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "margin": {
                                                                    "type": "string",
                                                                    "description": "Identifies whether there are single or multiple margins.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                                },
                                                                "marginOperation": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "attributes": {
                                                        "type": "string",
                                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "description": "This field along with FIELD and OPERAND, helps the user to set the conditions for the Alert to be triggered. Holds the actual value of the field on which the criteria is based. If a value is provided at the event definition level, then that value is defaulted here. If not, the user can provide the value at the time of Subscribing.\nThe fields from FIELD to VALUE are displayed in this subscription screen only when INHERIT is set to Yes in the corresponding TEC.ITEMS record. These set of fields define the criteria for alerts.\n"
                                                    },
                                                    "linkedArrangement": {
                                                        "type": "string",
                                                        "description": "Where at least one tier is set to be Linked Rate, the Arrangement to be linked for calculating the Interest Rate, must be specified here (or automatically defaulted by the system, where a Limit is attached)\n"
                                                    },
                                                    "attribute": {
                                                        "type": "string",
                                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "periodicInterest": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "periodicIndex": {
                                                        "type": "string",
                                                        "description": "A periodic rate is tied to an index (e.g. LIBOR) which is dependent on a period of time (e.g. term) and possibly an amount. Once the arrangement is active, the rate is fixed until it is reset. Periodic rates can be reset at a pre-determined frequency.\nTo define a periodic rate, the user specifies:.\nPERIODIC.INTEREST index to use.\nPeriod (this will default to TERM if a Term Amount Property exists).\nInterest selection method if the term is not found on the index. The option currently available is INTERPOLATE.\nRate Reset period.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "periodicRate": {
                                                        "type": "string",
                                                        "description": "Indicates the rate on which the index runs on the date stated in the key. When a periodic index is used and the field is left blank, then system computes the rate from PERIODIC.INTEREST and defaults it here. When a rate is already present(say, the user changes the system computed rate), then system does not compute the new rate.\nValidation Rules:\nSystem defaulted and modifiable.\nStandard Rate field.\nValid only if Periodic index is stated.\n"
                                                    },
                                                    "periodicPeriodType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "periodicPeriod": {
                                                        "type": "string",
                                                        "description": "Defines the interest period to be used when linking to PERIODIC.INTEREST.(This will default to TERM if a Term Amount Property exists),. When a period is stated in Years or Weeks, they would be converted to Months and Days respectively and then located on the PI table.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "periodicMethod": {
                                                        "type": "string",
                                                        "description": "If system does not find a interest rate in the correct bucket of PERIODIC.INTEREST table, it automatically applies a method to arrive at a rate chosen by this method.\nValid method is:.\nINTERPOLATE - System automatically interpolates the rate. This is the DEFAULT option as well.\n"
                                                    },
                                                    "initialResetDate": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": ""
                                                    },
                                                    "periodicReset": {
                                                        "type": "string",
                                                        "description": "This indicates the reset period of the index stated. System would automatically reset the PERIODIC.RATE at the frequency stated in this field. Applicable only at Arrangement level. Periodic index may still be used without this field meaning, it never resets the computed rate.\nValidation rule:.\nValid PERIOD field.\n"
                                                    },
                                                    "effectiveRate": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "negativeRate": {
                                                        "type": "string",
                                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                                    },
                                                    "margins": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "marginType": {
                                                                    "type": "string",
                                                                    "description": "Identifies whether there are single or multiple margins\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                                },
                                                                "marginOperation": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "activites": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "onActivity": {
                                                        "type": "string",
                                                        "description": "When the periodic interest rate needs to be recalculated for certain activities, this field in combination with RECALCULATE may be used to setup the activity for which interest needs to be recalculated.\nValidation Rules:\n1. Applicable only for Periodic interest rate recalculation.\n2. Must be a valid activity in AA.ACTIVITY.\n"
                                                    },
                                                    "recalculate": {
                                                        "type": "string",
                                                        "description": "Related to ON.ACTIVITY activity, when flagged to RATE, system will recalculate Periodic rate when the activity setup in ON.ACTIVITY is processed. When the value is NOTHING periodic rate would not be recalculated when the activity setup in ON.ACTIVITY is processed.\nValidation Rules:\n1. Mandatory when ON.ACTIVITY is setup.\nThe fields ON.ACTIVITY and RECALCULATE in interest property class will be enhanced to allow user to define when to recalculate â€˜Profit Amountâ€™.\nAll activities which could result in payment schedule recalculation can be configured to recalculate â€˜Profit Amountâ€™ i.e., activities with payment schedule calculate and update action.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "references": {
                                            "type": "array",
                                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "customType": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    },
                                                    "customName": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    },
                                                    "customValue": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "tiers": {
                                            "type": "string",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n"
                                        },
                                        "linkedProperty": {
                                            "type": "string",
                                            "description": "This field will be used to specify the Interest Property of the Linked Arrangement that should be referred to, for getting the Interest Rate.\nWhere at least one tier is set to be â€˜Linked Rateâ€™, this must be specified.\n"
                                        },
                                        "dayBasis": {
                                            "type": "string",
                                            "description": "T24 can calculate interest based upon several different day basis types. Each T24 Interest Day Basis type is represented as a numerator and denominator.\nNumerator (interest days).\no 360 Each month is considered to have 30 days.\no 366 The exact number of days will be used.\nDenominator (days in the year).\no 360 Each year is considered to have 360 days.\no 365 Each year is considered to have 365 days.\no 366 The exact number of days in the year will be used (365 or 366).\nT24 allows the following interest day basis types:.\nType Notes.\nA (360/360) A1 and A2 are variations which alter the method of treating a month as 30 days.\nB (366/360).\nC (366/366).\nD (360/366).\nE (366/365).\nF (360/365) F1 and F2 are variations which alter the method of treating a month as 30 days.\nThis is a Mandatory field.\n"
                                        },
                                        "calcThreshold": {
                                            "type": "string",
                                            "description": "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated.\n"
                                        },
                                        "accrualRule": {
                                            "type": "string",
                                            "description": "When accruing interest,T24 must determine which amounts to include in each day's balance, the actual days to include in the period (e.g. first day, last day) and how to round any calculations.\nT24 allows users to define the calculation method to use, by specifying an accrual rule in EB.ACCRUAL.PARAM. Users can define the following:.\nFirst Day Inclusive (Yes/No).\nLast Day Inclusive (Yes/No).\nRounding Rule (Natural, Down, Up, Currency, None).\nIntermediate Calculation Rounding (Yes/No).\nCredit value date adjustment.\nDebit value date adjustment.\n"
                                        },
                                        "compounding": {
                                            "type": "string",
                                            "description": "T24 supports the compounding of both debit and credit interest.\nCompounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year. This field defines the number of compounding periods to be applied.\nNote that the compounding type provides a factor in the calculation only and does not actually cause the base principal amount to be actually increased by the calculated interest amount.\nThe following compound frequencies are supported:.\nDAILY.\nInterest is compounded 360/5/6 times a year (from days in year in INTEREST.BASIS).\nWEEKn.\nInterest is compounded 52/n times per year based on a number of WEEKS.\n-- Bi-weekly compounding should be defined as WEEK2 and will result in 26 periods.\n-- Four-Weekly compounding should be defined as WEEK4 and results in 13 periods.\nMnn.\nInterest is compounded 12/n times a year based on a numberof months.\n-- Monthly compounding should be defined as M01 and will result in 12 periods.\n-- Bi-Monthly should be defined as M02 and will result in 6 periods.\n-- Quarterly should be defined as M03 and will result in 4 periods.\n-- Semi-Annual should be defined as M06 and will result in 6 periods.\n-- Annual should be defined as M12 and will result in 1 period.\n-- Bi-Annual should be defined as M24 and will result in 0.5 periods.\n-- Any number of months up to 99 may be defined and results in 12/n periods.\nTWMTH.\nInterest is compounded twice a month resulting in 24 periods as opposed to WEEK2.\nwhich results in 26 periods.\nNnnn.\n- Compounding takes place nnn times per year.\n"
                                        },
                                        "compoundYieldMethod": {
                                            "type": "string",
                                            "description": "This field indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate. System uses the below formula to calculate the interest amount,.\nDaily Effective Rate(ERd) = (1+Interest Rate)^(1/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\nWhen the field is set as NULL the effective rate is calculated based on the compounding frequency defined in the field COMPOUND.TYPE using the below formula,.\nDaily Effective Rate(ERd) = (1+Interest Rate/Compound Freq)^(Compound Freq/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\n"
                                        },
                                        "minIntAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field indicates the minimum interest amount to be posted for an arrangement/account.\nIf the calculated interest amount is less than the amount specified in this field, system will waive the interest amount or adjust the interest amount based on the option set in the field MIN.INT.WAIVE.\n"
                                        },
                                        "minIntWaive": {
                                            "type": "string",
                                            "description": "This field indicates if the calculated interest amount has to be waived or adjusted.\nIf the field is set to YES, then the system will waive the interest amount if it is less than the MIN.INT.AMOUNT specified.\nIf NULL value is set and if the calculated interest amount is less than the MIN.INT.AMOUNT specified, then system will post the minimum interest amount.\n"
                                        },
                                        "referLimit": {
                                            "type": "string",
                                            "description": "For an arrangement under ACCOUNTS Product Line, it is possible link the first tier amount of debit interest to the LIMIT record attached.\nIt can be achieved by setting the field REFER.LIMIT in INTEREST property condition as â€˜YESâ€™. This functionality can be enabled only if the LIMIT is managed by AA.\n"
                                        },
                                        "suppressAccrual": {
                                            "type": "string",
                                            "description": "The Field accepts the options 'YES' or 'ALTERNATE'.\nIndicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property.\nFor Example:.\nIt will be set as YES by the system if the DONOR.ACCRUAL field is set as SUPPRESS for any product / arrangement in INTEREST.COMPENSTION property of a Bundle arrangement.\nIf it is set as 'ALTERNATE' for a property then the Accrual will be suppressed for the property for which it is set and Accrual will happen for the Alternate property which is set in Activity Restriction.\nBlank value in this field denotes that there is no suppression of accrual.\nThis is a Non Mandatory field.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "principalcrint": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "interest": {
                                            "type": "array",
                                            "description": "",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "fixed": {
                                                        "type": "string",
                                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA fixed rate is directly entered by the user specifying the Defined Property and is not defined by an index table. Fixed rates are entered as positive numbers unless a negative rate is allowed.\nThis field is part of a multi value set of fields including FIXED.RATE, FLOATING.INDEX, PERIODIC.INDEX, PERIODIC.PERIOD, PERIODIC.BASE, MARGIN.TYPE, MARGIN.OPER, MARGIN.RATE, TIER.MIN.RATE, TIER.MAX.RATE, TIER.AMOUNT,TIER.PERCENT.\n"
                                                    },
                                                    "floating": {
                                                        "type": "string",
                                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA floating interest rate is tied to a variable base rate (i.e. BASIC.INTEREST). During interest calculation, T24 will use the currency specific rate applicable for the calculation date (i.e. the rate used for the calculation will change whenever the base rate is changed).\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "spread": {
                                                        "type": "string",
                                                        "description": "It would be possible to specify that the rate for a given tier be â€˜Linkedâ€™, by setting the field Linked Rate to Yes.\nThis can be mixed with normal rate calculations as well.\nWhere the Linked Rate is set to Yes, system would expect that an Arrangement reference in given in the â€˜Linked Arrangementâ€™ field along with the Interest property to be linked to.\n"
                                                    },
                                                    "minMaxRate": {
                                                        "type": "string",
                                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "maxRate": {
                                                        "type": "string",
                                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "effectiveRate": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "negativeRate": {
                                                        "type": "string",
                                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                                    },
                                                    "orPercent": {
                                                        "type": "number",
                                                        "description": "The tier percent relates to the field RATE.TIER.TYPE and percentages can be entered if BAND is selected.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. Either TIER.PERCENT or TIER.AMOUNT can be entered by not both. If TIER.PERCENT is defined, then the Sum of Tier percentage should be 100%.\n"
                                                    },
                                                    "margins": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "margin": {
                                                                    "type": "string",
                                                                    "description": "Identifies whether there are single or multiple margins.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                                },
                                                                "marginOperation": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "attributes": {
                                                        "type": "string",
                                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "description": "This field along with FIELD and OPERAND, helps the user to set the conditions for the Alert to be triggered. Holds the actual value of the field on which the criteria is based. If a value is provided at the event definition level, then that value is defaulted here. If not, the user can provide the value at the time of Subscribing.\nThe fields from FIELD to VALUE are displayed in this subscription screen only when INHERIT is set to Yes in the corresponding TEC.ITEMS record. These set of fields define the criteria for alerts.\n"
                                                    },
                                                    "linkedArrangement": {
                                                        "type": "string",
                                                        "description": "Where at least one tier is set to be Linked Rate, the Arrangement to be linked for calculating the Interest Rate, must be specified here (or automatically defaulted by the system, where a Limit is attached)\n"
                                                    },
                                                    "attribute": {
                                                        "type": "string",
                                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "periodicInterest": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "periodicIndex": {
                                                        "type": "string",
                                                        "description": "A periodic rate is tied to an index (e.g. LIBOR) which is dependent on a period of time (e.g. term) and possibly an amount. Once the arrangement is active, the rate is fixed until it is reset. Periodic rates can be reset at a pre-determined frequency.\nTo define a periodic rate, the user specifies:.\nPERIODIC.INTEREST index to use.\nPeriod (this will default to TERM if a Term Amount Property exists).\nInterest selection method if the term is not found on the index. The option currently available is INTERPOLATE.\nRate Reset period.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "periodicRate": {
                                                        "type": "string",
                                                        "description": "Indicates the rate on which the index runs on the date stated in the key. When a periodic index is used and the field is left blank, then system computes the rate from PERIODIC.INTEREST and defaults it here. When a rate is already present(say, the user changes the system computed rate), then system does not compute the new rate.\nValidation Rules:\nSystem defaulted and modifiable.\nStandard Rate field.\nValid only if Periodic index is stated.\n"
                                                    },
                                                    "periodicPeriodType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "periodicPeriod": {
                                                        "type": "string",
                                                        "description": "Defines the interest period to be used when linking to PERIODIC.INTEREST.(This will default to TERM if a Term Amount Property exists),. When a period is stated in Years or Weeks, they would be converted to Months and Days respectively and then located on the PI table.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "periodicMethod": {
                                                        "type": "string",
                                                        "description": "If system does not find a interest rate in the correct bucket of PERIODIC.INTEREST table, it automatically applies a method to arrive at a rate chosen by this method.\nValid method is:.\nINTERPOLATE - System automatically interpolates the rate. This is the DEFAULT option as well.\n"
                                                    },
                                                    "initialResetDate": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": ""
                                                    },
                                                    "periodicReset": {
                                                        "type": "string",
                                                        "description": "This indicates the reset period of the index stated. System would automatically reset the PERIODIC.RATE at the frequency stated in this field. Applicable only at Arrangement level. Periodic index may still be used without this field meaning, it never resets the computed rate.\nValidation rule:.\nValid PERIOD field.\n"
                                                    },
                                                    "effectiveRate": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "negativeRate": {
                                                        "type": "string",
                                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                                    },
                                                    "margins": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "marginType": {
                                                                    "type": "string",
                                                                    "description": "Identifies whether there are single or multiple margins\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                                },
                                                                "marginOperation": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "activites": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "onActivity": {
                                                        "type": "string",
                                                        "description": "When the periodic interest rate needs to be recalculated for certain activities, this field in combination with RECALCULATE may be used to setup the activity for which interest needs to be recalculated.\nValidation Rules:\n1. Applicable only for Periodic interest rate recalculation.\n2. Must be a valid activity in AA.ACTIVITY.\n"
                                                    },
                                                    "recalculate": {
                                                        "type": "string",
                                                        "description": "Related to ON.ACTIVITY activity, when flagged to RATE, system will recalculate Periodic rate when the activity setup in ON.ACTIVITY is processed. When the value is NOTHING periodic rate would not be recalculated when the activity setup in ON.ACTIVITY is processed.\nValidation Rules:\n1. Mandatory when ON.ACTIVITY is setup.\nThe fields ON.ACTIVITY and RECALCULATE in interest property class will be enhanced to allow user to define when to recalculate â€˜Profit Amountâ€™.\nAll activities which could result in payment schedule recalculation can be configured to recalculate â€˜Profit Amountâ€™ i.e., activities with payment schedule calculate and update action.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "references": {
                                            "type": "array",
                                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "customType": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    },
                                                    "customName": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    },
                                                    "customValue": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "tiers": {
                                            "type": "string",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n"
                                        },
                                        "linkedProperty": {
                                            "type": "string",
                                            "description": "This field will be used to specify the Interest Property of the Linked Arrangement that should be referred to, for getting the Interest Rate.\nWhere at least one tier is set to be â€˜Linked Rateâ€™, this must be specified.\n"
                                        },
                                        "dayBasis": {
                                            "type": "string",
                                            "description": "T24 can calculate interest based upon several different day basis types. Each T24 Interest Day Basis type is represented as a numerator and denominator.\nNumerator (interest days).\no 360 Each month is considered to have 30 days.\no 366 The exact number of days will be used.\nDenominator (days in the year).\no 360 Each year is considered to have 360 days.\no 365 Each year is considered to have 365 days.\no 366 The exact number of days in the year will be used (365 or 366).\nT24 allows the following interest day basis types:.\nType Notes.\nA (360/360) A1 and A2 are variations which alter the method of treating a month as 30 days.\nB (366/360).\nC (366/366).\nD (360/366).\nE (366/365).\nF (360/365) F1 and F2 are variations which alter the method of treating a month as 30 days.\nThis is a Mandatory field.\n"
                                        },
                                        "calcThreshold": {
                                            "type": "string",
                                            "description": "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated.\n"
                                        },
                                        "accrualRule": {
                                            "type": "string",
                                            "description": "When accruing interest,T24 must determine which amounts to include in each day's balance, the actual days to include in the period (e.g. first day, last day) and how to round any calculations.\nT24 allows users to define the calculation method to use, by specifying an accrual rule in EB.ACCRUAL.PARAM. Users can define the following:.\nFirst Day Inclusive (Yes/No).\nLast Day Inclusive (Yes/No).\nRounding Rule (Natural, Down, Up, Currency, None).\nIntermediate Calculation Rounding (Yes/No).\nCredit value date adjustment.\nDebit value date adjustment.\n"
                                        },
                                        "compounding": {
                                            "type": "string",
                                            "description": "T24 supports the compounding of both debit and credit interest.\nCompounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year. This field defines the number of compounding periods to be applied.\nNote that the compounding type provides a factor in the calculation only and does not actually cause the base principal amount to be actually increased by the calculated interest amount.\nThe following compound frequencies are supported:.\nDAILY.\nInterest is compounded 360/5/6 times a year (from days in year in INTEREST.BASIS).\nWEEKn.\nInterest is compounded 52/n times per year based on a number of WEEKS.\n-- Bi-weekly compounding should be defined as WEEK2 and will result in 26 periods.\n-- Four-Weekly compounding should be defined as WEEK4 and results in 13 periods.\nMnn.\nInterest is compounded 12/n times a year based on a numberof months.\n-- Monthly compounding should be defined as M01 and will result in 12 periods.\n-- Bi-Monthly should be defined as M02 and will result in 6 periods.\n-- Quarterly should be defined as M03 and will result in 4 periods.\n-- Semi-Annual should be defined as M06 and will result in 6 periods.\n-- Annual should be defined as M12 and will result in 1 period.\n-- Bi-Annual should be defined as M24 and will result in 0.5 periods.\n-- Any number of months up to 99 may be defined and results in 12/n periods.\nTWMTH.\nInterest is compounded twice a month resulting in 24 periods as opposed to WEEK2.\nwhich results in 26 periods.\nNnnn.\n- Compounding takes place nnn times per year.\n"
                                        },
                                        "compoundYieldMethod": {
                                            "type": "string",
                                            "description": "This field indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate. System uses the below formula to calculate the interest amount,.\nDaily Effective Rate(ERd) = (1+Interest Rate)^(1/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\nWhen the field is set as NULL the effective rate is calculated based on the compounding frequency defined in the field COMPOUND.TYPE using the below formula,.\nDaily Effective Rate(ERd) = (1+Interest Rate/Compound Freq)^(Compound Freq/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\n"
                                        },
                                        "minIntAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field indicates the minimum interest amount to be posted for an arrangement/account.\nIf the calculated interest amount is less than the amount specified in this field, system will waive the interest amount or adjust the interest amount based on the option set in the field MIN.INT.WAIVE.\n"
                                        },
                                        "minIntWaive": {
                                            "type": "string",
                                            "description": "This field indicates if the calculated interest amount has to be waived or adjusted.\nIf the field is set to YES, then the system will waive the interest amount if it is less than the MIN.INT.AMOUNT specified.\nIf NULL value is set and if the calculated interest amount is less than the MIN.INT.AMOUNT specified, then system will post the minimum interest amount.\n"
                                        },
                                        "referLimit": {
                                            "type": "string",
                                            "description": "For an arrangement under ACCOUNTS Product Line, it is possible link the first tier amount of debit interest to the LIMIT record attached.\nIt can be achieved by setting the field REFER.LIMIT in INTEREST property condition as â€˜YESâ€™. This functionality can be enabled only if the LIMIT is managed by AA.\n"
                                        },
                                        "suppressAccrual": {
                                            "type": "string",
                                            "description": "The Field accepts the options 'YES' or 'ALTERNATE'.\nIndicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property.\nFor Example:.\nIt will be set as YES by the system if the DONOR.ACCRUAL field is set as SUPPRESS for any product / arrangement in INTEREST.COMPENSTION property of a Bundle arrangement.\nIf it is set as 'ALTERNATE' for a property then the Accrual will be suppressed for the property for which it is set and Accrual will happen for the Alternate property which is set in Activity Restriction.\nBlank value in this field denotes that there is no suppression of accrual.\nThis is a Non Mandatory field.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "penalinterest": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "interest": {
                                            "type": "array",
                                            "description": "",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "fixed": {
                                                        "type": "string",
                                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA fixed rate is directly entered by the user specifying the Defined Property and is not defined by an index table. Fixed rates are entered as positive numbers unless a negative rate is allowed.\nThis field is part of a multi value set of fields including FIXED.RATE, FLOATING.INDEX, PERIODIC.INDEX, PERIODIC.PERIOD, PERIODIC.BASE, MARGIN.TYPE, MARGIN.OPER, MARGIN.RATE, TIER.MIN.RATE, TIER.MAX.RATE, TIER.AMOUNT,TIER.PERCENT.\n"
                                                    },
                                                    "floating": {
                                                        "type": "string",
                                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA floating interest rate is tied to a variable base rate (i.e. BASIC.INTEREST). During interest calculation, T24 will use the currency specific rate applicable for the calculation date (i.e. the rate used for the calculation will change whenever the base rate is changed).\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "spread": {
                                                        "type": "string",
                                                        "description": "It would be possible to specify that the rate for a given tier be â€˜Linkedâ€™, by setting the field Linked Rate to Yes.\nThis can be mixed with normal rate calculations as well.\nWhere the Linked Rate is set to Yes, system would expect that an Arrangement reference in given in the â€˜Linked Arrangementâ€™ field along with the Interest property to be linked to.\n"
                                                    },
                                                    "minMaxRate": {
                                                        "type": "string",
                                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "maxRate": {
                                                        "type": "string",
                                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "effectiveRate": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "negativeRate": {
                                                        "type": "string",
                                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                                    },
                                                    "orPercent": {
                                                        "type": "number",
                                                        "description": "The tier percent relates to the field RATE.TIER.TYPE and percentages can be entered if BAND is selected.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. Either TIER.PERCENT or TIER.AMOUNT can be entered by not both. If TIER.PERCENT is defined, then the Sum of Tier percentage should be 100%.\n"
                                                    },
                                                    "margins": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "margin": {
                                                                    "type": "string",
                                                                    "description": "Identifies whether there are single or multiple margins.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                                },
                                                                "marginOperation": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "attributes": {
                                                        "type": "string",
                                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "description": "This field along with FIELD and OPERAND, helps the user to set the conditions for the Alert to be triggered. Holds the actual value of the field on which the criteria is based. If a value is provided at the event definition level, then that value is defaulted here. If not, the user can provide the value at the time of Subscribing.\nThe fields from FIELD to VALUE are displayed in this subscription screen only when INHERIT is set to Yes in the corresponding TEC.ITEMS record. These set of fields define the criteria for alerts.\n"
                                                    },
                                                    "linkedArrangement": {
                                                        "type": "string",
                                                        "description": "Where at least one tier is set to be Linked Rate, the Arrangement to be linked for calculating the Interest Rate, must be specified here (or automatically defaulted by the system, where a Limit is attached)\n"
                                                    },
                                                    "attribute": {
                                                        "type": "string",
                                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "periodicInterest": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "periodicIndex": {
                                                        "type": "string",
                                                        "description": "A periodic rate is tied to an index (e.g. LIBOR) which is dependent on a period of time (e.g. term) and possibly an amount. Once the arrangement is active, the rate is fixed until it is reset. Periodic rates can be reset at a pre-determined frequency.\nTo define a periodic rate, the user specifies:.\nPERIODIC.INTEREST index to use.\nPeriod (this will default to TERM if a Term Amount Property exists).\nInterest selection method if the term is not found on the index. The option currently available is INTERPOLATE.\nRate Reset period.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "periodicRate": {
                                                        "type": "string",
                                                        "description": "Indicates the rate on which the index runs on the date stated in the key. When a periodic index is used and the field is left blank, then system computes the rate from PERIODIC.INTEREST and defaults it here. When a rate is already present(say, the user changes the system computed rate), then system does not compute the new rate.\nValidation Rules:\nSystem defaulted and modifiable.\nStandard Rate field.\nValid only if Periodic index is stated.\n"
                                                    },
                                                    "periodicPeriodType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "periodicPeriod": {
                                                        "type": "string",
                                                        "description": "Defines the interest period to be used when linking to PERIODIC.INTEREST.(This will default to TERM if a Term Amount Property exists),. When a period is stated in Years or Weeks, they would be converted to Months and Days respectively and then located on the PI table.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "periodicMethod": {
                                                        "type": "string",
                                                        "description": "If system does not find a interest rate in the correct bucket of PERIODIC.INTEREST table, it automatically applies a method to arrive at a rate chosen by this method.\nValid method is:.\nINTERPOLATE - System automatically interpolates the rate. This is the DEFAULT option as well.\n"
                                                    },
                                                    "initialResetDate": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": ""
                                                    },
                                                    "periodicReset": {
                                                        "type": "string",
                                                        "description": "This indicates the reset period of the index stated. System would automatically reset the PERIODIC.RATE at the frequency stated in this field. Applicable only at Arrangement level. Periodic index may still be used without this field meaning, it never resets the computed rate.\nValidation rule:.\nValid PERIOD field.\n"
                                                    },
                                                    "effectiveRate": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "negativeRate": {
                                                        "type": "string",
                                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                                    },
                                                    "margins": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "marginType": {
                                                                    "type": "string",
                                                                    "description": "Identifies whether there are single or multiple margins\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                                },
                                                                "marginOperation": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "activites": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "onActivity": {
                                                        "type": "string",
                                                        "description": "When the periodic interest rate needs to be recalculated for certain activities, this field in combination with RECALCULATE may be used to setup the activity for which interest needs to be recalculated.\nValidation Rules:\n1. Applicable only for Periodic interest rate recalculation.\n2. Must be a valid activity in AA.ACTIVITY.\n"
                                                    },
                                                    "recalculate": {
                                                        "type": "string",
                                                        "description": "Related to ON.ACTIVITY activity, when flagged to RATE, system will recalculate Periodic rate when the activity setup in ON.ACTIVITY is processed. When the value is NOTHING periodic rate would not be recalculated when the activity setup in ON.ACTIVITY is processed.\nValidation Rules:\n1. Mandatory when ON.ACTIVITY is setup.\nThe fields ON.ACTIVITY and RECALCULATE in interest property class will be enhanced to allow user to define when to recalculate â€˜Profit Amountâ€™.\nAll activities which could result in payment schedule recalculation can be configured to recalculate â€˜Profit Amountâ€™ i.e., activities with payment schedule calculate and update action.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "references": {
                                            "type": "array",
                                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "customType": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    },
                                                    "customName": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    },
                                                    "customValue": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "tiers": {
                                            "type": "string",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n"
                                        },
                                        "linkedProperty": {
                                            "type": "string",
                                            "description": "This field will be used to specify the Interest Property of the Linked Arrangement that should be referred to, for getting the Interest Rate.\nWhere at least one tier is set to be â€˜Linked Rateâ€™, this must be specified.\n"
                                        },
                                        "dayBasis": {
                                            "type": "string",
                                            "description": "T24 can calculate interest based upon several different day basis types. Each T24 Interest Day Basis type is represented as a numerator and denominator.\nNumerator (interest days).\no 360 Each month is considered to have 30 days.\no 366 The exact number of days will be used.\nDenominator (days in the year).\no 360 Each year is considered to have 360 days.\no 365 Each year is considered to have 365 days.\no 366 The exact number of days in the year will be used (365 or 366).\nT24 allows the following interest day basis types:.\nType Notes.\nA (360/360) A1 and A2 are variations which alter the method of treating a month as 30 days.\nB (366/360).\nC (366/366).\nD (360/366).\nE (366/365).\nF (360/365) F1 and F2 are variations which alter the method of treating a month as 30 days.\nThis is a Mandatory field.\n"
                                        },
                                        "calcThreshold": {
                                            "type": "string",
                                            "description": "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated.\n"
                                        },
                                        "accrualRule": {
                                            "type": "string",
                                            "description": "When accruing interest,T24 must determine which amounts to include in each day's balance, the actual days to include in the period (e.g. first day, last day) and how to round any calculations.\nT24 allows users to define the calculation method to use, by specifying an accrual rule in EB.ACCRUAL.PARAM. Users can define the following:.\nFirst Day Inclusive (Yes/No).\nLast Day Inclusive (Yes/No).\nRounding Rule (Natural, Down, Up, Currency, None).\nIntermediate Calculation Rounding (Yes/No).\nCredit value date adjustment.\nDebit value date adjustment.\n"
                                        },
                                        "compounding": {
                                            "type": "string",
                                            "description": "T24 supports the compounding of both debit and credit interest.\nCompounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year. This field defines the number of compounding periods to be applied.\nNote that the compounding type provides a factor in the calculation only and does not actually cause the base principal amount to be actually increased by the calculated interest amount.\nThe following compound frequencies are supported:.\nDAILY.\nInterest is compounded 360/5/6 times a year (from days in year in INTEREST.BASIS).\nWEEKn.\nInterest is compounded 52/n times per year based on a number of WEEKS.\n-- Bi-weekly compounding should be defined as WEEK2 and will result in 26 periods.\n-- Four-Weekly compounding should be defined as WEEK4 and results in 13 periods.\nMnn.\nInterest is compounded 12/n times a year based on a numberof months.\n-- Monthly compounding should be defined as M01 and will result in 12 periods.\n-- Bi-Monthly should be defined as M02 and will result in 6 periods.\n-- Quarterly should be defined as M03 and will result in 4 periods.\n-- Semi-Annual should be defined as M06 and will result in 6 periods.\n-- Annual should be defined as M12 and will result in 1 period.\n-- Bi-Annual should be defined as M24 and will result in 0.5 periods.\n-- Any number of months up to 99 may be defined and results in 12/n periods.\nTWMTH.\nInterest is compounded twice a month resulting in 24 periods as opposed to WEEK2.\nwhich results in 26 periods.\nNnnn.\n- Compounding takes place nnn times per year.\n"
                                        },
                                        "compoundYieldMethod": {
                                            "type": "string",
                                            "description": "This field indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate. System uses the below formula to calculate the interest amount,.\nDaily Effective Rate(ERd) = (1+Interest Rate)^(1/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\nWhen the field is set as NULL the effective rate is calculated based on the compounding frequency defined in the field COMPOUND.TYPE using the below formula,.\nDaily Effective Rate(ERd) = (1+Interest Rate/Compound Freq)^(Compound Freq/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\n"
                                        },
                                        "minIntAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field indicates the minimum interest amount to be posted for an arrangement/account.\nIf the calculated interest amount is less than the amount specified in this field, system will waive the interest amount or adjust the interest amount based on the option set in the field MIN.INT.WAIVE.\n"
                                        },
                                        "minIntWaive": {
                                            "type": "string",
                                            "description": "This field indicates if the calculated interest amount has to be waived or adjusted.\nIf the field is set to YES, then the system will waive the interest amount if it is less than the MIN.INT.AMOUNT specified.\nIf NULL value is set and if the calculated interest amount is less than the MIN.INT.AMOUNT specified, then system will post the minimum interest amount.\n"
                                        },
                                        "referLimit": {
                                            "type": "string",
                                            "description": "For an arrangement under ACCOUNTS Product Line, it is possible link the first tier amount of debit interest to the LIMIT record attached.\nIt can be achieved by setting the field REFER.LIMIT in INTEREST property condition as â€˜YESâ€™. This functionality can be enabled only if the LIMIT is managed by AA.\n"
                                        },
                                        "suppressAccrual": {
                                            "type": "string",
                                            "description": "The Field accepts the options 'YES' or 'ALTERNATE'.\nIndicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property.\nFor Example:.\nIt will be set as YES by the system if the DONOR.ACCRUAL field is set as SUPPRESS for any product / arrangement in INTEREST.COMPENSTION property of a Bundle arrangement.\nIf it is set as 'ALTERNATE' for a property then the Accrual will be suppressed for the property for which it is set and Accrual will happen for the Alternate property which is set in Activity Restriction.\nBlank value in this field denotes that there is no suppression of accrual.\nThis is a Non Mandatory field.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "limit": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "limitReference": {
                                            "type": "string",
                                            "description": "If the Customer has a Credit Limit covering this Account, this field identifies the type of limit applicable to the Account and forms part of the key to the Limit record containing Credit Limit details. This field is also used to indicate Nostro Accounts.\nExcept for Nostro and Internal Accounts, this field is accessed by the Limits System whenever a debit transaction is processed for this Account.\nIf no Limit Reference is specified, an 'UNAUTHORISED OVERDRAFT' message is displayed and an Override is required before the transaction will be accepted.\nIf a Limit Reference is specified, the corresponding Limit record is checked (see below). If it covers the new Working Balance, the transaction is accepted, otherwise a message is displayed and an Override is required before the transaction will be accepted.\nThe key to the corresponding Limit record is built up as follows: cccccc.nnnnnnn.ss\nWhere 'cccccc' is the Liability number for the Customer in Field CUSTOMER of this record and 'nnnnnnn.ss' is the Limit Reference specified in this field.\n3-9 numeric characters consisting of a 3-7 digit Limit Reference Code and optionally, a 2 digit sequence number separated by '.' Or 'NOSTRO' to denote a Nostro Account (generated automatically by the system). (Optional input. No default.)\nThe Limit Reference Code (nnnnnnn) must be an existing code on the LIMIT.REF table.\nLimit Reference code must be a suitable one for Account records, as defined in the Limit Parameter table.\nThere must be a Limit record corresponding to the key built up as described above.\nError message is generated if single limit is set to 'Y' and one more accounts is attached to same limit (If single limit field is set to 'Y' then the limit can be utilised by one account. If multiple accounts are to utilise a single limit then, single limit field to be defined as 'N' for all such accounts.\n"
                                        },
                                        "expiryDate": {
                                            "type": "string",
                                            "format": "date",
                                            "description": "Specifies the date on which the Limit will expire. But if there are contracts against this limit,  then the limit will move to history only after the contracts mature. Any new drawings against this limit would raise overrides stating that the limit expires before the maturity date.\nWarning of the approach of this date is given on the Limits Approaching Expiry Date overnight report. The number of days prior to Expiry Date that the warning starts to appear is defined by the Expiries Reporting field on the LIMIT.PARAMETER table.\n6 to 11 type D (date) characters. (Defaults to a year from the current run     date.) The date input must be greater than or equal to the Limit Review Date\n"
                                        },
                                        "limitAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "The limit amount which is actually available for use.\nThe amount available under the limit, against which all system limit checks are performed. The value of the ONLINE LIMIT is calculated by the system as described below.\nIf the limit is an unsecured limit, a sub-limit or a secured but fixed limit, the value in this field is always equal to the value in field 21, MAXIMUM TOTAL.\nIf the limit is a variable secured limit, the value in this field is equal to the lower of (a) the MAXIMUM TOTAL or (b) the sum of the SECURED AMT's in field 24 plus the MAXIMUM UNSECURED in field 20.\nNote:      If time bands are in effect (field 25, TIME CODE), the            ONLINE LIMIT amount will reflect the split of the            available limit across these periods. In the case of an            unsecured limit, a sub-limit or a fixed secured limit,            this field will contain the same values as field 26, LIMIT            BAND.            In the case of a variable secured limit, this field will            contain either the same values as field 26, LIMIT BAND            or, if the total ONLINE LIMIT amount is lower than the            MAXIMUM TOTAL in field 21, the ONLINE LIMIT amount            apportioned pro-rata across the time bands in line with            the specified LIMIT BAND split.\n1 to 19 type AMT (standard amount format). (No input, system-generated field) Multivalue field associated with fields 25 to 45.\n"
                                        },
                                        "reviewFreq": {
                                            "type": "string",
                                            "description": "Specifies the next date on which the limit is to be reviewed. This field is mapped to LIMIT record linked to the Arrangement.\nValidation Rules:\nStandard T24 frequency code.\nThe first review date must not be later than the Limit EXPIRY.DATE.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "officers": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "schedule": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "payment": {
                                            "type": "array",
                                            "description": "payment",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "paymentType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "paymentMethod": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "paymentFrequency": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "billType": {
                                                        "type": "string",
                                                        "description": "Bill Type would be picked from EB.LOOKUP instead of the hard-coded values of PAYMENT, EXPECTED.\nHowever all the options would not be available for this field within PAYMENT.SCHEDULE.\nThe following values would not be available,.\n1.INFO.\n2.PR.CHARGE.\n3.ACT.CHARGE.\n4.DEF.CHARGE.\n5.DISBURSEMENT.\nOther user defined values may be given which then can be used in Overdue PC to define different aging rules for the BillType.\nWhen a user defined value is captured it would be assumed as PAYMENT type Bill, and not 'Expected' type bill.\nValidations:.\nâ€¢Standard lookup field.\nâ€¢Maximum number of characters is restricted to 15.\nâ€¢INFO, PR.CHARGE, ACT.CHARGE, DEF.CHARGE options not applicable for this field although it is part of the lookup values.\n"
                                                    },
                                                    "billProduced": {
                                                        "type": "string",
                                                        "description": "By default T24 will create the Bill on the due date, however for products which require a Bill notice to be sent in advance of the due date, it is possible for the user to enter the number of days prior. This will result in the due amounts being projected and recorded on the bill.\nNumber of working days prior to the due date when the bill needs to be produced is defined in the field BILL.PRODUCED.\n"
                                                    },
                                                    "autoSettle": {
                                                        "type": "string",
                                                        "description": "By default NULL. If set to NULL, indicates AUTO.SETTLE is not enabled.\n"
                                                    },
                                                    "property": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "propertyId": {
                                                                    "type": "string",
                                                                    "description": "Any alphanumeric character can be used to define the name of the property.\nMaximum of 15 characters are allowed.\n"
                                                                },
                                                                "dueFrequency": {
                                                                    "type": "string",
                                                                    "description": "Indicates the actual frequency when the payment needs to be made due. Due frequency is defined for each payment property under a payment type.\nPayment frequency is defaulted when due frequency is null.\nGenerally both payment and due frequency has same value. When multiple properties are defined for a given payment type, due frequency of one of the property can de different from the payment frequency.\nExample:.\na) M 01 31. M = Monthly. 01 = one monthly intervals. 31 = the last day of the month.\nb) M 03 31 M = Monthly. 03 = three monthly intervals. 31 = the last day of the month.\nc) M 01 10 M=Monthly, 01 = at monthly intervals10 = 10th of the month.\nd) 31 MAR 2006 W , where W= weekly. In this case, the first schedule would fall on 31March 2006.\ne) 31 Mar 2006 BSNSS, where BSNSS = every business day. In this case, the first schedule would fall on 31March 2006.\nStandard T24 Recurrence frequency field.\nInput prohibited for a date prior to the system date.\n"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "payments": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "percentage": {
                                                                    "type": "number",
                                                                    "description": "This field stores the Percentage of holdings to be redeemed/subscribed.This input is only recorded and not used for calculations.\nInput is allowed for SWITCH orders alone.\n"
                                                                },
                                                                "startDate": {
                                                                    "type": "string",
                                                                    "format": "date",
                                                                    "description": "Identifies the Date & Frequency of the Standalone DD for execution.\nThe claim value date is the date component of this field. Hence the date & the frequency has to be given after considering the Claim value date as given in DD.PARAMETER.\nThe date is cycled with the given frequency and this mandate reference is updated in DD.STANDALONE.FQU.LIST with the next execution date.\nWhenever the frequency is modified, then the underlying claim (DD.ITEM) is marked as 'DELETED' and new claim is raised for the given frequency. Incase the Claim is already sent(DD.ITEM status is 'CLAIMSENT'), then override is raised. However the DD.ITEM will not be marked as 'DELETED' as claim file is already generated.\nMandatory when STAND.ALONE.DDI set to Yes\nThis field is sub-divided into two elements: 1. Date 1-9 type D (date format in range 1950-2049) characters. 2. Optional Frequency 1-5 type SS (uppercase alpha or numeric, first character alpha) characters. (Mandatory input)\nThe date input or generated will correspond to the first execution of the Standalone DD.\nUsing the date & frequency in case given , DD.STANDALONE.FQU.LIST is updated with the next execution date.\nAn override will be required if the date input is a non-working day.\nDate entered should be greater than today and should not be more than Termination date.\n"
                                                                },
                                                                "endDate": {
                                                                    "type": "string",
                                                                    "format": "date",
                                                                    "description": ""
                                                                },
                                                                "numberPayments": {
                                                                    "type": "string",
                                                                    "description": "If a frequency has been specified the user can specify a Start Date or it can be defaulted from the Base Date. Additionally an End Date or a Number of Payments can be specified to indicate to T24 when the payments should terminate.\nThis field is part of a multi value set of fields with START.DATE, END.DATE and ACTUAL.AMT.\n"
                                                                },
                                                                "calcAmount": {
                                                                    "type": "number",
                                                                    "format": "int64",
                                                                    "description": "There can be two amounts for each payment definition; Calculated Amount and Actual Amount.\nA calculated amount is determined by T24 based upon the Payment Type and Properties involved.\nSystem maintained(NOINPUT) field.\n"
                                                                },
                                                                "actualAmount": {
                                                                    "type": "number",
                                                                    "format": "int64",
                                                                    "description": "There can be two amounts for each payment definition; Calculated Amount and Actual Amount. An actual amount can be entered by the user to override the calculated amount or manual payments. When adhoc payments are defined we need to define the actual anount for each payment date This field is part of a multi value set of fields with START.DATE, END.DATE and NUM.PAYMENTS.\nFor Disbursement Schedule(Account - Pay), the field is mandatory and sum of the future schedules should sum up to the CUR<Term Amount>.\nValidation Rules:\n1-9 numeric characters plus decimal point and commas.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "amortisationTerm": {
                                            "type": "string",
                                            "description": "If specific amount (residual amount) needs to be collected at the maturity date of the term, we can achieve this either by actually defining the residual amount or by defininng a amortisation term.\nThis field indicates the term for amortisation. The actual payment amount is calculated based on the amortisation term and not on the actual term defined in TERM.AMOUNT property of the arrangement. This calculated payment is then spread across actual term of the arrangement. If the amortisation term is greater than the actual term then we would be left with residual amount at the maturity date.\nAny residual amount must then be paid by the client on maturity of the arrangement. Input in this field is allowed only for Constant, linear payment types. The term can be entered as a number of Days (D), Weeks(W), Months(M) or Years(Y).\n"
                                        },
                                        "residualAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "If a specific amount needs to be collected on the final schedule date, that amount may be stated in this field. The amount stated in this field is 'Exclusive' of any scheduled calculated amount on the final schedule and is always considered to be belonging to ACCOUNT property.\nAs an illustration, if an Annuity Arrangement for 100000 is assumed and an amount of 20000 is stated as RESIDUAL.AMOUNT, the Annuity amount(CALC.AMOUNT) would be computed based on only 80000. If the Annuity amount is say 1500, on the final schedule date, system would make due 1500+20000 = 21500.\nThe residual amount would be recorded in bills under a special payment type called 'RESIDUAL.PRINCIPAL'.\nThe amount stated in this field would be automatically made due on PAYMENT.END.DATE.\nStandard T24 amount field in the arrangement currency.\n"
                                        },
                                        "billsCombined": {
                                            "type": "string",
                                            "description": "Indicates whether bills which have the same due date and are produced on the same date should be combined. In case of capitalisation (where we have two payment one is made due and other capitalised) even if bills combined set to YES, system would generate two separate bills. In another scenario where have one payment type to be made due and two payment types to be capitalised, then system would combine the those two payment types.\nInput allowed should be either YES or NO.\n"
                                        },
                                        "recalcFrequency": {
                                            "type": "string",
                                            "description": "If 'Nothing' is selected in field RECALCULATE, a recalculation frequency should be specified.\nExample:.\na) M 01 31. M = Monthly. 01 = one monthly intervals. 31 = the last day of the month.\nb) M 03 31 M = Monthly. 03 = three monthly intervals. 31 = the last day of the month.\nc) M 01 10 M=Monthly, 01 = at monthly intervals10 = 10th of the month.\nd) 31 MAR 2006 W , where W= weekly. In this case, the first schedule would fall on 31March 2006.\ne) 31 Mar 2006 BSNSS, where BSNSS = every business day. In this case, the first schedule would fall on 31March 2006.\nStandard date format.\nMust be a valid date.\nAn override will be required if the date is not defined on the HOLIDAY table.\nAn override will be required if the date as defined on the HOLIDAY table is a non working day.\nInput prohibited for a date prior to the system date.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "restriction": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "rules": {
                                            "type": "array",
                                            "description": "",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "ruleName": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "periodicAttribute": {
                                                        "type": "string",
                                                        "description": "Contains the effective date of the property condition Not applicable at product level System updated field no input allowed.\n"
                                                    },
                                                    "balanceType": {
                                                        "type": "string",
                                                        "description": "Balance Type ID\n20 alpha numeric.\n"
                                                    },
                                                    "periodicValue": {
                                                        "type": "string",
                                                        "description": "This is the actual rule value, which will be compared against the evaluated rule value.\nAllowed Values:.\nInput must be a valid data type defined in the corresponding AA.PERIODIC.ATTRIBUTE.CLASS record.\n"
                                                    },
                                                    "activities": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "activityClassId": {
                                                                    "type": "string",
                                                                    "description": "This field denotes the id of the activity class record.\nActivities are performed on either the entire Arrangement (Ex. New Arrangement) or on a specific Property (like Change Principal Interest). Since Properties are user-defined, Temenos has specified the composition of each Activity as an Activity Class which targets either a Property Class or the entire Arrangement.\n"
                                                                },
                                                                "activityId": {
                                                                    "type": "string",
                                                                    "description": ""
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "closure": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "changeProduct": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "changelPeriod": {
                                            "type": "string",
                                            "description": "The user can define a Product for the arrangement to change to after a period of time (e.g. 6 months) or on a specific date. A period (say 6M, 12M) may be stated in this field. The arrangement start date would be considered as the base date for computing the period. For subsequent.\nchange product events, the last change product date is considered as base date and not the arrangement start date.\nValidation rule:.\nValid PERIOD field.\nMaximum of 4 characters.\n"
                                        },
                                        "changeActivity": {
                                            "type": "string",
                                            "description": "This Field will determine which Activity will be trigger during Loan Renewal.\nMandatory if RENEWAL.DATE is used. Options:.\nROLLOVER.\nRESET.\nCHANGE.PRODUCT.\n"
                                        },
                                        "productId": {
                                            "type": "string",
                                            "description": "This field denotes product of the arrangement contract. The characteristics of the arrangement is derived from the Product to which it is linked to.\nAn arrangement product and arrangement contract is a series of properties (AA.PROPERTY) relating to different components (AA.PROPERTY.CLASS). Each product has a set of mandatory components and optional components.\nIt is possible to change the product of the arrangement during its life-cycle subject to certain restrictions. For each product change this field is updated along with the effective date of change.\n"
                                        },
                                        "changeDate": {
                                            "type": "string",
                                            "format": "date",
                                            "description": "This field indicates the date on which the arrangement would change from a existing product to a new product.\nBoth date and period are not allowed together. System would ignore the DATE.CONVENTION stated.\nValidation rule:.\nMust be a valid Date.\nMaximum of 11 Alphanumeric characters allowed.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "nonrestax": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "restax": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "balanceAvailability": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "periodiccharges": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "accountsPaymentRules": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "accountsPayout": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "settlement": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "linkedAccounts": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "linkedAccountType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "linkedAccount": {
                                                        "type": "string",
                                                        "description": ""
                                                    }
                                                }
                                            }
                                        },
                                        "payin": {
                                            "type": "array",
                                            "description": "When PAYIN.ACCOUNT used is an Arrangement Account, then an activity has to be specified to debit that arrangement as well. That activity need to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Debit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYIN.ACCOUNT Required only if the PAYIN.ACCOUNT is an AA Account.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "payinSettlement": {
                                                        "type": "string",
                                                        "description": "The field may be used as a switch to turn off the Settlement instruction temporarily without having the need to clear or delete the field contents. If the field is set to NO, then it means the instructions are not active. Validation Rules: Valid input is Yes or No. Default value is Yes.\n"
                                                    },
                                                    "paymentTypes": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "paymentTypeAccount": {
                                                                    "type": "string",
                                                                    "description": "Payment types for the AA contract that require settlement by DD to be defined.\nValid payment type from AA.PAYMENT.TYPE.\n"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "payinActivity": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "mandateReference": {
                                                                    "type": "string",
                                                                    "format": "date",
                                                                    "description": "The DD mandate to be used if the settlement method is DD. The DD number must be the account of the arrangement.\nShould be a valid Mandate Ref from DD.DDI.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "settlement": {
                                            "type": "array",
                                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "payinAccount": {
                                                        "type": "string",
                                                        "description": "Contains the Account number from where funds are to be debited and Credited against this payment type. Multiple accounts could be defined here and the rules of funding is governed by the PAYIN.AC.DB.RULE field. Validation Rules: Should be a valid T24 ACCOUNT Number.\n"
                                                    },
                                                    "paymentType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "reference": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "payinActivity": {
                                                                    "type": "string",
                                                                    "description": "When PAYIN.ACCOUNT used is an Arrangement Account, then an activity has to be specified to debit that arrangement as well. That activity need to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Debit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYIN.ACCOUNT Required only if the PAYIN.ACCOUNT is an AA Account.\n"
                                                                },
                                                                "payinDbRule": {
                                                                    "type": "string",
                                                                    "description": "The field decides the manner in which system should utilise the funds available in PAYIN.ACCOUNT during settlement process. 1) FULL: System debits the PAYIN account to the extent of the bill amount irrespective of whether or not the funds are avaliable in the specified account. For this purpose, system creates an overdraft in the PAYIN.ACCOUNT in case funds are only partially available provided the PAYIN.ACCOUNT has a limit attached to it. 2) PARTIAL: System debits the PAYIN.ACCOUNT only to the extent of funds availabe. 3) NONE: System would not debit the PAYIN.ACCOUNT if funds are not fully available to settle the bill.\n"
                                                                },
                                                                "payinSettleActivity": {
                                                                    "type": "string",
                                                                    "description": "Activity to be used to settle the Dues of the current Arrangement. Typically this would be a APPLYPAYMENT activity. User activity may also be stated in this field. Validation Rules: Should be a valid record in AA.ACTIVITY.\n"
                                                                },
                                                                "payinRcType": {
                                                                    "type": "string",
                                                                    "description": "Defines the RC.TYPE reference to be used during handoff to inform the recycler what type of transaction is being handed-off.\nValidation Rules:\nShould be a valid entry in RC.TYPE.\nValid only if PAYIN.TXN.TYPE is defined.\n"
                                                                },
                                                                "payinRcCondition": {
                                                                    "type": "string",
                                                                    "description": "Defines the RC.CONDITION to be used for the payment type to allow variation of different retry conditions.\nValidation Rules:\nShould be a valid entry in RC.CONDITION.\nValid only if PAYIN.TXN.TYPE is defined.\n"
                                                                },
                                                                "transactionType": {
                                                                    "type": "string",
                                                                    "description": "Indicates whether the Customer is placing an order to buy or sell.\nThe transaction code is user defined for convenience and adaptability to cover all eventualities within theSecuritys Module From Coupon Payments to Redemptions and Capital Increase Type updates. Within the Open Orderapplication it is suggested that the same codes as for the Sec.Trade application i.e. For A purchase of securitiesSPR and for a Sale SSL be used.\n1-3 type S (uppercase alpha) character Sc.Trans.Name. (Mandatory Input.)\nMust be a valid code on the SC.TRANS.NAME file.\n"
                                                                },
                                                                "nominatedAmount": {
                                                                    "type": "number",
                                                                    "format": "int64",
                                                                    "description": ""
                                                                },
                                                                "additionalAmount": {
                                                                    "type": "number",
                                                                    "format": "int64",
                                                                    "description": ""
                                                                },
                                                                "excludeProperties": {
                                                                    "type": "string",
                                                                    "description": ""
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "payout": {
                                            "type": "array",
                                            "description": "When PAYOUT.ACCOUNT used is an Arrangement Account, then an activity has to be specified to Credit the Account arrangement as well. That activity needs to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Credit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYOUT.ACCOUNT Required only if the PAYOUT.ACCOUNT is an AA Account.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "payoutSettlement": {
                                                        "type": "string",
                                                        "description": "The field may be used as a switch to turn off the Settlement instruction temporarily without having the need to clear or delete the field contents. If the field is set to NO, then it means the instructions are not active. Validation Rules: Valid input is Yes or No. Default value is Yes.\n"
                                                    },
                                                    "payoutSettleActivity": {
                                                        "type": "string",
                                                        "description": "Contains the PROPERTY based on which the Payout settlement instruction would be processed. This definition allows users to configure multiple payouts happening to multiple accounts. For example, user can configure Current Interest to be paid out to one account, whilst the Maturity deposit amount may be credited to another account. Validation Rules: Should be a valid record in AA.PROPERTY.\n"
                                                    },
                                                    "propertyClasses": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "payoutPropertyClass": {
                                                                    "type": "string",
                                                                    "description": "Contains the PROPERTY CLASS based on which the Payout settlement instruction would be processed. This definition allows users to configure multiple payouts happening to multiple accounts. For example, user can configure Interest to be paid out to one account, whilst the Maturity deposit amount to be credited to another account. Validation Rules: Should be a valid record in AA.PROPERTY.CLASS.\n"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "properties": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "payoutProperty": {
                                                                    "type": "string",
                                                                    "description": "Contains the PROPERTY based on which the Payout settlement instruction would be processed. This definition allows users to configure multiple payouts happening to multiple accounts. For example, user can configure Current Interest to be paid out to one account, whilst the Maturity deposit amount may be credited to another account. Validation Rules: Should be a valid record in AA.PROPERTY.\n"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "payoutActivity": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "payoutAccount": {
                                                                    "type": "string",
                                                                    "description": "Contains the Account to which funds are to be credited from this Arrangement. Validation Rules: Should be a valid T24 ACCOUNT Number.\n"
                                                                },
                                                                "payoutBeneficiary": {
                                                                    "type": "string",
                                                                    "description": "This field is a link to the core BENEFICIARY table and is used to define who is the ultimate beneficiary of the funds.\nWhen configured a PAYMENT.ORDER will be generated and the routing will be decided via the PAYMENT.ORDER.PARAMETER.\nBased on the setting in PAYMENT.ORDER.PARAMETER either a FUNDS.TRANSFER or TPH message will be produced.\nAlong with values from the PAYMENT.ORDER.PRODUCT record the BENEFICIARY record is mapped through to the PAYMENT.ORDER application and then mapped through to FUNDS.TRANSFER or TPH.\nCurrent functionality also allows for a T24 account to be defined in the Beneficiary record which will be credited.\no Optional field.\no Mutually exclusive with PAYOUT.ACCOUNT.\no Is used in conjunction with PAYOUT.PO.PRODUCT.\no Drills down to the BENEFICIARY table.\n"
                                                                },
                                                                "payoutPoProduct": {
                                                                    "type": "string",
                                                                    "description": "This field is linked to the PAYMENT.ORDER.PRODUCT table and its value is passed through to the PAYMENT.ORDER application.\nIts main purpose will be to control parameters for TPH processing and pass outgoing messages parameters.\no Optional field.\no Is used in conjunction with PAYOUT.BENEFICIARY.\no Drills down to the PAYMENT.ORDER.PRODUCT table.\n"
                                                                },
                                                                "payoutPercentage": {
                                                                    "type": "number",
                                                                    "description": "Will allow the ability to define only a percentage value.\nThe system will cascade 'from top-to bottom' down the multiple fields taking the percentages in order (a blank field will be considered for processing last).\nThe percentage defined is the % portion of the Billed amount, which will be settled from the respective account.\nThe total percentages may not exceed 100%, The total percentages may not total 100%.\nIn the case of any rounding issues the last account will be deemed as the account to process any required adjustments.\nA blank field can be defined at last, In this case the remainder of the bill will be settled from this account.\n"
                                                                },
                                                                "payoutAmount": {
                                                                    "type": "number",
                                                                    "format": "int64",
                                                                    "description": "Will allow the ability to define only a fixed value.\nThe system will cascade 'from top-to bottom' down the multiple fields taking the amounts defined in order (a blank field will be considered for processing last).\nWhen a bill is generated to be collected the individual amounts or total amounts defined may exceed the billed amount.\nIn this case the amount defined is classed as an 'up-to' amount. This is the maximum that can be taken and will honour the ACCOUNT.DEBIT.RULE field.\nTo satisfy the bill a lesser amount can also be taken.\nWhen a bill is generated to be collected the individual amounts or total amounts defined may not satisfy the billed amount.\nThe amount defined will be the amount to be taken.\nIn this case any remainder of the bill will be made due.\n"
                                                                },
                                                                "payoutActivity": {
                                                                    "type": "string",
                                                                    "description": "When PAYOUT.ACCOUNT used is an Arrangement Account, then an activity has to be specified to Credit the Account arrangement as well. That activity needs to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Credit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYOUT.ACCOUNT Required only if the PAYOUT.ACCOUNT is an AA Account.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "retryDays": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "defaultSettlementAccount": {
                                            "type": "string",
                                            "description": "An account specified here will be used as the settlement account for all PAYIN or PAYOUT entries which do not have a Settlement Account, Beneficiary or DD Mandate Reference defined.\nInput in this field is optional. Must be a valid account.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "alerts": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "constraint": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "maintainfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "documentfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "newarrfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "judoloanvarfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "ddrejectfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "dischargefee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "rtgsfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "sundryfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "locservfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "locextfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "mandatefee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "agent": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "agents": {
                                            "type": "array",
                                            "description": "",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "agentId": {
                                                        "type": "string",
                                                        "description": "Holds the agent ID from CUSTOMER table.\n"
                                                    },
                                                    "agentArrangementId": {
                                                        "type": "string",
                                                        "description": "Hold the agentâ€™s arrangement ID, based on which commissions have to be calculated. Should be a valid AA.ARRANGEMENT (AGENT LINE).\n"
                                                    },
                                                    "agentRole": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "events": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "fixedAmount": {
                                                                    "type": "number",
                                                                    "format": "int64",
                                                                    "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                                                },
                                                                "marginOperand": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                },
                                                                "marginPercent": {
                                                                    "type": "number",
                                                                    "description": "Defines a percentage is applied over the default commission amount, to calculate the final commission for a financial arrangement. Is used in conjunction with MARGIN.OPERAND.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "createLocSimErrorResponse": {
            "properties": {
                "header": {
                    "$ref": "#/definitions/ArrangementHeader"
                },
                "body": {
                    "$ref": "#/definitions/createLocSimErrorResponseBody"
                }
            },
            "description": "createLocSimErrorResponse"
        },
        "createLocSimErrorResponseBody": {
            "type": "object",
            "properties": {
                "errorDetails": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "fieldName": {
                                "type": "string"
                            },
                            "property": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            },
                            "code": {
                                "type": "string"
                            }
                        }
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "QueryHeader": {
            "properties": {
                "audit": {
                    "type": "object",
                    "properties": {
                        "T24_time": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "parse_time": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "page_size": {
                    "type": "integer",
                    "format": "int32"
                },
                "page_start": {
                    "type": "integer",
                    "format": "int32"
                },
                "total_size": {
                    "type": "integer",
                    "format": "int32"
                },
                "page_token": {
                    "type": "string"
                }
            }
        },
        "getPaymentScheduleResponse": {
            "properties": {
                "header": {
                    "$ref": "#/definitions/QueryHeader"
                },
                "body": {
                    "$ref": "#/definitions/getPaymentScheduleResponseBody"
                }
            },
            "description": "getPaymentScheduleResponse"
        },
        "getPaymentScheduleResponseBody": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "Date": {
                        "type": "string",
                        "description": "Mandatory input.\nA maximum of 44 characters may be entered.\n",
                        "maxLength": 11
                    },
                    "DeferDate": {
                        "type": "string",
                        "description": "",
                        "maxLength": 11
                    },
                    "TotalDue": {
                        "type": "number",
                        "format": "int64",
                        "description": ""
                    },
                    "TotalCap": {
                        "type": "number",
                        "format": "int64",
                        "description": ""
                    },
                    "Principal": {
                        "type": "number",
                        "format": "int64",
                        "description": ""
                    },
                    "Interest": {
                        "type": "number",
                        "format": "int64",
                        "description": ""
                    },
                    "Charge": {
                        "type": "number",
                        "format": "int64",
                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                    },
                    "Tax": {
                        "type": "number",
                        "format": "int64",
                        "description": ""
                    },
                    "TotalPymt": {
                        "type": "number",
                        "format": "int64",
                        "description": ""
                    },
                    "Outstanding": {
                        "type": "number",
                        "format": "int64",
                        "description": ""
                    }
                }
            }
        },
        "ErrorHeader": {
            "properties": {
                "audit": {
                    "type": "object",
                    "properties": {
                        "T24_time": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "parse_time": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            }
        },
        "getPaymentScheduleErrorResponse": {
            "properties": {
                "header": {
                    "$ref": "#/definitions/ErrorHeader"
                },
                "error": {
                    "$ref": "#/definitions/getPaymentScheduleErrorResponseBody"
                }
            },
            "description": "getPaymentScheduleErrorResponse"
        },
        "getPaymentScheduleErrorResponseBody": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "createHLSim": {
            "properties": {
                "header": {
                    "$ref": "#/definitions/PayloadHeader"
                },
                "body": {
                    "$ref": "#/definitions/createHLSimBody"
                }
            },
            "description": "createHLSim"
        },
        "createHLSimBody": {
            "type": "object",
            "properties": {
                "parties": {
                    "type": "array",
                    "description": "",
                    "items": {
                        "type": "object",
                        "properties": {
                            "partyId": {
                                "type": "string",
                                "description": "This field denotes the customer(s) of the Arrangement contract.\nThis field is required to be input for new arrangement, takeover, and Change primary customer activities.\nAssociated multi-value with CUSTOMER.ROLE field.\nValidation Rules:\n1 -6 numeric character customer number. or 3 - 10 alphanumeric character customer mnemonic. (mandatory input).\nMust be either a valid customer number or customer mnemonic of a customer on the CUSTOMER file.\n"
                            },
                            "partyRole": {
                                "type": "string",
                                "description": "Associated with CUSTOMER field. Denotes the role of the customer in the Arrangement.\nValidation Rules:\nMandatory input. If not input by the user, defaulted with the system created role 'Owner'.\nMust be a valid record in AA.CUSTOMER.ROLE table.\n"
                            }
                        }
                    }
                },
                "agents": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "agentId": {
                                "type": "string",
                                "description": "Holds the agent ID from CUSTOMER table.\n"
                            },
                            "agentArrangementId": {
                                "type": "string",
                                "description": "Hold the agentâ€™s arrangement ID, based on which commissions have to be calculated. Should be a valid AA.ARRANGEMENT (AGENT LINE).\n"
                            },
                            "agentRole": {
                                "type": "string",
                                "description": ""
                            }
                        }
                    }
                },
                "arrangmentId": {
                    "type": "string",
                    "description": "Unique identification number for the arrangement contract. The format of the ID is as follows.\nAA YYDDD xxxxx.\nwhere: AA - Arrangement Architecture module identifier, YYDDD - Year and date of input in julian date format, xxxxx - Is a system generated unique identifier.\nFor 'New Arrangement' activity this field should be input as 'NEW' and will be updated by the system while processing the activity with the unique reference number.\nWhen attempting an activity for a existing arrangement and the arrangement has generated a underlying ACCOUNT record, then the ACCOUNT id may be used as an alternate id.\nValidation Rules:\nMust be 'NEW' or an existing Arrangement ID.\n"
                },
                "productId": {
                    "type": "string",
                    "description": "This field denotes product of the arrangement contract. The characteristics of the arrangement is derived from the Product to which it is linked to.\nAn arrangement product and arrangement contract is a series of properties (AA.PROPERTY) relating to different components (AA.PROPERTY.CLASS). Each product has a set of mandatory components and optional components.\nIt is possible to change the product of the arrangement during its life-cycle subject to certain restrictions. For each product change this field is updated along with the effective date of change.\n"
                },
                "variation": {
                    "type": "string",
                    "description": "The field specifies the variation of the product that the arrangement is running. When selecting a product from the catalogue, entering the customer number and validating, AA will automatically choose the correct variation based upon the eligibility rules and priority specified. If a user manually specified the variation, eligibility will still be checked and if the user is not eligible but the rules are configured to raise an override, the user can choose to accept the override.\n"
                },
                "currency": {
                    "type": "string",
                    "description": "The SWIFT Currency Code for the entry. The Currency of the Account in Field 1.  Not used in Entries over local currency Accounts.\n3 type S (upper-case alpha or numeric) characters Currency Code, or blank. (Internal file, no input.)\n"
                },
                "pricing": {
                    "type": "string",
                    "description": "Method used to assign a Relationship Pricing Arrangement(s) to the financial arrangement.\nAutomatic (or blank) â€“ The conditions in the productâ€™s Pricing Rules property will determine the pricing plan to apply. This option is valid if the Pricing Rules are set to 'Automatic' or 'Automatic or Manual'.\nManual â€“ The user will manually assign a plan with the following field. This option is valid if the Pricing Rules are set to 'Manual' or 'Automatic or Manual'.\nNo Pricing â€“ No plan will be applied.\nNone â€“ No plan will be applied.\nThis is an optional field.\nShould be either AUTOMATIC, MANUAL or NO.PRICING or NONE.\n"
                },
                "pricingPlan": {
                    "type": "string",
                    "description": "If 'Automatic' is specified in PRICING.SELECTION field, then AA will determine the best plan and populate this field with the Plan Product ID. If 'Manual' is selected the user must enter the Plan Product ID. AA will validate to ensure that a valid Relationship Pricing Arrangement exists for the customer. This Plan ID/Variation will also be stored in AA.ARRANGEMENT.\n"
                },
                "rewardsArrangementId": {
                    "type": "string",
                    "description": "Hold the Rewardsâ€™s arrangement ID, based on which rewards have to be calculated. Should be a valid AA.ARRANGEMENT (REWARDS LINE).\n"
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Standard date field, which is the trade date of the contract. Can be input during NEW/ROLLOVER/CHANGE.PRODUCT activities, amendment during other activities would cause error.\nValidations\n1. A date field type only.\n2. Initially defaulted to the effective date, if it is a forward dated activity then the current system date will be defaulted.\n3. Can be changed but must be equal to or less than the current system date.\n4. A back dated date is acceptable but must be within the parameters of the Product Proofing.\n5. Cannot have a date that is greater than the existing field EFFECTIVE.DATE in AA.ARRANGEMENT.ACTIVITY.\n"
                },
                "activityId": {
                    "type": "string",
                    "description": ""
                },
                "effectiveDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Effective date of the Activity to be processed. This is always required for processing any activity.\nStandard date field.\n"
                },
                "reason": {
                    "type": "string",
                    "description": "A text field to store the reason behind performing the current activity. For example, if the rate is manually revised or product changed or redeemed(and not restricted to the above activities alone), a user may record a reason for performing such activity for future verification and audit.\n"
                },
                "activityCharges": {
                    "type": "object",
                    "properties": {
                        "activities": {
                            "type": "array",
                            "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "activityId": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "charges": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "chargePropertyId": {
                                                    "type": "string",
                                                    "description": "This field indicates the charge that would be collected when the corresponding activity is triggered. This field is associated with the ACTIVITY.ID field. The charge defined will correspond to the CHARGE property. These properties and their conditions would be defined in the product designer of an product.\nValidation rule.\nShould be a valid AA.PROPERTY belonging to the CHARGE property class.\n"
                                                },
                                                "appplicationPeriod": {
                                                    "type": "string",
                                                    "description": "This will have to accept a valid T24 period.This Field will denote the application period for current aplication Method.\n"
                                                },
                                                "applicationMethod": {
                                                    "type": "string",
                                                    "description": "This will hold three values either DUE or CAPITALISE or DEFER.This Field denote which application method(DUE or CAPITALISE or DEFER)should be taken while applying activity charges.\n",
                                                    "enum": [
                                                        "DUE",
                                                        "CAPITALISE",
                                                        "DEFER"
                                                    ]
                                                },
                                                "chargeAutoSettle": {
                                                    "type": "string",
                                                    "description": "This field aids turning off the automatic settlement for the corresponding charge property. If the field is set as â€˜Yesâ€™ settlement processing will be done for the assocaited charge property when settlement property class is configured for â€˜Chargeâ€™ payment type.\nAllowed Values:.\nâ€˜Yesâ€™ or â€˜Noâ€™.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "settleActivity": {
                            "type": "string",
                            "description": "Defines the repayment activity to be triggered when there is unallocated credit. Triggered as secondary activity of Activity charge make due.\n"
                        }
                    }
                },
                "changeProduct": {
                    "type": "object",
                    "properties": {
                        "changelPeriod": {
                            "type": "string",
                            "description": "The user can define a Product for the arrangement to change to after a period of time (e.g. 6 months) or on a specific date. A period (say 6M, 12M) may be stated in this field. The arrangement start date would be considered as the base date for computing the period. For subsequent.\nchange product events, the last change product date is considered as base date and not the arrangement start date.\nValidation rule:.\nValid PERIOD field.\nMaximum of 4 characters.\n"
                        },
                        "changeActivity": {
                            "type": "string",
                            "description": "This Field will determine which Activity will be trigger during Loan Renewal.\nMandatory if RENEWAL.DATE is used. Options:.\nROLLOVER.\nRESET.\nCHANGE.PRODUCT.\n"
                        },
                        "productId": {
                            "type": "string",
                            "description": "This field denotes product of the arrangement contract. The characteristics of the arrangement is derived from the Product to which it is linked to.\nAn arrangement product and arrangement contract is a series of properties (AA.PROPERTY) relating to different components (AA.PROPERTY.CLASS). Each product has a set of mandatory components and optional components.\nIt is possible to change the product of the arrangement during its life-cycle subject to certain restrictions. For each product change this field is updated along with the effective date of change.\n"
                        },
                        "changeDate": {
                            "type": "string",
                            "format": "date",
                            "description": "This field indicates the date on which the arrangement would change from a existing product to a new product.\nBoth date and period are not allowed together. System would ignore the DATE.CONVENTION stated.\nValidation rule:.\nMust be a valid Date.\nMaximum of 11 Alphanumeric characters allowed.\n"
                        }
                    }
                },
                "documentfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "preclosurefee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "newarrfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "judoloanvarfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "ddrejectfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "dischargefee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "rtgsfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "sundryfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "mandatefee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "customer": {
                    "type": "object",
                    "properties": {
                        "customers": {
                            "type": "array",
                            "description": "This field denotes the customer(s) of the Arrangement contract.\nThis field is required to be input for new arrangement, takeover, and Change primary customer activities.\nAssociated multi-value with CUSTOMER.ROLE field.\n1 -6 numeric character customer number. or 3 - 10 alphanumeric character customer mnemonic. (mandatory input)\nMust be either a valid customer number or customer mnemonic of a customer on the CUSTOMER file.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "partyId": {
                                        "type": "string",
                                        "description": "This field denotes the customer(s) of the Arrangement contract.\nThis field is required to be input for new arrangement, takeover, and Change primary customer activities.\nAssociated multi-value with CUSTOMER.ROLE field.\nValidation Rules:\n1 -6 numeric character customer number. or 3 - 10 alphanumeric character customer mnemonic. (mandatory input).\nMust be either a valid customer number or customer mnemonic of a customer on the CUSTOMER file.\n"
                                    },
                                    "partyRole": {
                                        "type": "string",
                                        "description": "Associated with CUSTOMER field. Denotes the role of the customer in the Arrangement.\nValidation Rules:\nMandatory input. If not input by the user, defaulted with the system created role 'Owner'.\nMust be a valid record in AA.CUSTOMER.ROLE table.\n"
                                    },
                                    "taxLiabilityPercentage": {
                                        "type": "number",
                                        "description": "This field indicates the ownership percentage of the customer in the arrangement with respect to tax liability. Based on the percentage defined for each customer, income will be split and tax will be calculated using the respective tax percentage of each customer and the income split.\nExample:.\nCustomer 1 - 50%.\nCustomer 2 - 50%.\nInterest capitalization amount: $1000.\nTax percentage for customer 1 is 10% and for customer 2 is 0% (since the customer is minor).\nNow the Tax will be calculated by applying 10% on $500 and 0% on $ 500. So the net tax amount will be $50 for which tax accounting will be raised.\nAssociated with CUSTOMER field.\nValidation Rules:\n* Must be equal or less than 100%.\n* Sum of the percentage cannot be more than 100%.\n"
                                    },
                                    "limitAllocactionPercentage": {
                                        "type": "number",
                                        "description": "This field indicates the ownership percentage of the customer in the arrangement with respect to limit liability. Limit will be checked for the customer for whom this field is defined.\nAssociated with CUSTOMER field.\nValidation Rules:\nMust be equal to 100% and definition can be done only for one customer who is also the limit customer.\nSum of the percentage cannot be more than 100%.\n"
                                    },
                                    "GLAllocactionPercentage": {
                                        "type": "number",
                                        "description": "This field indicates the ownership percentage of the customer in the arrangement with respect to GL reporting. Customer in the associated field will be used for balance sheet reporting purposes.\nAssociated with CUSTOMER field.\nValidation Rules:\nMust be equal to 100% and definition can be done only for one customer who is also the limit customer.\nSum of the percentage cannot be more than 100%.\n"
                                    }
                                }
                            }
                        },
                        "jointLiability": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "principaldrint": {
                    "type": "object",
                    "properties": {
                        "interest": {
                            "type": "array",
                            "description": "",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "fixed": {
                                        "type": "string",
                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA fixed rate is directly entered by the user specifying the Defined Property and is not defined by an index table. Fixed rates are entered as positive numbers unless a negative rate is allowed.\nThis field is part of a multi value set of fields including FIXED.RATE, FLOATING.INDEX, PERIODIC.INDEX, PERIODIC.PERIOD, PERIODIC.BASE, MARGIN.TYPE, MARGIN.OPER, MARGIN.RATE, TIER.MIN.RATE, TIER.MAX.RATE, TIER.AMOUNT,TIER.PERCENT.\n"
                                    },
                                    "floating": {
                                        "type": "string",
                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA floating interest rate is tied to a variable base rate (i.e. BASIC.INTEREST). During interest calculation, T24 will use the currency specific rate applicable for the calculation date (i.e. the rate used for the calculation will change whenever the base rate is changed).\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "spread": {
                                        "type": "string",
                                        "description": "It would be possible to specify that the rate for a given tier be â€˜Linkedâ€™, by setting the field Linked Rate to Yes.\nThis can be mixed with normal rate calculations as well.\nWhere the Linked Rate is set to Yes, system would expect that an Arrangement reference in given in the â€˜Linked Arrangementâ€™ field along with the Interest property to be linked to.\n"
                                    },
                                    "minMaxRate": {
                                        "type": "string",
                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "maxRate": {
                                        "type": "string",
                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "effectiveRate": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "negativeRate": {
                                        "type": "string",
                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                    },
                                    "orPercent": {
                                        "type": "number",
                                        "description": "The tier percent relates to the field RATE.TIER.TYPE and percentages can be entered if BAND is selected.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. Either TIER.PERCENT or TIER.AMOUNT can be entered by not both. If TIER.PERCENT is defined, then the Sum of Tier percentage should be 100%.\n"
                                    },
                                    "margins": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "margin": {
                                                    "type": "string",
                                                    "description": "Identifies whether there are single or multiple margins.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                },
                                                "marginOperation": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "attributes": {
                            "type": "array",
                            "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "attributes": {
                                        "type": "string",
                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "This field along with FIELD and OPERAND, helps the user to set the conditions for the Alert to be triggered. Holds the actual value of the field on which the criteria is based. If a value is provided at the event definition level, then that value is defaulted here. If not, the user can provide the value at the time of Subscribing.\nThe fields from FIELD to VALUE are displayed in this subscription screen only when INHERIT is set to Yes in the corresponding TEC.ITEMS record. These set of fields define the criteria for alerts.\n"
                                    },
                                    "linkedArrangement": {
                                        "type": "string",
                                        "description": "Where at least one tier is set to be Linked Rate, the Arrangement to be linked for calculating the Interest Rate, must be specified here (or automatically defaulted by the system, where a Limit is attached)\n"
                                    },
                                    "attribute": {
                                        "type": "string",
                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                    }
                                }
                            }
                        },
                        "periodicInterest": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "periodicIndex": {
                                        "type": "string",
                                        "description": "A periodic rate is tied to an index (e.g. LIBOR) which is dependent on a period of time (e.g. term) and possibly an amount. Once the arrangement is active, the rate is fixed until it is reset. Periodic rates can be reset at a pre-determined frequency.\nTo define a periodic rate, the user specifies:.\nPERIODIC.INTEREST index to use.\nPeriod (this will default to TERM if a Term Amount Property exists).\nInterest selection method if the term is not found on the index. The option currently available is INTERPOLATE.\nRate Reset period.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "periodicRate": {
                                        "type": "string",
                                        "description": "Indicates the rate on which the index runs on the date stated in the key. When a periodic index is used and the field is left blank, then system computes the rate from PERIODIC.INTEREST and defaults it here. When a rate is already present(say, the user changes the system computed rate), then system does not compute the new rate.\nValidation Rules:\nSystem defaulted and modifiable.\nStandard Rate field.\nValid only if Periodic index is stated.\n"
                                    },
                                    "periodicPeriodType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "periodicPeriod": {
                                        "type": "string",
                                        "description": "Defines the interest period to be used when linking to PERIODIC.INTEREST.(This will default to TERM if a Term Amount Property exists),. When a period is stated in Years or Weeks, they would be converted to Months and Days respectively and then located on the PI table.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "periodicMethod": {
                                        "type": "string",
                                        "description": "If system does not find a interest rate in the correct bucket of PERIODIC.INTEREST table, it automatically applies a method to arrive at a rate chosen by this method.\nValid method is:.\nINTERPOLATE - System automatically interpolates the rate. This is the DEFAULT option as well.\n"
                                    },
                                    "initialResetDate": {
                                        "type": "string",
                                        "format": "date",
                                        "description": ""
                                    },
                                    "periodicReset": {
                                        "type": "string",
                                        "description": "This indicates the reset period of the index stated. System would automatically reset the PERIODIC.RATE at the frequency stated in this field. Applicable only at Arrangement level. Periodic index may still be used without this field meaning, it never resets the computed rate.\nValidation rule:.\nValid PERIOD field.\n"
                                    },
                                    "effectiveRate": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "negativeRate": {
                                        "type": "string",
                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                    },
                                    "margins": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "marginType": {
                                                    "type": "string",
                                                    "description": "Identifies whether there are single or multiple margins\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                },
                                                "marginOperation": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "activites": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "onActivity": {
                                        "type": "string",
                                        "description": "When the periodic interest rate needs to be recalculated for certain activities, this field in combination with RECALCULATE may be used to setup the activity for which interest needs to be recalculated.\nValidation Rules:\n1. Applicable only for Periodic interest rate recalculation.\n2. Must be a valid activity in AA.ACTIVITY.\n"
                                    },
                                    "recalculate": {
                                        "type": "string",
                                        "description": "Related to ON.ACTIVITY activity, when flagged to RATE, system will recalculate Periodic rate when the activity setup in ON.ACTIVITY is processed. When the value is NOTHING periodic rate would not be recalculated when the activity setup in ON.ACTIVITY is processed.\nValidation Rules:\n1. Mandatory when ON.ACTIVITY is setup.\nThe fields ON.ACTIVITY and RECALCULATE in interest property class will be enhanced to allow user to define when to recalculate â€˜Profit Amountâ€™.\nAll activities which could result in payment schedule recalculation can be configured to recalculate â€˜Profit Amountâ€™ i.e., activities with payment schedule calculate and update action.\n"
                                    }
                                }
                            }
                        },
                        "references": {
                            "type": "array",
                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "customType": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    },
                                    "customName": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    },
                                    "customValue": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    }
                                }
                            }
                        },
                        "tiers": {
                            "type": "string",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n"
                        },
                        "linkedProperty": {
                            "type": "string",
                            "description": "This field will be used to specify the Interest Property of the Linked Arrangement that should be referred to, for getting the Interest Rate.\nWhere at least one tier is set to be â€˜Linked Rateâ€™, this must be specified.\n"
                        },
                        "dayBasis": {
                            "type": "string",
                            "description": "T24 can calculate interest based upon several different day basis types. Each T24 Interest Day Basis type is represented as a numerator and denominator.\nNumerator (interest days).\no 360 Each month is considered to have 30 days.\no 366 The exact number of days will be used.\nDenominator (days in the year).\no 360 Each year is considered to have 360 days.\no 365 Each year is considered to have 365 days.\no 366 The exact number of days in the year will be used (365 or 366).\nT24 allows the following interest day basis types:.\nType Notes.\nA (360/360) A1 and A2 are variations which alter the method of treating a month as 30 days.\nB (366/360).\nC (366/366).\nD (360/366).\nE (366/365).\nF (360/365) F1 and F2 are variations which alter the method of treating a month as 30 days.\nThis is a Mandatory field.\n"
                        },
                        "calcThreshold": {
                            "type": "string",
                            "description": "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated.\n"
                        },
                        "accrualRule": {
                            "type": "string",
                            "description": "When accruing interest,T24 must determine which amounts to include in each day's balance, the actual days to include in the period (e.g. first day, last day) and how to round any calculations.\nT24 allows users to define the calculation method to use, by specifying an accrual rule in EB.ACCRUAL.PARAM. Users can define the following:.\nFirst Day Inclusive (Yes/No).\nLast Day Inclusive (Yes/No).\nRounding Rule (Natural, Down, Up, Currency, None).\nIntermediate Calculation Rounding (Yes/No).\nCredit value date adjustment.\nDebit value date adjustment.\n"
                        },
                        "compounding": {
                            "type": "string",
                            "description": "T24 supports the compounding of both debit and credit interest.\nCompounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year. This field defines the number of compounding periods to be applied.\nNote that the compounding type provides a factor in the calculation only and does not actually cause the base principal amount to be actually increased by the calculated interest amount.\nThe following compound frequencies are supported:.\nDAILY.\nInterest is compounded 360/5/6 times a year (from days in year in INTEREST.BASIS).\nWEEKn.\nInterest is compounded 52/n times per year based on a number of WEEKS.\n-- Bi-weekly compounding should be defined as WEEK2 and will result in 26 periods.\n-- Four-Weekly compounding should be defined as WEEK4 and results in 13 periods.\nMnn.\nInterest is compounded 12/n times a year based on a numberof months.\n-- Monthly compounding should be defined as M01 and will result in 12 periods.\n-- Bi-Monthly should be defined as M02 and will result in 6 periods.\n-- Quarterly should be defined as M03 and will result in 4 periods.\n-- Semi-Annual should be defined as M06 and will result in 6 periods.\n-- Annual should be defined as M12 and will result in 1 period.\n-- Bi-Annual should be defined as M24 and will result in 0.5 periods.\n-- Any number of months up to 99 may be defined and results in 12/n periods.\nTWMTH.\nInterest is compounded twice a month resulting in 24 periods as opposed to WEEK2.\nwhich results in 26 periods.\nNnnn.\n- Compounding takes place nnn times per year.\n"
                        },
                        "compoundYieldMethod": {
                            "type": "string",
                            "description": "This field indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate. System uses the below formula to calculate the interest amount,.\nDaily Effective Rate(ERd) = (1+Interest Rate)^(1/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\nWhen the field is set as NULL the effective rate is calculated based on the compounding frequency defined in the field COMPOUND.TYPE using the below formula,.\nDaily Effective Rate(ERd) = (1+Interest Rate/Compound Freq)^(Compound Freq/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\n"
                        },
                        "minIntAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field indicates the minimum interest amount to be posted for an arrangement/account.\nIf the calculated interest amount is less than the amount specified in this field, system will waive the interest amount or adjust the interest amount based on the option set in the field MIN.INT.WAIVE.\n"
                        },
                        "minIntWaive": {
                            "type": "string",
                            "description": "This field indicates if the calculated interest amount has to be waived or adjusted.\nIf the field is set to YES, then the system will waive the interest amount if it is less than the MIN.INT.AMOUNT specified.\nIf NULL value is set and if the calculated interest amount is less than the MIN.INT.AMOUNT specified, then system will post the minimum interest amount.\n"
                        },
                        "referLimit": {
                            "type": "string",
                            "description": "For an arrangement under ACCOUNTS Product Line, it is possible link the first tier amount of debit interest to the LIMIT record attached.\nIt can be achieved by setting the field REFER.LIMIT in INTEREST property condition as â€˜YESâ€™. This functionality can be enabled only if the LIMIT is managed by AA.\n"
                        },
                        "suppressAccrual": {
                            "type": "string",
                            "description": "The Field accepts the options 'YES' or 'ALTERNATE'.\nIndicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property.\nFor Example:.\nIt will be set as YES by the system if the DONOR.ACCRUAL field is set as SUPPRESS for any product / arrangement in INTEREST.COMPENSTION property of a Bundle arrangement.\nIf it is set as 'ALTERNATE' for a property then the Accrual will be suppressed for the property for which it is set and Accrual will happen for the Alternate property which is set in Activity Restriction.\nBlank value in this field denotes that there is no suppression of accrual.\nThis is a Non Mandatory field.\n"
                        }
                    }
                },
                "penalinterest": {
                    "type": "object",
                    "properties": {
                        "interest": {
                            "type": "array",
                            "description": "",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "fixed": {
                                        "type": "string",
                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA fixed rate is directly entered by the user specifying the Defined Property and is not defined by an index table. Fixed rates are entered as positive numbers unless a negative rate is allowed.\nThis field is part of a multi value set of fields including FIXED.RATE, FLOATING.INDEX, PERIODIC.INDEX, PERIODIC.PERIOD, PERIODIC.BASE, MARGIN.TYPE, MARGIN.OPER, MARGIN.RATE, TIER.MIN.RATE, TIER.MAX.RATE, TIER.AMOUNT,TIER.PERCENT.\n"
                                    },
                                    "floating": {
                                        "type": "string",
                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA floating interest rate is tied to a variable base rate (i.e. BASIC.INTEREST). During interest calculation, T24 will use the currency specific rate applicable for the calculation date (i.e. the rate used for the calculation will change whenever the base rate is changed).\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "spread": {
                                        "type": "string",
                                        "description": "It would be possible to specify that the rate for a given tier be â€˜Linkedâ€™, by setting the field Linked Rate to Yes.\nThis can be mixed with normal rate calculations as well.\nWhere the Linked Rate is set to Yes, system would expect that an Arrangement reference in given in the â€˜Linked Arrangementâ€™ field along with the Interest property to be linked to.\n"
                                    },
                                    "minMaxRate": {
                                        "type": "string",
                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "maxRate": {
                                        "type": "string",
                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "effectiveRate": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "negativeRate": {
                                        "type": "string",
                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                    },
                                    "orPercent": {
                                        "type": "number",
                                        "description": "The tier percent relates to the field RATE.TIER.TYPE and percentages can be entered if BAND is selected.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. Either TIER.PERCENT or TIER.AMOUNT can be entered by not both. If TIER.PERCENT is defined, then the Sum of Tier percentage should be 100%.\n"
                                    },
                                    "margins": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "margin": {
                                                    "type": "string",
                                                    "description": "Identifies whether there are single or multiple margins.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                },
                                                "marginOperation": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "attributes": {
                            "type": "array",
                            "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "attributes": {
                                        "type": "string",
                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "This field along with FIELD and OPERAND, helps the user to set the conditions for the Alert to be triggered. Holds the actual value of the field on which the criteria is based. If a value is provided at the event definition level, then that value is defaulted here. If not, the user can provide the value at the time of Subscribing.\nThe fields from FIELD to VALUE are displayed in this subscription screen only when INHERIT is set to Yes in the corresponding TEC.ITEMS record. These set of fields define the criteria for alerts.\n"
                                    },
                                    "linkedArrangement": {
                                        "type": "string",
                                        "description": "Where at least one tier is set to be Linked Rate, the Arrangement to be linked for calculating the Interest Rate, must be specified here (or automatically defaulted by the system, where a Limit is attached)\n"
                                    },
                                    "attribute": {
                                        "type": "string",
                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                    }
                                }
                            }
                        },
                        "periodicInterest": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "periodicIndex": {
                                        "type": "string",
                                        "description": "A periodic rate is tied to an index (e.g. LIBOR) which is dependent on a period of time (e.g. term) and possibly an amount. Once the arrangement is active, the rate is fixed until it is reset. Periodic rates can be reset at a pre-determined frequency.\nTo define a periodic rate, the user specifies:.\nPERIODIC.INTEREST index to use.\nPeriod (this will default to TERM if a Term Amount Property exists).\nInterest selection method if the term is not found on the index. The option currently available is INTERPOLATE.\nRate Reset period.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "periodicRate": {
                                        "type": "string",
                                        "description": "Indicates the rate on which the index runs on the date stated in the key. When a periodic index is used and the field is left blank, then system computes the rate from PERIODIC.INTEREST and defaults it here. When a rate is already present(say, the user changes the system computed rate), then system does not compute the new rate.\nValidation Rules:\nSystem defaulted and modifiable.\nStandard Rate field.\nValid only if Periodic index is stated.\n"
                                    },
                                    "periodicPeriodType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "periodicPeriod": {
                                        "type": "string",
                                        "description": "Defines the interest period to be used when linking to PERIODIC.INTEREST.(This will default to TERM if a Term Amount Property exists),. When a period is stated in Years or Weeks, they would be converted to Months and Days respectively and then located on the PI table.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "periodicMethod": {
                                        "type": "string",
                                        "description": "If system does not find a interest rate in the correct bucket of PERIODIC.INTEREST table, it automatically applies a method to arrive at a rate chosen by this method.\nValid method is:.\nINTERPOLATE - System automatically interpolates the rate. This is the DEFAULT option as well.\n"
                                    },
                                    "initialResetDate": {
                                        "type": "string",
                                        "format": "date",
                                        "description": ""
                                    },
                                    "periodicReset": {
                                        "type": "string",
                                        "description": "This indicates the reset period of the index stated. System would automatically reset the PERIODIC.RATE at the frequency stated in this field. Applicable only at Arrangement level. Periodic index may still be used without this field meaning, it never resets the computed rate.\nValidation rule:.\nValid PERIOD field.\n"
                                    },
                                    "effectiveRate": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "negativeRate": {
                                        "type": "string",
                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                    },
                                    "margins": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "marginType": {
                                                    "type": "string",
                                                    "description": "Identifies whether there are single or multiple margins\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                },
                                                "marginOperation": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "activites": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "onActivity": {
                                        "type": "string",
                                        "description": "When the periodic interest rate needs to be recalculated for certain activities, this field in combination with RECALCULATE may be used to setup the activity for which interest needs to be recalculated.\nValidation Rules:\n1. Applicable only for Periodic interest rate recalculation.\n2. Must be a valid activity in AA.ACTIVITY.\n"
                                    },
                                    "recalculate": {
                                        "type": "string",
                                        "description": "Related to ON.ACTIVITY activity, when flagged to RATE, system will recalculate Periodic rate when the activity setup in ON.ACTIVITY is processed. When the value is NOTHING periodic rate would not be recalculated when the activity setup in ON.ACTIVITY is processed.\nValidation Rules:\n1. Mandatory when ON.ACTIVITY is setup.\nThe fields ON.ACTIVITY and RECALCULATE in interest property class will be enhanced to allow user to define when to recalculate â€˜Profit Amountâ€™.\nAll activities which could result in payment schedule recalculation can be configured to recalculate â€˜Profit Amountâ€™ i.e., activities with payment schedule calculate and update action.\n"
                                    }
                                }
                            }
                        },
                        "references": {
                            "type": "array",
                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "customType": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    },
                                    "customName": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    },
                                    "customValue": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    }
                                }
                            }
                        },
                        "tiers": {
                            "type": "string",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n"
                        },
                        "linkedProperty": {
                            "type": "string",
                            "description": "This field will be used to specify the Interest Property of the Linked Arrangement that should be referred to, for getting the Interest Rate.\nWhere at least one tier is set to be â€˜Linked Rateâ€™, this must be specified.\n"
                        },
                        "dayBasis": {
                            "type": "string",
                            "description": "T24 can calculate interest based upon several different day basis types. Each T24 Interest Day Basis type is represented as a numerator and denominator.\nNumerator (interest days).\no 360 Each month is considered to have 30 days.\no 366 The exact number of days will be used.\nDenominator (days in the year).\no 360 Each year is considered to have 360 days.\no 365 Each year is considered to have 365 days.\no 366 The exact number of days in the year will be used (365 or 366).\nT24 allows the following interest day basis types:.\nType Notes.\nA (360/360) A1 and A2 are variations which alter the method of treating a month as 30 days.\nB (366/360).\nC (366/366).\nD (360/366).\nE (366/365).\nF (360/365) F1 and F2 are variations which alter the method of treating a month as 30 days.\nThis is a Mandatory field.\n"
                        },
                        "calcThreshold": {
                            "type": "string",
                            "description": "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated.\n"
                        },
                        "accrualRule": {
                            "type": "string",
                            "description": "When accruing interest,T24 must determine which amounts to include in each day's balance, the actual days to include in the period (e.g. first day, last day) and how to round any calculations.\nT24 allows users to define the calculation method to use, by specifying an accrual rule in EB.ACCRUAL.PARAM. Users can define the following:.\nFirst Day Inclusive (Yes/No).\nLast Day Inclusive (Yes/No).\nRounding Rule (Natural, Down, Up, Currency, None).\nIntermediate Calculation Rounding (Yes/No).\nCredit value date adjustment.\nDebit value date adjustment.\n"
                        },
                        "compounding": {
                            "type": "string",
                            "description": "T24 supports the compounding of both debit and credit interest.\nCompounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year. This field defines the number of compounding periods to be applied.\nNote that the compounding type provides a factor in the calculation only and does not actually cause the base principal amount to be actually increased by the calculated interest amount.\nThe following compound frequencies are supported:.\nDAILY.\nInterest is compounded 360/5/6 times a year (from days in year in INTEREST.BASIS).\nWEEKn.\nInterest is compounded 52/n times per year based on a number of WEEKS.\n-- Bi-weekly compounding should be defined as WEEK2 and will result in 26 periods.\n-- Four-Weekly compounding should be defined as WEEK4 and results in 13 periods.\nMnn.\nInterest is compounded 12/n times a year based on a numberof months.\n-- Monthly compounding should be defined as M01 and will result in 12 periods.\n-- Bi-Monthly should be defined as M02 and will result in 6 periods.\n-- Quarterly should be defined as M03 and will result in 4 periods.\n-- Semi-Annual should be defined as M06 and will result in 6 periods.\n-- Annual should be defined as M12 and will result in 1 period.\n-- Bi-Annual should be defined as M24 and will result in 0.5 periods.\n-- Any number of months up to 99 may be defined and results in 12/n periods.\nTWMTH.\nInterest is compounded twice a month resulting in 24 periods as opposed to WEEK2.\nwhich results in 26 periods.\nNnnn.\n- Compounding takes place nnn times per year.\n"
                        },
                        "compoundYieldMethod": {
                            "type": "string",
                            "description": "This field indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate. System uses the below formula to calculate the interest amount,.\nDaily Effective Rate(ERd) = (1+Interest Rate)^(1/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\nWhen the field is set as NULL the effective rate is calculated based on the compounding frequency defined in the field COMPOUND.TYPE using the below formula,.\nDaily Effective Rate(ERd) = (1+Interest Rate/Compound Freq)^(Compound Freq/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\n"
                        },
                        "minIntAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field indicates the minimum interest amount to be posted for an arrangement/account.\nIf the calculated interest amount is less than the amount specified in this field, system will waive the interest amount or adjust the interest amount based on the option set in the field MIN.INT.WAIVE.\n"
                        },
                        "minIntWaive": {
                            "type": "string",
                            "description": "This field indicates if the calculated interest amount has to be waived or adjusted.\nIf the field is set to YES, then the system will waive the interest amount if it is less than the MIN.INT.AMOUNT specified.\nIf NULL value is set and if the calculated interest amount is less than the MIN.INT.AMOUNT specified, then system will post the minimum interest amount.\n"
                        },
                        "referLimit": {
                            "type": "string",
                            "description": "For an arrangement under ACCOUNTS Product Line, it is possible link the first tier amount of debit interest to the LIMIT record attached.\nIt can be achieved by setting the field REFER.LIMIT in INTEREST property condition as â€˜YESâ€™. This functionality can be enabled only if the LIMIT is managed by AA.\n"
                        },
                        "suppressAccrual": {
                            "type": "string",
                            "description": "The Field accepts the options 'YES' or 'ALTERNATE'.\nIndicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property.\nFor Example:.\nIt will be set as YES by the system if the DONOR.ACCRUAL field is set as SUPPRESS for any product / arrangement in INTEREST.COMPENSTION property of a Bundle arrangement.\nIf it is set as 'ALTERNATE' for a property then the Accrual will be suppressed for the property for which it is set and Accrual will happen for the Alternate property which is set in Activity Restriction.\nBlank value in this field denotes that there is no suppression of accrual.\nThis is a Non Mandatory field.\n"
                        }
                    }
                },
                "principalint": {
                    "type": "object",
                    "properties": {
                        "interest": {
                            "type": "array",
                            "description": "",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "fixed": {
                                        "type": "string",
                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA fixed rate is directly entered by the user specifying the Defined Property and is not defined by an index table. Fixed rates are entered as positive numbers unless a negative rate is allowed.\nThis field is part of a multi value set of fields including FIXED.RATE, FLOATING.INDEX, PERIODIC.INDEX, PERIODIC.PERIOD, PERIODIC.BASE, MARGIN.TYPE, MARGIN.OPER, MARGIN.RATE, TIER.MIN.RATE, TIER.MAX.RATE, TIER.AMOUNT,TIER.PERCENT.\n"
                                    },
                                    "floating": {
                                        "type": "string",
                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA floating interest rate is tied to a variable base rate (i.e. BASIC.INTEREST). During interest calculation, T24 will use the currency specific rate applicable for the calculation date (i.e. the rate used for the calculation will change whenever the base rate is changed).\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "spread": {
                                        "type": "string",
                                        "description": "It would be possible to specify that the rate for a given tier be â€˜Linkedâ€™, by setting the field Linked Rate to Yes.\nThis can be mixed with normal rate calculations as well.\nWhere the Linked Rate is set to Yes, system would expect that an Arrangement reference in given in the â€˜Linked Arrangementâ€™ field along with the Interest property to be linked to.\n"
                                    },
                                    "minMaxRate": {
                                        "type": "string",
                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "maxRate": {
                                        "type": "string",
                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "effectiveRate": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "negativeRate": {
                                        "type": "string",
                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                    },
                                    "orPercent": {
                                        "type": "number",
                                        "description": "The tier percent relates to the field RATE.TIER.TYPE and percentages can be entered if BAND is selected.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. Either TIER.PERCENT or TIER.AMOUNT can be entered by not both. If TIER.PERCENT is defined, then the Sum of Tier percentage should be 100%.\n"
                                    },
                                    "margins": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "margin": {
                                                    "type": "string",
                                                    "description": "Identifies whether there are single or multiple margins.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                },
                                                "marginOperation": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "attributes": {
                            "type": "array",
                            "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "attributes": {
                                        "type": "string",
                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "This field along with FIELD and OPERAND, helps the user to set the conditions for the Alert to be triggered. Holds the actual value of the field on which the criteria is based. If a value is provided at the event definition level, then that value is defaulted here. If not, the user can provide the value at the time of Subscribing.\nThe fields from FIELD to VALUE are displayed in this subscription screen only when INHERIT is set to Yes in the corresponding TEC.ITEMS record. These set of fields define the criteria for alerts.\n"
                                    },
                                    "linkedArrangement": {
                                        "type": "string",
                                        "description": "Where at least one tier is set to be Linked Rate, the Arrangement to be linked for calculating the Interest Rate, must be specified here (or automatically defaulted by the system, where a Limit is attached)\n"
                                    },
                                    "attribute": {
                                        "type": "string",
                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                    }
                                }
                            }
                        },
                        "periodicInterest": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "periodicIndex": {
                                        "type": "string",
                                        "description": "A periodic rate is tied to an index (e.g. LIBOR) which is dependent on a period of time (e.g. term) and possibly an amount. Once the arrangement is active, the rate is fixed until it is reset. Periodic rates can be reset at a pre-determined frequency.\nTo define a periodic rate, the user specifies:.\nPERIODIC.INTEREST index to use.\nPeriod (this will default to TERM if a Term Amount Property exists).\nInterest selection method if the term is not found on the index. The option currently available is INTERPOLATE.\nRate Reset period.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "periodicRate": {
                                        "type": "string",
                                        "description": "Indicates the rate on which the index runs on the date stated in the key. When a periodic index is used and the field is left blank, then system computes the rate from PERIODIC.INTEREST and defaults it here. When a rate is already present(say, the user changes the system computed rate), then system does not compute the new rate.\nValidation Rules:\nSystem defaulted and modifiable.\nStandard Rate field.\nValid only if Periodic index is stated.\n"
                                    },
                                    "periodicPeriodType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "periodicPeriod": {
                                        "type": "string",
                                        "description": "Defines the interest period to be used when linking to PERIODIC.INTEREST.(This will default to TERM if a Term Amount Property exists),. When a period is stated in Years or Weeks, they would be converted to Months and Days respectively and then located on the PI table.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "periodicMethod": {
                                        "type": "string",
                                        "description": "If system does not find a interest rate in the correct bucket of PERIODIC.INTEREST table, it automatically applies a method to arrive at a rate chosen by this method.\nValid method is:.\nINTERPOLATE - System automatically interpolates the rate. This is the DEFAULT option as well.\n"
                                    },
                                    "initialResetDate": {
                                        "type": "string",
                                        "format": "date",
                                        "description": ""
                                    },
                                    "periodicReset": {
                                        "type": "string",
                                        "description": "This indicates the reset period of the index stated. System would automatically reset the PERIODIC.RATE at the frequency stated in this field. Applicable only at Arrangement level. Periodic index may still be used without this field meaning, it never resets the computed rate.\nValidation rule:.\nValid PERIOD field.\n"
                                    },
                                    "effectiveRate": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "negativeRate": {
                                        "type": "string",
                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                    },
                                    "margins": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "marginType": {
                                                    "type": "string",
                                                    "description": "Identifies whether there are single or multiple margins\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                },
                                                "marginOperation": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "activites": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "onActivity": {
                                        "type": "string",
                                        "description": "When the periodic interest rate needs to be recalculated for certain activities, this field in combination with RECALCULATE may be used to setup the activity for which interest needs to be recalculated.\nValidation Rules:\n1. Applicable only for Periodic interest rate recalculation.\n2. Must be a valid activity in AA.ACTIVITY.\n"
                                    },
                                    "recalculate": {
                                        "type": "string",
                                        "description": "Related to ON.ACTIVITY activity, when flagged to RATE, system will recalculate Periodic rate when the activity setup in ON.ACTIVITY is processed. When the value is NOTHING periodic rate would not be recalculated when the activity setup in ON.ACTIVITY is processed.\nValidation Rules:\n1. Mandatory when ON.ACTIVITY is setup.\nThe fields ON.ACTIVITY and RECALCULATE in interest property class will be enhanced to allow user to define when to recalculate â€˜Profit Amountâ€™.\nAll activities which could result in payment schedule recalculation can be configured to recalculate â€˜Profit Amountâ€™ i.e., activities with payment schedule calculate and update action.\n"
                                    }
                                }
                            }
                        },
                        "references": {
                            "type": "array",
                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "customType": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    },
                                    "customName": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    },
                                    "customValue": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    }
                                }
                            }
                        },
                        "tiers": {
                            "type": "string",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n"
                        },
                        "linkedProperty": {
                            "type": "string",
                            "description": "This field will be used to specify the Interest Property of the Linked Arrangement that should be referred to, for getting the Interest Rate.\nWhere at least one tier is set to be â€˜Linked Rateâ€™, this must be specified.\n"
                        },
                        "dayBasis": {
                            "type": "string",
                            "description": "T24 can calculate interest based upon several different day basis types. Each T24 Interest Day Basis type is represented as a numerator and denominator.\nNumerator (interest days).\no 360 Each month is considered to have 30 days.\no 366 The exact number of days will be used.\nDenominator (days in the year).\no 360 Each year is considered to have 360 days.\no 365 Each year is considered to have 365 days.\no 366 The exact number of days in the year will be used (365 or 366).\nT24 allows the following interest day basis types:.\nType Notes.\nA (360/360) A1 and A2 are variations which alter the method of treating a month as 30 days.\nB (366/360).\nC (366/366).\nD (360/366).\nE (366/365).\nF (360/365) F1 and F2 are variations which alter the method of treating a month as 30 days.\nThis is a Mandatory field.\n"
                        },
                        "calcThreshold": {
                            "type": "string",
                            "description": "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated.\n"
                        },
                        "accrualRule": {
                            "type": "string",
                            "description": "When accruing interest,T24 must determine which amounts to include in each day's balance, the actual days to include in the period (e.g. first day, last day) and how to round any calculations.\nT24 allows users to define the calculation method to use, by specifying an accrual rule in EB.ACCRUAL.PARAM. Users can define the following:.\nFirst Day Inclusive (Yes/No).\nLast Day Inclusive (Yes/No).\nRounding Rule (Natural, Down, Up, Currency, None).\nIntermediate Calculation Rounding (Yes/No).\nCredit value date adjustment.\nDebit value date adjustment.\n"
                        },
                        "compounding": {
                            "type": "string",
                            "description": "T24 supports the compounding of both debit and credit interest.\nCompounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year. This field defines the number of compounding periods to be applied.\nNote that the compounding type provides a factor in the calculation only and does not actually cause the base principal amount to be actually increased by the calculated interest amount.\nThe following compound frequencies are supported:.\nDAILY.\nInterest is compounded 360/5/6 times a year (from days in year in INTEREST.BASIS).\nWEEKn.\nInterest is compounded 52/n times per year based on a number of WEEKS.\n-- Bi-weekly compounding should be defined as WEEK2 and will result in 26 periods.\n-- Four-Weekly compounding should be defined as WEEK4 and results in 13 periods.\nMnn.\nInterest is compounded 12/n times a year based on a numberof months.\n-- Monthly compounding should be defined as M01 and will result in 12 periods.\n-- Bi-Monthly should be defined as M02 and will result in 6 periods.\n-- Quarterly should be defined as M03 and will result in 4 periods.\n-- Semi-Annual should be defined as M06 and will result in 6 periods.\n-- Annual should be defined as M12 and will result in 1 period.\n-- Bi-Annual should be defined as M24 and will result in 0.5 periods.\n-- Any number of months up to 99 may be defined and results in 12/n periods.\nTWMTH.\nInterest is compounded twice a month resulting in 24 periods as opposed to WEEK2.\nwhich results in 26 periods.\nNnnn.\n- Compounding takes place nnn times per year.\n"
                        },
                        "compoundYieldMethod": {
                            "type": "string",
                            "description": "This field indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate. System uses the below formula to calculate the interest amount,.\nDaily Effective Rate(ERd) = (1+Interest Rate)^(1/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\nWhen the field is set as NULL the effective rate is calculated based on the compounding frequency defined in the field COMPOUND.TYPE using the below formula,.\nDaily Effective Rate(ERd) = (1+Interest Rate/Compound Freq)^(Compound Freq/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\n"
                        },
                        "minIntAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field indicates the minimum interest amount to be posted for an arrangement/account.\nIf the calculated interest amount is less than the amount specified in this field, system will waive the interest amount or adjust the interest amount based on the option set in the field MIN.INT.WAIVE.\n"
                        },
                        "minIntWaive": {
                            "type": "string",
                            "description": "This field indicates if the calculated interest amount has to be waived or adjusted.\nIf the field is set to YES, then the system will waive the interest amount if it is less than the MIN.INT.AMOUNT specified.\nIf NULL value is set and if the calculated interest amount is less than the MIN.INT.AMOUNT specified, then system will post the minimum interest amount.\n"
                        },
                        "referLimit": {
                            "type": "string",
                            "description": "For an arrangement under ACCOUNTS Product Line, it is possible link the first tier amount of debit interest to the LIMIT record attached.\nIt can be achieved by setting the field REFER.LIMIT in INTEREST property condition as â€˜YESâ€™. This functionality can be enabled only if the LIMIT is managed by AA.\n"
                        },
                        "suppressAccrual": {
                            "type": "string",
                            "description": "The Field accepts the options 'YES' or 'ALTERNATE'.\nIndicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property.\nFor Example:.\nIt will be set as YES by the system if the DONOR.ACCRUAL field is set as SUPPRESS for any product / arrangement in INTEREST.COMPENSTION property of a Bundle arrangement.\nIf it is set as 'ALTERNATE' for a property then the Accrual will be suppressed for the property for which it is set and Accrual will happen for the Alternate property which is set in Activity Restriction.\nBlank value in this field denotes that there is no suppression of accrual.\nThis is a Non Mandatory field.\n"
                        }
                    }
                },
                "limit": {
                    "type": "object",
                    "properties": {
                        "limitReference": {
                            "type": "string",
                            "description": "If the Customer has a Credit Limit covering this Account, this field identifies the type of limit applicable to the Account and forms part of the key to the Limit record containing Credit Limit details. This field is also used to indicate Nostro Accounts.\nExcept for Nostro and Internal Accounts, this field is accessed by the Limits System whenever a debit transaction is processed for this Account.\nIf no Limit Reference is specified, an 'UNAUTHORISED OVERDRAFT' message is displayed and an Override is required before the transaction will be accepted.\nIf a Limit Reference is specified, the corresponding Limit record is checked (see below). If it covers the new Working Balance, the transaction is accepted, otherwise a message is displayed and an Override is required before the transaction will be accepted.\nThe key to the corresponding Limit record is built up as follows: cccccc.nnnnnnn.ss\nWhere 'cccccc' is the Liability number for the Customer in Field CUSTOMER of this record and 'nnnnnnn.ss' is the Limit Reference specified in this field.\n3-9 numeric characters consisting of a 3-7 digit Limit Reference Code and optionally, a 2 digit sequence number separated by '.' Or 'NOSTRO' to denote a Nostro Account (generated automatically by the system). (Optional input. No default.)\nThe Limit Reference Code (nnnnnnn) must be an existing code on the LIMIT.REF table.\nLimit Reference code must be a suitable one for Account records, as defined in the Limit Parameter table.\nThere must be a Limit record corresponding to the key built up as described above.\nError message is generated if single limit is set to 'Y' and one more accounts is attached to same limit (If single limit field is set to 'Y' then the limit can be utilised by one account. If multiple accounts are to utilise a single limit then, single limit field to be defined as 'N' for all such accounts.\n"
                        },
                        "expiryDate": {
                            "type": "string",
                            "format": "date",
                            "description": "Specifies the date on which the Limit will expire. But if there are contracts against this limit,  then the limit will move to history only after the contracts mature. Any new drawings against this limit would raise overrides stating that the limit expires before the maturity date.\nWarning of the approach of this date is given on the Limits Approaching Expiry Date overnight report. The number of days prior to Expiry Date that the warning starts to appear is defined by the Expiries Reporting field on the LIMIT.PARAMETER table.\n6 to 11 type D (date) characters. (Defaults to a year from the current run     date.) The date input must be greater than or equal to the Limit Review Date\n"
                        },
                        "limitAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "The limit amount which is actually available for use.\nThe amount available under the limit, against which all system limit checks are performed. The value of the ONLINE LIMIT is calculated by the system as described below.\nIf the limit is an unsecured limit, a sub-limit or a secured but fixed limit, the value in this field is always equal to the value in field 21, MAXIMUM TOTAL.\nIf the limit is a variable secured limit, the value in this field is equal to the lower of (a) the MAXIMUM TOTAL or (b) the sum of the SECURED AMT's in field 24 plus the MAXIMUM UNSECURED in field 20.\nNote:      If time bands are in effect (field 25, TIME CODE), the            ONLINE LIMIT amount will reflect the split of the            available limit across these periods. In the case of an            unsecured limit, a sub-limit or a fixed secured limit,            this field will contain the same values as field 26, LIMIT            BAND.            In the case of a variable secured limit, this field will            contain either the same values as field 26, LIMIT BAND            or, if the total ONLINE LIMIT amount is lower than the            MAXIMUM TOTAL in field 21, the ONLINE LIMIT amount            apportioned pro-rata across the time bands in line with            the specified LIMIT BAND split.\n1 to 19 type AMT (standard amount format). (No input, system-generated field) Multivalue field associated with fields 25 to 45.\n"
                        },
                        "reviewFreq": {
                            "type": "string",
                            "description": "Specifies the next date on which the limit is to be reviewed. This field is mapped to LIMIT record linked to the Arrangement.\nValidation Rules:\nStandard T24 frequency code.\nThe first review date must not be later than the Limit EXPIRY.DATE.\n"
                        }
                    }
                },
                "officers": {
                    "type": "object",
                    "properties": {
                        "officrers": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "otherOfficer": {
                                        "type": "string",
                                        "description": ""
                                    }
                                }
                            }
                        },
                        "primaryOfficer": {
                            "type": "string",
                            "description": "The primary officer responsible for the product/arrangement can be specified. All officers must exist on the T24 DEPT.ACCT.OFFICER file.\nThe primary officer is used as the ACCOUNT.OFFICER in the created ACCOUNT record.\n"
                        }
                    }
                },
                "schedule": {
                    "type": "object",
                    "properties": {
                        "payment": {
                            "type": "array",
                            "description": "payment",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "paymentType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "paymentMethod": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "paymentFrequency": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "billType": {
                                        "type": "string",
                                        "description": "Bill Type would be picked from EB.LOOKUP instead of the hard-coded values of PAYMENT, EXPECTED.\nHowever all the options would not be available for this field within PAYMENT.SCHEDULE.\nThe following values would not be available,.\n1.INFO.\n2.PR.CHARGE.\n3.ACT.CHARGE.\n4.DEF.CHARGE.\n5.DISBURSEMENT.\nOther user defined values may be given which then can be used in Overdue PC to define different aging rules for the BillType.\nWhen a user defined value is captured it would be assumed as PAYMENT type Bill, and not 'Expected' type bill.\nValidations:.\nâ€¢Standard lookup field.\nâ€¢Maximum number of characters is restricted to 15.\nâ€¢INFO, PR.CHARGE, ACT.CHARGE, DEF.CHARGE options not applicable for this field although it is part of the lookup values.\n"
                                    },
                                    "billProduced": {
                                        "type": "string",
                                        "description": "By default T24 will create the Bill on the due date, however for products which require a Bill notice to be sent in advance of the due date, it is possible for the user to enter the number of days prior. This will result in the due amounts being projected and recorded on the bill.\nNumber of working days prior to the due date when the bill needs to be produced is defined in the field BILL.PRODUCED.\n"
                                    },
                                    "autoSettle": {
                                        "type": "string",
                                        "description": "By default NULL. If set to NULL, indicates AUTO.SETTLE is not enabled.\n"
                                    },
                                    "property": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "propertyId": {
                                                    "type": "string",
                                                    "description": "Any alphanumeric character can be used to define the name of the property.\nMaximum of 15 characters are allowed.\n"
                                                },
                                                "dueFrequency": {
                                                    "type": "string",
                                                    "description": "Indicates the actual frequency when the payment needs to be made due. Due frequency is defined for each payment property under a payment type.\nPayment frequency is defaulted when due frequency is null.\nGenerally both payment and due frequency has same value. When multiple properties are defined for a given payment type, due frequency of one of the property can de different from the payment frequency.\nExample:.\na) M 01 31. M = Monthly. 01 = one monthly intervals. 31 = the last day of the month.\nb) M 03 31 M = Monthly. 03 = three monthly intervals. 31 = the last day of the month.\nc) M 01 10 M=Monthly, 01 = at monthly intervals10 = 10th of the month.\nd) 31 MAR 2006 W , where W= weekly. In this case, the first schedule would fall on 31March 2006.\ne) 31 Mar 2006 BSNSS, where BSNSS = every business day. In this case, the first schedule would fall on 31March 2006.\nStandard T24 Recurrence frequency field.\nInput prohibited for a date prior to the system date.\n"
                                                }
                                            }
                                        }
                                    },
                                    "payments": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "percentage": {
                                                    "type": "number",
                                                    "description": "This field stores the Percentage of holdings to be redeemed/subscribed.This input is only recorded and not used for calculations.\nInput is allowed for SWITCH orders alone.\n"
                                                },
                                                "startDate": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Identifies the Date & Frequency of the Standalone DD for execution.\nThe claim value date is the date component of this field. Hence the date & the frequency has to be given after considering the Claim value date as given in DD.PARAMETER.\nThe date is cycled with the given frequency and this mandate reference is updated in DD.STANDALONE.FQU.LIST with the next execution date.\nWhenever the frequency is modified, then the underlying claim (DD.ITEM) is marked as 'DELETED' and new claim is raised for the given frequency. Incase the Claim is already sent(DD.ITEM status is 'CLAIMSENT'), then override is raised. However the DD.ITEM will not be marked as 'DELETED' as claim file is already generated.\nMandatory when STAND.ALONE.DDI set to Yes\nThis field is sub-divided into two elements: 1. Date 1-9 type D (date format in range 1950-2049) characters. 2. Optional Frequency 1-5 type SS (uppercase alpha or numeric, first character alpha) characters. (Mandatory input)\nThe date input or generated will correspond to the first execution of the Standalone DD.\nUsing the date & frequency in case given , DD.STANDALONE.FQU.LIST is updated with the next execution date.\nAn override will be required if the date input is a non-working day.\nDate entered should be greater than today and should not be more than Termination date.\n"
                                                },
                                                "endDate": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": ""
                                                },
                                                "numberPayments": {
                                                    "type": "string",
                                                    "description": "If a frequency has been specified the user can specify a Start Date or it can be defaulted from the Base Date. Additionally an End Date or a Number of Payments can be specified to indicate to T24 when the payments should terminate.\nThis field is part of a multi value set of fields with START.DATE, END.DATE and ACTUAL.AMT.\n"
                                                },
                                                "calcAmount": {
                                                    "type": "number",
                                                    "format": "int64",
                                                    "description": "There can be two amounts for each payment definition; Calculated Amount and Actual Amount.\nA calculated amount is determined by T24 based upon the Payment Type and Properties involved.\nSystem maintained(NOINPUT) field.\n"
                                                },
                                                "actualAmount": {
                                                    "type": "number",
                                                    "format": "int64",
                                                    "description": "There can be two amounts for each payment definition; Calculated Amount and Actual Amount. An actual amount can be entered by the user to override the calculated amount or manual payments. When adhoc payments are defined we need to define the actual anount for each payment date This field is part of a multi value set of fields with START.DATE, END.DATE and NUM.PAYMENTS.\nFor Disbursement Schedule(Account - Pay), the field is mandatory and sum of the future schedules should sum up to the CUR<Term Amount>.\nValidation Rules:\n1-9 numeric characters plus decimal point and commas.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "amortisationTerm": {
                            "type": "string",
                            "description": "If specific amount (residual amount) needs to be collected at the maturity date of the term, we can achieve this either by actually defining the residual amount or by defininng a amortisation term.\nThis field indicates the term for amortisation. The actual payment amount is calculated based on the amortisation term and not on the actual term defined in TERM.AMOUNT property of the arrangement. This calculated payment is then spread across actual term of the arrangement. If the amortisation term is greater than the actual term then we would be left with residual amount at the maturity date.\nAny residual amount must then be paid by the client on maturity of the arrangement. Input in this field is allowed only for Constant, linear payment types. The term can be entered as a number of Days (D), Weeks(W), Months(M) or Years(Y).\n"
                        },
                        "residualAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "If a specific amount needs to be collected on the final schedule date, that amount may be stated in this field. The amount stated in this field is 'Exclusive' of any scheduled calculated amount on the final schedule and is always considered to be belonging to ACCOUNT property.\nAs an illustration, if an Annuity Arrangement for 100000 is assumed and an amount of 20000 is stated as RESIDUAL.AMOUNT, the Annuity amount(CALC.AMOUNT) would be computed based on only 80000. If the Annuity amount is say 1500, on the final schedule date, system would make due 1500+20000 = 21500.\nThe residual amount would be recorded in bills under a special payment type called 'RESIDUAL.PRINCIPAL'.\nThe amount stated in this field would be automatically made due on PAYMENT.END.DATE.\nStandard T24 amount field in the arrangement currency.\n"
                        },
                        "billsCombined": {
                            "type": "string",
                            "description": "Indicates whether bills which have the same due date and are produced on the same date should be combined. In case of capitalisation (where we have two payment one is made due and other capitalised) even if bills combined set to YES, system would generate two separate bills. In another scenario where have one payment type to be made due and two payment types to be capitalised, then system would combine the those two payment types.\nInput allowed should be either YES or NO.\n"
                        },
                        "recalcFrequency": {
                            "type": "string",
                            "description": "If 'Nothing' is selected in field RECALCULATE, a recalculation frequency should be specified.\nExample:.\na) M 01 31. M = Monthly. 01 = one monthly intervals. 31 = the last day of the month.\nb) M 03 31 M = Monthly. 03 = three monthly intervals. 31 = the last day of the month.\nc) M 01 10 M=Monthly, 01 = at monthly intervals10 = 10th of the month.\nd) 31 MAR 2006 W , where W= weekly. In this case, the first schedule would fall on 31March 2006.\ne) 31 Mar 2006 BSNSS, where BSNSS = every business day. In this case, the first schedule would fall on 31March 2006.\nStandard date format.\nMust be a valid date.\nAn override will be required if the date is not defined on the HOLIDAY table.\nAn override will be required if the date as defined on the HOLIDAY table is a non working day.\nInput prohibited for a date prior to the system date.\n"
                        }
                    }
                },
                "settlement": {
                    "type": "object",
                    "properties": {
                        "linkedAccounts": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "linkedAccountType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "linkedAccount": {
                                        "type": "string",
                                        "description": ""
                                    }
                                }
                            }
                        },
                        "payin": {
                            "type": "array",
                            "description": "When PAYIN.ACCOUNT used is an Arrangement Account, then an activity has to be specified to debit that arrangement as well. That activity need to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Debit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYIN.ACCOUNT Required only if the PAYIN.ACCOUNT is an AA Account.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "payinSettlement": {
                                        "type": "string",
                                        "description": "The field may be used as a switch to turn off the Settlement instruction temporarily without having the need to clear or delete the field contents. If the field is set to NO, then it means the instructions are not active. Validation Rules: Valid input is Yes or No. Default value is Yes.\n"
                                    },
                                    "paymentTypes": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "paymentTypeAccount": {
                                                    "type": "string",
                                                    "description": "Payment types for the AA contract that require settlement by DD to be defined.\nValid payment type from AA.PAYMENT.TYPE.\n"
                                                }
                                            }
                                        }
                                    },
                                    "payinActivity": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "mandateReference": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "The DD mandate to be used if the settlement method is DD. The DD number must be the account of the arrangement.\nShould be a valid Mandate Ref from DD.DDI.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "settlement": {
                            "type": "array",
                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "payinAccount": {
                                        "type": "string",
                                        "description": "Contains the Account number from where funds are to be debited and Credited against this payment type. Multiple accounts could be defined here and the rules of funding is governed by the PAYIN.AC.DB.RULE field. Validation Rules: Should be a valid T24 ACCOUNT Number.\n"
                                    },
                                    "paymentType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "reference": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payinActivity": {
                                                    "type": "string",
                                                    "description": "When PAYIN.ACCOUNT used is an Arrangement Account, then an activity has to be specified to debit that arrangement as well. That activity need to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Debit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYIN.ACCOUNT Required only if the PAYIN.ACCOUNT is an AA Account.\n"
                                                },
                                                "payinDbRule": {
                                                    "type": "string",
                                                    "description": "The field decides the manner in which system should utilise the funds available in PAYIN.ACCOUNT during settlement process. 1) FULL: System debits the PAYIN account to the extent of the bill amount irrespective of whether or not the funds are avaliable in the specified account. For this purpose, system creates an overdraft in the PAYIN.ACCOUNT in case funds are only partially available provided the PAYIN.ACCOUNT has a limit attached to it. 2) PARTIAL: System debits the PAYIN.ACCOUNT only to the extent of funds availabe. 3) NONE: System would not debit the PAYIN.ACCOUNT if funds are not fully available to settle the bill.\n"
                                                },
                                                "payinSettleActivity": {
                                                    "type": "string",
                                                    "description": "Activity to be used to settle the Dues of the current Arrangement. Typically this would be a APPLYPAYMENT activity. User activity may also be stated in this field. Validation Rules: Should be a valid record in AA.ACTIVITY.\n"
                                                },
                                                "payinRcType": {
                                                    "type": "string",
                                                    "description": "Defines the RC.TYPE reference to be used during handoff to inform the recycler what type of transaction is being handed-off.\nValidation Rules:\nShould be a valid entry in RC.TYPE.\nValid only if PAYIN.TXN.TYPE is defined.\n"
                                                },
                                                "payinRcCondition": {
                                                    "type": "string",
                                                    "description": "Defines the RC.CONDITION to be used for the payment type to allow variation of different retry conditions.\nValidation Rules:\nShould be a valid entry in RC.CONDITION.\nValid only if PAYIN.TXN.TYPE is defined.\n"
                                                },
                                                "transactionType": {
                                                    "type": "string",
                                                    "description": "Indicates whether the Customer is placing an order to buy or sell.\nThe transaction code is user defined for convenience and adaptability to cover all eventualities within theSecuritys Module From Coupon Payments to Redemptions and Capital Increase Type updates. Within the Open Orderapplication it is suggested that the same codes as for the Sec.Trade application i.e. For A purchase of securitiesSPR and for a Sale SSL be used.\n1-3 type S (uppercase alpha) character Sc.Trans.Name. (Mandatory Input.)\nMust be a valid code on the SC.TRANS.NAME file.\n"
                                                },
                                                "nominatedAmount": {
                                                    "type": "number",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "additionalAmount": {
                                                    "type": "number",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "excludeProperties": {
                                                    "type": "string",
                                                    "description": ""
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "payout": {
                            "type": "array",
                            "description": "When PAYOUT.ACCOUNT used is an Arrangement Account, then an activity has to be specified to Credit the Account arrangement as well. That activity needs to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Credit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYOUT.ACCOUNT Required only if the PAYOUT.ACCOUNT is an AA Account.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "payoutSettlement": {
                                        "type": "string",
                                        "description": "The field may be used as a switch to turn off the Settlement instruction temporarily without having the need to clear or delete the field contents. If the field is set to NO, then it means the instructions are not active. Validation Rules: Valid input is Yes or No. Default value is Yes.\n"
                                    },
                                    "payoutSettleActivity": {
                                        "type": "string",
                                        "description": "Contains the PROPERTY based on which the Payout settlement instruction would be processed. This definition allows users to configure multiple payouts happening to multiple accounts. For example, user can configure Current Interest to be paid out to one account, whilst the Maturity deposit amount may be credited to another account. Validation Rules: Should be a valid record in AA.PROPERTY.\n"
                                    },
                                    "propertyClasses": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payoutPropertyClass": {
                                                    "type": "string",
                                                    "description": "Contains the PROPERTY CLASS based on which the Payout settlement instruction would be processed. This definition allows users to configure multiple payouts happening to multiple accounts. For example, user can configure Interest to be paid out to one account, whilst the Maturity deposit amount to be credited to another account. Validation Rules: Should be a valid record in AA.PROPERTY.CLASS.\n"
                                                }
                                            }
                                        }
                                    },
                                    "properties": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payoutProperty": {
                                                    "type": "string",
                                                    "description": "Contains the PROPERTY based on which the Payout settlement instruction would be processed. This definition allows users to configure multiple payouts happening to multiple accounts. For example, user can configure Current Interest to be paid out to one account, whilst the Maturity deposit amount may be credited to another account. Validation Rules: Should be a valid record in AA.PROPERTY.\n"
                                                }
                                            }
                                        }
                                    },
                                    "payoutActivity": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payoutAccount": {
                                                    "type": "string",
                                                    "description": "Contains the Account to which funds are to be credited from this Arrangement. Validation Rules: Should be a valid T24 ACCOUNT Number.\n"
                                                },
                                                "payoutBeneficiary": {
                                                    "type": "string",
                                                    "description": "This field is a link to the core BENEFICIARY table and is used to define who is the ultimate beneficiary of the funds.\nWhen configured a PAYMENT.ORDER will be generated and the routing will be decided via the PAYMENT.ORDER.PARAMETER.\nBased on the setting in PAYMENT.ORDER.PARAMETER either a FUNDS.TRANSFER or TPH message will be produced.\nAlong with values from the PAYMENT.ORDER.PRODUCT record the BENEFICIARY record is mapped through to the PAYMENT.ORDER application and then mapped through to FUNDS.TRANSFER or TPH.\nCurrent functionality also allows for a T24 account to be defined in the Beneficiary record which will be credited.\no Optional field.\no Mutually exclusive with PAYOUT.ACCOUNT.\no Is used in conjunction with PAYOUT.PO.PRODUCT.\no Drills down to the BENEFICIARY table.\n"
                                                },
                                                "payoutPoProduct": {
                                                    "type": "string",
                                                    "description": "This field is linked to the PAYMENT.ORDER.PRODUCT table and its value is passed through to the PAYMENT.ORDER application.\nIts main purpose will be to control parameters for TPH processing and pass outgoing messages parameters.\no Optional field.\no Is used in conjunction with PAYOUT.BENEFICIARY.\no Drills down to the PAYMENT.ORDER.PRODUCT table.\n"
                                                },
                                                "payoutPercentage": {
                                                    "type": "number",
                                                    "description": "Will allow the ability to define only a percentage value.\nThe system will cascade 'from top-to bottom' down the multiple fields taking the percentages in order (a blank field will be considered for processing last).\nThe percentage defined is the % portion of the Billed amount, which will be settled from the respective account.\nThe total percentages may not exceed 100%, The total percentages may not total 100%.\nIn the case of any rounding issues the last account will be deemed as the account to process any required adjustments.\nA blank field can be defined at last, In this case the remainder of the bill will be settled from this account.\n"
                                                },
                                                "payoutAmount": {
                                                    "type": "number",
                                                    "format": "int64",
                                                    "description": "Will allow the ability to define only a fixed value.\nThe system will cascade 'from top-to bottom' down the multiple fields taking the amounts defined in order (a blank field will be considered for processing last).\nWhen a bill is generated to be collected the individual amounts or total amounts defined may exceed the billed amount.\nIn this case the amount defined is classed as an 'up-to' amount. This is the maximum that can be taken and will honour the ACCOUNT.DEBIT.RULE field.\nTo satisfy the bill a lesser amount can also be taken.\nWhen a bill is generated to be collected the individual amounts or total amounts defined may not satisfy the billed amount.\nThe amount defined will be the amount to be taken.\nIn this case any remainder of the bill will be made due.\n"
                                                },
                                                "payoutActivity": {
                                                    "type": "string",
                                                    "description": "When PAYOUT.ACCOUNT used is an Arrangement Account, then an activity has to be specified to Credit the Account arrangement as well. That activity needs to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Credit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYOUT.ACCOUNT Required only if the PAYOUT.ACCOUNT is an AA Account.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "retryDays": {
                            "type": "string",
                            "description": ""
                        },
                        "defaultSettlementAccount": {
                            "type": "string",
                            "description": "An account specified here will be used as the settlement account for all PAYIN or PAYOUT entries which do not have a Settlement Account, Beneficiary or DD Mandate Reference defined.\nInput in this field is optional. Must be a valid account.\n"
                        }
                    }
                },
                "commitment": {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field contains the cash amount that is to be traded.\nWhen the ORDER.TYPE is CASH,If the CASH.CHRGS field is set to GROSS then the cash amount will be used to calculate the nominal anycharges/commissions that apply will be added to this value, however, if the CASH.CHRGS field is set to NET the cashamount will include all charges/commissions, adjusting the nominal to achieve this.\nMandatory if ORDER.TYPE is CASH\n"
                        },
                        "changeAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "The original commitment amout can be increased or decreased using INCREASE or DECREASE action. This field represent the amount to increase or decrease on the original amount.\nFor increase action, the input in this field should be greater than zero.\nFor decrease action the input in this field should be less than zero.\nStandard T24 amount field.\n"
                        },
                        "term": {
                            "type": "string",
                            "description": "Indicates the period to which a rate applies.\n'R' for Remaining, NND for Rest period in Days where D  Number of Days,      NNNM for Rest Period in Months where M Number of Months and NNY for rest     period in years where Y Number of years. e.g. a 10 day rest period would be     written as 10D, a 120 month rest period as 120M and a 20 year rest period as     20Y. R must be the last rest period entered. Multi value field. (Mandatory     input. No default.)\nThe number of days or months must be entered in logical order i.e. in     ascending sequence.\nFor days the range 01-31 will be allowed while for months 01-360 will be     accepted. For years the range 01-30 is accepted.\nWhen 'R' is defined, at least one additional rest period must be defined.\nWhen more than one rest period is defined, 'R' must be entered on the last     entered rest period.\n"
                        },
                        "revolving": {
                            "type": "string",
                            "description": "Defines the revolving term amounts for lending products. The effect of a revolving product is to increase the available amount from which a customer may drawdown as a result of certain payments. The options are:.\nNO - the available amount will not increase when any payments are made.\nPAYMENT - any payment against the outstanding amount(due or not due) will result in the available amount increasing.\nPREPAYMENT - only repayments agains the outstanding amount (balance not yet due) will result in the available amount increasing.\n",
                            "enum": [
                                "NO",
                                "PAYMENT",
                                "PREPAYMENT"
                            ]
                        },
                        "updateLimit": {
                            "type": "string",
                            "description": "Defines whether the commitment amount of the Limit used for the arrangement should be updated and shown on the LIMIT record.\n",
                            "enum": [
                                "YES",
                                "NO"
                            ]
                        },
                        "topupAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": ""
                        }
                    }
                },
                "agent": {
                    "type": "object",
                    "properties": {
                        "agents": {
                            "type": "array",
                            "description": "",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "agentId": {
                                        "type": "string",
                                        "description": "Holds the agent ID from CUSTOMER table.\n"
                                    },
                                    "agentArrangementId": {
                                        "type": "string",
                                        "description": "Hold the agentâ€™s arrangement ID, based on which commissions have to be calculated. Should be a valid AA.ARRANGEMENT (AGENT LINE).\n"
                                    },
                                    "agentRole": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "events": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "fixedAmount": {
                                                    "type": "number",
                                                    "format": "int64",
                                                    "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                                },
                                                "marginOperand": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                },
                                                "marginPercent": {
                                                    "type": "number",
                                                    "description": "Defines a percentage is applied over the default commission amount, to calculate the final commission for a financial arrangement. Is used in conjunction with MARGIN.OPERAND.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "periodiccharges": {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "type": "array",
                            "description": "This field contains the cash amount that is to be traded.\nWhen the ORDER.TYPE is CASH,If the CASH.CHRGS field is set to GROSS then the cash amount will be used to calculate the nominal anycharges/commissions that apply will be added to this value, however, if the CASH.CHRGS field is set to NET the cashamount will include all charges/commissions, adjusting the nominal to achieve this.\nMandatory if ORDER.TYPE is CASH\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "debitCharge": {
                                        "type": "string",
                                        "description": "Minimum charge amount can be specified for associated currency attribute. AA.CHARGE.DETAILS will be updated with the actual calculated charge amount and the charge amount that has been billed after applying MIN.CHG.AMOUNT. If currency is input either of Maximum or Minimum charge amount is mandatory.\n"
                                    },
                                    "chargeAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Holds the charge amount equivalent in charge account currency\n"
                                    },
                                    "creditCharge": {
                                        "type": "string",
                                        "description": "Defines minimum charge amount to be paid for the currency attribute if the net charge amount is a Credit.\n"
                                    },
                                    "maxCreditCharge": {
                                        "type": "string",
                                        "description": "Defines maximum charge amount to be paid for the currency attribute if the net charge amount is a Credit.\n"
                                    }
                                }
                            }
                        },
                        "waiveCharge": {
                            "type": "string",
                            "description": "Input of 'NO' indicates that charges are collected on this PAYMENT.STOP.TYPE and an input of 'YES' indicates that charges are to be waived for this particular stop payment. If there is no input defaults to 'NO'.\nOptional input. Valid input 'YES' or 'NO'. Defaults to 'NO'.Multi value       field associated with fields 2 to 24.\nAlphanumeric - Maximum of 3 characters\n"
                        },
                        "includeDeferred": {
                            "type": "string",
                            "description": "Indicates if all deferred charges should be included or not. Valid options - YES and NO.\n"
                        }
                    }
                }
            }
        },
        "createHLSimResponse": {
            "properties": {
                "header": {
                    "$ref": "#/definitions/ArrangementHeader"
                },
                "body": {
                    "$ref": "#/definitions/createHLSimResponseBody"
                }
            },
            "description": "createHLSimResponse"
        },
        "createHLSimResponseBody": {
            "type": "object",
            "properties": {
                "arrangementActivity": {
                    "type": "object",
                    "properties": {
                        "parties": {
                            "type": "array",
                            "description": "",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "partyId": {
                                        "type": "string",
                                        "description": "This field denotes the customer(s) of the Arrangement contract.\nThis field is required to be input for new arrangement, takeover, and Change primary customer activities.\nAssociated multi-value with CUSTOMER.ROLE field.\nValidation Rules:\n1 -6 numeric character customer number. or 3 - 10 alphanumeric character customer mnemonic. (mandatory input).\nMust be either a valid customer number or customer mnemonic of a customer on the CUSTOMER file.\n"
                                    },
                                    "partyRole": {
                                        "type": "string",
                                        "description": "Associated with CUSTOMER field. Denotes the role of the customer in the Arrangement.\nValidation Rules:\nMandatory input. If not input by the user, defaulted with the system created role 'Owner'.\nMust be a valid record in AA.CUSTOMER.ROLE table.\n"
                                    }
                                }
                            }
                        },
                        "agents": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "agentId": {
                                        "type": "string",
                                        "description": "Holds the agent ID from CUSTOMER table.\n"
                                    },
                                    "agentArrangementId": {
                                        "type": "string",
                                        "description": "Hold the agentâ€™s arrangement ID, based on which commissions have to be calculated. Should be a valid AA.ARRANGEMENT (AGENT LINE).\n"
                                    },
                                    "agentRole": {
                                        "type": "string",
                                        "description": ""
                                    }
                                }
                            }
                        },
                        "arrangmentId": {
                            "type": "string",
                            "description": "Unique identification number for the arrangement contract. The format of the ID is as follows.\nAA YYDDD xxxxx.\nwhere: AA - Arrangement Architecture module identifier, YYDDD - Year and date of input in julian date format, xxxxx - Is a system generated unique identifier.\nFor 'New Arrangement' activity this field should be input as 'NEW' and will be updated by the system while processing the activity with the unique reference number.\nWhen attempting an activity for a existing arrangement and the arrangement has generated a underlying ACCOUNT record, then the ACCOUNT id may be used as an alternate id.\nValidation Rules:\nMust be 'NEW' or an existing Arrangement ID.\n"
                        },
                        "productId": {
                            "type": "string",
                            "description": "This field denotes product of the arrangement contract. The characteristics of the arrangement is derived from the Product to which it is linked to.\nAn arrangement product and arrangement contract is a series of properties (AA.PROPERTY) relating to different components (AA.PROPERTY.CLASS). Each product has a set of mandatory components and optional components.\nIt is possible to change the product of the arrangement during its life-cycle subject to certain restrictions. For each product change this field is updated along with the effective date of change.\n"
                        },
                        "variation": {
                            "type": "string",
                            "description": "The field specifies the variation of the product that the arrangement is running. When selecting a product from the catalogue, entering the customer number and validating, AA will automatically choose the correct variation based upon the eligibility rules and priority specified. If a user manually specified the variation, eligibility will still be checked and if the user is not eligible but the rules are configured to raise an override, the user can choose to accept the override.\n"
                        },
                        "currency": {
                            "type": "string",
                            "description": "The SWIFT Currency Code for the entry. The Currency of the Account in Field 1.  Not used in Entries over local currency Accounts.\n3 type S (upper-case alpha or numeric) characters Currency Code, or blank. (Internal file, no input.)\n"
                        },
                        "pricing": {
                            "type": "string",
                            "description": "Method used to assign a Relationship Pricing Arrangement(s) to the financial arrangement.\nAutomatic (or blank) â€“ The conditions in the productâ€™s Pricing Rules property will determine the pricing plan to apply. This option is valid if the Pricing Rules are set to 'Automatic' or 'Automatic or Manual'.\nManual â€“ The user will manually assign a plan with the following field. This option is valid if the Pricing Rules are set to 'Manual' or 'Automatic or Manual'.\nNo Pricing â€“ No plan will be applied.\nNone â€“ No plan will be applied.\nThis is an optional field.\nShould be either AUTOMATIC, MANUAL or NO.PRICING or NONE.\n"
                        },
                        "pricingPlan": {
                            "type": "string",
                            "description": "If 'Automatic' is specified in PRICING.SELECTION field, then AA will determine the best plan and populate this field with the Plan Product ID. If 'Manual' is selected the user must enter the Plan Product ID. AA will validate to ensure that a valid Relationship Pricing Arrangement exists for the customer. This Plan ID/Variation will also be stored in AA.ARRANGEMENT.\n"
                        },
                        "rewardsArrangementId": {
                            "type": "string",
                            "description": "Hold the Rewardsâ€™s arrangement ID, based on which rewards have to be calculated. Should be a valid AA.ARRANGEMENT (REWARDS LINE).\n"
                        },
                        "tradeDate": {
                            "type": "string",
                            "format": "date",
                            "description": "Standard date field, which is the trade date of the contract. Can be input during NEW/ROLLOVER/CHANGE.PRODUCT activities, amendment during other activities would cause error.\nValidations\n1. A date field type only.\n2. Initially defaulted to the effective date, if it is a forward dated activity then the current system date will be defaulted.\n3. Can be changed but must be equal to or less than the current system date.\n4. A back dated date is acceptable but must be within the parameters of the Product Proofing.\n5. Cannot have a date that is greater than the existing field EFFECTIVE.DATE in AA.ARRANGEMENT.ACTIVITY.\n"
                        },
                        "activityId": {
                            "type": "string",
                            "description": ""
                        },
                        "effectiveDate": {
                            "type": "string",
                            "format": "date",
                            "description": "Effective date of the Activity to be processed. This is always required for processing any activity.\nStandard date field.\n"
                        },
                        "reason": {
                            "type": "string",
                            "description": "A text field to store the reason behind performing the current activity. For example, if the rate is manually revised or product changed or redeemed(and not restricted to the above activities alone), a user may record a reason for performing such activity for future verification and audit.\n"
                        }
                    }
                },
                "activities": {
                    "type": "object",
                    "properties": {
                        "{activityName}": {
                            "type": "object",
                            "properties": {
                                "activity": {
                                    "type": "string"
                                },
                                "transactionStatus": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "properties": {
                    "type": "object",
                    "properties": {
                        "account": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "activityCharges": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "activities": {
                                            "type": "array",
                                            "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "activityId": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "charges": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "chargePropertyId": {
                                                                    "type": "string",
                                                                    "description": "This field indicates the charge that would be collected when the corresponding activity is triggered. This field is associated with the ACTIVITY.ID field. The charge defined will correspond to the CHARGE property. These properties and their conditions would be defined in the product designer of an product.\nValidation rule.\nShould be a valid AA.PROPERTY belonging to the CHARGE property class.\n"
                                                                },
                                                                "appplicationPeriod": {
                                                                    "type": "string",
                                                                    "description": "This will have to accept a valid T24 period.This Field will denote the application period for current aplication Method.\n"
                                                                },
                                                                "applicationMethod": {
                                                                    "type": "string",
                                                                    "description": "This will hold three values either DUE or CAPITALISE or DEFER.This Field denote which application method(DUE or CAPITALISE or DEFER)should be taken while applying activity charges.\n",
                                                                    "enum": [
                                                                        "DUE",
                                                                        "CAPITALISE",
                                                                        "DEFER"
                                                                    ]
                                                                },
                                                                "chargeAutoSettle": {
                                                                    "type": "string",
                                                                    "description": "This field aids turning off the automatic settlement for the corresponding charge property. If the field is set as â€˜Yesâ€™ settlement processing will be done for the assocaited charge property when settlement property class is configured for â€˜Chargeâ€™ payment type.\nAllowed Values:.\nâ€˜Yesâ€™ or â€˜Noâ€™.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "settleActivity": {
                                            "type": "string",
                                            "description": "Defines the repayment activity to be triggered when there is unallocated credit. Triggered as secondary activity of Activity charge make due.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "messaging": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "restriction": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "alerts": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "changeProduct": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "changelPeriod": {
                                            "type": "string",
                                            "description": "The user can define a Product for the arrangement to change to after a period of time (e.g. 6 months) or on a specific date. A period (say 6M, 12M) may be stated in this field. The arrangement start date would be considered as the base date for computing the period. For subsequent.\nchange product events, the last change product date is considered as base date and not the arrangement start date.\nValidation rule:.\nValid PERIOD field.\nMaximum of 4 characters.\n"
                                        },
                                        "changeActivity": {
                                            "type": "string",
                                            "description": "This Field will determine which Activity will be trigger during Loan Renewal.\nMandatory if RENEWAL.DATE is used. Options:.\nROLLOVER.\nRESET.\nCHANGE.PRODUCT.\n"
                                        },
                                        "productId": {
                                            "type": "string",
                                            "description": "This field denotes product of the arrangement contract. The characteristics of the arrangement is derived from the Product to which it is linked to.\nAn arrangement product and arrangement contract is a series of properties (AA.PROPERTY) relating to different components (AA.PROPERTY.CLASS). Each product has a set of mandatory components and optional components.\nIt is possible to change the product of the arrangement during its life-cycle subject to certain restrictions. For each product change this field is updated along with the effective date of change.\n"
                                        },
                                        "changeDate": {
                                            "type": "string",
                                            "format": "date",
                                            "description": "This field indicates the date on which the arrangement would change from a existing product to a new product.\nBoth date and period are not allowed together. System would ignore the DATE.CONVENTION stated.\nValidation rule:.\nMust be a valid Date.\nMaximum of 11 Alphanumeric characters allowed.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "documentfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "preclosurefee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "newarrfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "judoloanvarfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "ddrejectfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "dischargefee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "rtgsfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "sundryfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "breakcost": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "mandatefee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "closure": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "constraint": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "customer": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "customers": {
                                            "type": "array",
                                            "description": "This field denotes the customer(s) of the Arrangement contract.\nThis field is required to be input for new arrangement, takeover, and Change primary customer activities.\nAssociated multi-value with CUSTOMER.ROLE field.\n1 -6 numeric character customer number. or 3 - 10 alphanumeric character customer mnemonic. (mandatory input)\nMust be either a valid customer number or customer mnemonic of a customer on the CUSTOMER file.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "partyId": {
                                                        "type": "string",
                                                        "description": "This field denotes the customer(s) of the Arrangement contract.\nThis field is required to be input for new arrangement, takeover, and Change primary customer activities.\nAssociated multi-value with CUSTOMER.ROLE field.\nValidation Rules:\n1 -6 numeric character customer number. or 3 - 10 alphanumeric character customer mnemonic. (mandatory input).\nMust be either a valid customer number or customer mnemonic of a customer on the CUSTOMER file.\n"
                                                    },
                                                    "partyRole": {
                                                        "type": "string",
                                                        "description": "Associated with CUSTOMER field. Denotes the role of the customer in the Arrangement.\nValidation Rules:\nMandatory input. If not input by the user, defaulted with the system created role 'Owner'.\nMust be a valid record in AA.CUSTOMER.ROLE table.\n"
                                                    },
                                                    "taxLiabilityPercentage": {
                                                        "type": "number",
                                                        "description": "This field indicates the ownership percentage of the customer in the arrangement with respect to tax liability. Based on the percentage defined for each customer, income will be split and tax will be calculated using the respective tax percentage of each customer and the income split.\nExample:.\nCustomer 1 - 50%.\nCustomer 2 - 50%.\nInterest capitalization amount: $1000.\nTax percentage for customer 1 is 10% and for customer 2 is 0% (since the customer is minor).\nNow the Tax will be calculated by applying 10% on $500 and 0% on $ 500. So the net tax amount will be $50 for which tax accounting will be raised.\nAssociated with CUSTOMER field.\nValidation Rules:\n* Must be equal or less than 100%.\n* Sum of the percentage cannot be more than 100%.\n"
                                                    },
                                                    "limitAllocactionPercentage": {
                                                        "type": "number",
                                                        "description": "This field indicates the ownership percentage of the customer in the arrangement with respect to limit liability. Limit will be checked for the customer for whom this field is defined.\nAssociated with CUSTOMER field.\nValidation Rules:\nMust be equal to 100% and definition can be done only for one customer who is also the limit customer.\nSum of the percentage cannot be more than 100%.\n"
                                                    },
                                                    "GLAllocactionPercentage": {
                                                        "type": "number",
                                                        "description": "This field indicates the ownership percentage of the customer in the arrangement with respect to GL reporting. Customer in the associated field will be used for balance sheet reporting purposes.\nAssociated with CUSTOMER field.\nValidation Rules:\nMust be equal to 100% and definition can be done only for one customer who is also the limit customer.\nSum of the percentage cannot be more than 100%.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "jointLiability": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "principaldrint": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "interest": {
                                            "type": "array",
                                            "description": "",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "fixed": {
                                                        "type": "string",
                                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA fixed rate is directly entered by the user specifying the Defined Property and is not defined by an index table. Fixed rates are entered as positive numbers unless a negative rate is allowed.\nThis field is part of a multi value set of fields including FIXED.RATE, FLOATING.INDEX, PERIODIC.INDEX, PERIODIC.PERIOD, PERIODIC.BASE, MARGIN.TYPE, MARGIN.OPER, MARGIN.RATE, TIER.MIN.RATE, TIER.MAX.RATE, TIER.AMOUNT,TIER.PERCENT.\n"
                                                    },
                                                    "floating": {
                                                        "type": "string",
                                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA floating interest rate is tied to a variable base rate (i.e. BASIC.INTEREST). During interest calculation, T24 will use the currency specific rate applicable for the calculation date (i.e. the rate used for the calculation will change whenever the base rate is changed).\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "spread": {
                                                        "type": "string",
                                                        "description": "It would be possible to specify that the rate for a given tier be â€˜Linkedâ€™, by setting the field Linked Rate to Yes.\nThis can be mixed with normal rate calculations as well.\nWhere the Linked Rate is set to Yes, system would expect that an Arrangement reference in given in the â€˜Linked Arrangementâ€™ field along with the Interest property to be linked to.\n"
                                                    },
                                                    "minMaxRate": {
                                                        "type": "string",
                                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "maxRate": {
                                                        "type": "string",
                                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "effectiveRate": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "negativeRate": {
                                                        "type": "string",
                                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                                    },
                                                    "orPercent": {
                                                        "type": "number",
                                                        "description": "The tier percent relates to the field RATE.TIER.TYPE and percentages can be entered if BAND is selected.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. Either TIER.PERCENT or TIER.AMOUNT can be entered by not both. If TIER.PERCENT is defined, then the Sum of Tier percentage should be 100%.\n"
                                                    },
                                                    "margins": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "margin": {
                                                                    "type": "string",
                                                                    "description": "Identifies whether there are single or multiple margins.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                                },
                                                                "marginOperation": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "attributes": {
                                                        "type": "string",
                                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "description": "This field along with FIELD and OPERAND, helps the user to set the conditions for the Alert to be triggered. Holds the actual value of the field on which the criteria is based. If a value is provided at the event definition level, then that value is defaulted here. If not, the user can provide the value at the time of Subscribing.\nThe fields from FIELD to VALUE are displayed in this subscription screen only when INHERIT is set to Yes in the corresponding TEC.ITEMS record. These set of fields define the criteria for alerts.\n"
                                                    },
                                                    "linkedArrangement": {
                                                        "type": "string",
                                                        "description": "Where at least one tier is set to be Linked Rate, the Arrangement to be linked for calculating the Interest Rate, must be specified here (or automatically defaulted by the system, where a Limit is attached)\n"
                                                    },
                                                    "attribute": {
                                                        "type": "string",
                                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "periodicInterest": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "periodicIndex": {
                                                        "type": "string",
                                                        "description": "A periodic rate is tied to an index (e.g. LIBOR) which is dependent on a period of time (e.g. term) and possibly an amount. Once the arrangement is active, the rate is fixed until it is reset. Periodic rates can be reset at a pre-determined frequency.\nTo define a periodic rate, the user specifies:.\nPERIODIC.INTEREST index to use.\nPeriod (this will default to TERM if a Term Amount Property exists).\nInterest selection method if the term is not found on the index. The option currently available is INTERPOLATE.\nRate Reset period.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "periodicRate": {
                                                        "type": "string",
                                                        "description": "Indicates the rate on which the index runs on the date stated in the key. When a periodic index is used and the field is left blank, then system computes the rate from PERIODIC.INTEREST and defaults it here. When a rate is already present(say, the user changes the system computed rate), then system does not compute the new rate.\nValidation Rules:\nSystem defaulted and modifiable.\nStandard Rate field.\nValid only if Periodic index is stated.\n"
                                                    },
                                                    "periodicPeriodType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "periodicPeriod": {
                                                        "type": "string",
                                                        "description": "Defines the interest period to be used when linking to PERIODIC.INTEREST.(This will default to TERM if a Term Amount Property exists),. When a period is stated in Years or Weeks, they would be converted to Months and Days respectively and then located on the PI table.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "periodicMethod": {
                                                        "type": "string",
                                                        "description": "If system does not find a interest rate in the correct bucket of PERIODIC.INTEREST table, it automatically applies a method to arrive at a rate chosen by this method.\nValid method is:.\nINTERPOLATE - System automatically interpolates the rate. This is the DEFAULT option as well.\n"
                                                    },
                                                    "initialResetDate": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": ""
                                                    },
                                                    "periodicReset": {
                                                        "type": "string",
                                                        "description": "This indicates the reset period of the index stated. System would automatically reset the PERIODIC.RATE at the frequency stated in this field. Applicable only at Arrangement level. Periodic index may still be used without this field meaning, it never resets the computed rate.\nValidation rule:.\nValid PERIOD field.\n"
                                                    },
                                                    "effectiveRate": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "negativeRate": {
                                                        "type": "string",
                                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                                    },
                                                    "margins": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "marginType": {
                                                                    "type": "string",
                                                                    "description": "Identifies whether there are single or multiple margins\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                                },
                                                                "marginOperation": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "activites": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "onActivity": {
                                                        "type": "string",
                                                        "description": "When the periodic interest rate needs to be recalculated for certain activities, this field in combination with RECALCULATE may be used to setup the activity for which interest needs to be recalculated.\nValidation Rules:\n1. Applicable only for Periodic interest rate recalculation.\n2. Must be a valid activity in AA.ACTIVITY.\n"
                                                    },
                                                    "recalculate": {
                                                        "type": "string",
                                                        "description": "Related to ON.ACTIVITY activity, when flagged to RATE, system will recalculate Periodic rate when the activity setup in ON.ACTIVITY is processed. When the value is NOTHING periodic rate would not be recalculated when the activity setup in ON.ACTIVITY is processed.\nValidation Rules:\n1. Mandatory when ON.ACTIVITY is setup.\nThe fields ON.ACTIVITY and RECALCULATE in interest property class will be enhanced to allow user to define when to recalculate â€˜Profit Amountâ€™.\nAll activities which could result in payment schedule recalculation can be configured to recalculate â€˜Profit Amountâ€™ i.e., activities with payment schedule calculate and update action.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "references": {
                                            "type": "array",
                                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "customType": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    },
                                                    "customName": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    },
                                                    "customValue": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "tiers": {
                                            "type": "string",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n"
                                        },
                                        "linkedProperty": {
                                            "type": "string",
                                            "description": "This field will be used to specify the Interest Property of the Linked Arrangement that should be referred to, for getting the Interest Rate.\nWhere at least one tier is set to be â€˜Linked Rateâ€™, this must be specified.\n"
                                        },
                                        "dayBasis": {
                                            "type": "string",
                                            "description": "T24 can calculate interest based upon several different day basis types. Each T24 Interest Day Basis type is represented as a numerator and denominator.\nNumerator (interest days).\no 360 Each month is considered to have 30 days.\no 366 The exact number of days will be used.\nDenominator (days in the year).\no 360 Each year is considered to have 360 days.\no 365 Each year is considered to have 365 days.\no 366 The exact number of days in the year will be used (365 or 366).\nT24 allows the following interest day basis types:.\nType Notes.\nA (360/360) A1 and A2 are variations which alter the method of treating a month as 30 days.\nB (366/360).\nC (366/366).\nD (360/366).\nE (366/365).\nF (360/365) F1 and F2 are variations which alter the method of treating a month as 30 days.\nThis is a Mandatory field.\n"
                                        },
                                        "calcThreshold": {
                                            "type": "string",
                                            "description": "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated.\n"
                                        },
                                        "accrualRule": {
                                            "type": "string",
                                            "description": "When accruing interest,T24 must determine which amounts to include in each day's balance, the actual days to include in the period (e.g. first day, last day) and how to round any calculations.\nT24 allows users to define the calculation method to use, by specifying an accrual rule in EB.ACCRUAL.PARAM. Users can define the following:.\nFirst Day Inclusive (Yes/No).\nLast Day Inclusive (Yes/No).\nRounding Rule (Natural, Down, Up, Currency, None).\nIntermediate Calculation Rounding (Yes/No).\nCredit value date adjustment.\nDebit value date adjustment.\n"
                                        },
                                        "compounding": {
                                            "type": "string",
                                            "description": "T24 supports the compounding of both debit and credit interest.\nCompounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year. This field defines the number of compounding periods to be applied.\nNote that the compounding type provides a factor in the calculation only and does not actually cause the base principal amount to be actually increased by the calculated interest amount.\nThe following compound frequencies are supported:.\nDAILY.\nInterest is compounded 360/5/6 times a year (from days in year in INTEREST.BASIS).\nWEEKn.\nInterest is compounded 52/n times per year based on a number of WEEKS.\n-- Bi-weekly compounding should be defined as WEEK2 and will result in 26 periods.\n-- Four-Weekly compounding should be defined as WEEK4 and results in 13 periods.\nMnn.\nInterest is compounded 12/n times a year based on a numberof months.\n-- Monthly compounding should be defined as M01 and will result in 12 periods.\n-- Bi-Monthly should be defined as M02 and will result in 6 periods.\n-- Quarterly should be defined as M03 and will result in 4 periods.\n-- Semi-Annual should be defined as M06 and will result in 6 periods.\n-- Annual should be defined as M12 and will result in 1 period.\n-- Bi-Annual should be defined as M24 and will result in 0.5 periods.\n-- Any number of months up to 99 may be defined and results in 12/n periods.\nTWMTH.\nInterest is compounded twice a month resulting in 24 periods as opposed to WEEK2.\nwhich results in 26 periods.\nNnnn.\n- Compounding takes place nnn times per year.\n"
                                        },
                                        "compoundYieldMethod": {
                                            "type": "string",
                                            "description": "This field indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate. System uses the below formula to calculate the interest amount,.\nDaily Effective Rate(ERd) = (1+Interest Rate)^(1/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\nWhen the field is set as NULL the effective rate is calculated based on the compounding frequency defined in the field COMPOUND.TYPE using the below formula,.\nDaily Effective Rate(ERd) = (1+Interest Rate/Compound Freq)^(Compound Freq/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\n"
                                        },
                                        "minIntAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field indicates the minimum interest amount to be posted for an arrangement/account.\nIf the calculated interest amount is less than the amount specified in this field, system will waive the interest amount or adjust the interest amount based on the option set in the field MIN.INT.WAIVE.\n"
                                        },
                                        "minIntWaive": {
                                            "type": "string",
                                            "description": "This field indicates if the calculated interest amount has to be waived or adjusted.\nIf the field is set to YES, then the system will waive the interest amount if it is less than the MIN.INT.AMOUNT specified.\nIf NULL value is set and if the calculated interest amount is less than the MIN.INT.AMOUNT specified, then system will post the minimum interest amount.\n"
                                        },
                                        "referLimit": {
                                            "type": "string",
                                            "description": "For an arrangement under ACCOUNTS Product Line, it is possible link the first tier amount of debit interest to the LIMIT record attached.\nIt can be achieved by setting the field REFER.LIMIT in INTEREST property condition as â€˜YESâ€™. This functionality can be enabled only if the LIMIT is managed by AA.\n"
                                        },
                                        "suppressAccrual": {
                                            "type": "string",
                                            "description": "The Field accepts the options 'YES' or 'ALTERNATE'.\nIndicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property.\nFor Example:.\nIt will be set as YES by the system if the DONOR.ACCRUAL field is set as SUPPRESS for any product / arrangement in INTEREST.COMPENSTION property of a Bundle arrangement.\nIf it is set as 'ALTERNATE' for a property then the Accrual will be suppressed for the property for which it is set and Accrual will happen for the Alternate property which is set in Activity Restriction.\nBlank value in this field denotes that there is no suppression of accrual.\nThis is a Non Mandatory field.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "penalinterest": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "interest": {
                                            "type": "array",
                                            "description": "",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "fixed": {
                                                        "type": "string",
                                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA fixed rate is directly entered by the user specifying the Defined Property and is not defined by an index table. Fixed rates are entered as positive numbers unless a negative rate is allowed.\nThis field is part of a multi value set of fields including FIXED.RATE, FLOATING.INDEX, PERIODIC.INDEX, PERIODIC.PERIOD, PERIODIC.BASE, MARGIN.TYPE, MARGIN.OPER, MARGIN.RATE, TIER.MIN.RATE, TIER.MAX.RATE, TIER.AMOUNT,TIER.PERCENT.\n"
                                                    },
                                                    "floating": {
                                                        "type": "string",
                                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA floating interest rate is tied to a variable base rate (i.e. BASIC.INTEREST). During interest calculation, T24 will use the currency specific rate applicable for the calculation date (i.e. the rate used for the calculation will change whenever the base rate is changed).\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "spread": {
                                                        "type": "string",
                                                        "description": "It would be possible to specify that the rate for a given tier be â€˜Linkedâ€™, by setting the field Linked Rate to Yes.\nThis can be mixed with normal rate calculations as well.\nWhere the Linked Rate is set to Yes, system would expect that an Arrangement reference in given in the â€˜Linked Arrangementâ€™ field along with the Interest property to be linked to.\n"
                                                    },
                                                    "minMaxRate": {
                                                        "type": "string",
                                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "maxRate": {
                                                        "type": "string",
                                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "effectiveRate": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "negativeRate": {
                                                        "type": "string",
                                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                                    },
                                                    "orPercent": {
                                                        "type": "number",
                                                        "description": "The tier percent relates to the field RATE.TIER.TYPE and percentages can be entered if BAND is selected.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. Either TIER.PERCENT or TIER.AMOUNT can be entered by not both. If TIER.PERCENT is defined, then the Sum of Tier percentage should be 100%.\n"
                                                    },
                                                    "margins": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "margin": {
                                                                    "type": "string",
                                                                    "description": "Identifies whether there are single or multiple margins.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                                },
                                                                "marginOperation": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "attributes": {
                                                        "type": "string",
                                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "description": "This field along with FIELD and OPERAND, helps the user to set the conditions for the Alert to be triggered. Holds the actual value of the field on which the criteria is based. If a value is provided at the event definition level, then that value is defaulted here. If not, the user can provide the value at the time of Subscribing.\nThe fields from FIELD to VALUE are displayed in this subscription screen only when INHERIT is set to Yes in the corresponding TEC.ITEMS record. These set of fields define the criteria for alerts.\n"
                                                    },
                                                    "linkedArrangement": {
                                                        "type": "string",
                                                        "description": "Where at least one tier is set to be Linked Rate, the Arrangement to be linked for calculating the Interest Rate, must be specified here (or automatically defaulted by the system, where a Limit is attached)\n"
                                                    },
                                                    "attribute": {
                                                        "type": "string",
                                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "periodicInterest": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "periodicIndex": {
                                                        "type": "string",
                                                        "description": "A periodic rate is tied to an index (e.g. LIBOR) which is dependent on a period of time (e.g. term) and possibly an amount. Once the arrangement is active, the rate is fixed until it is reset. Periodic rates can be reset at a pre-determined frequency.\nTo define a periodic rate, the user specifies:.\nPERIODIC.INTEREST index to use.\nPeriod (this will default to TERM if a Term Amount Property exists).\nInterest selection method if the term is not found on the index. The option currently available is INTERPOLATE.\nRate Reset period.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "periodicRate": {
                                                        "type": "string",
                                                        "description": "Indicates the rate on which the index runs on the date stated in the key. When a periodic index is used and the field is left blank, then system computes the rate from PERIODIC.INTEREST and defaults it here. When a rate is already present(say, the user changes the system computed rate), then system does not compute the new rate.\nValidation Rules:\nSystem defaulted and modifiable.\nStandard Rate field.\nValid only if Periodic index is stated.\n"
                                                    },
                                                    "periodicPeriodType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "periodicPeriod": {
                                                        "type": "string",
                                                        "description": "Defines the interest period to be used when linking to PERIODIC.INTEREST.(This will default to TERM if a Term Amount Property exists),. When a period is stated in Years or Weeks, they would be converted to Months and Days respectively and then located on the PI table.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "periodicMethod": {
                                                        "type": "string",
                                                        "description": "If system does not find a interest rate in the correct bucket of PERIODIC.INTEREST table, it automatically applies a method to arrive at a rate chosen by this method.\nValid method is:.\nINTERPOLATE - System automatically interpolates the rate. This is the DEFAULT option as well.\n"
                                                    },
                                                    "initialResetDate": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": ""
                                                    },
                                                    "periodicReset": {
                                                        "type": "string",
                                                        "description": "This indicates the reset period of the index stated. System would automatically reset the PERIODIC.RATE at the frequency stated in this field. Applicable only at Arrangement level. Periodic index may still be used without this field meaning, it never resets the computed rate.\nValidation rule:.\nValid PERIOD field.\n"
                                                    },
                                                    "effectiveRate": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "negativeRate": {
                                                        "type": "string",
                                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                                    },
                                                    "margins": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "marginType": {
                                                                    "type": "string",
                                                                    "description": "Identifies whether there are single or multiple margins\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                                },
                                                                "marginOperation": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "activites": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "onActivity": {
                                                        "type": "string",
                                                        "description": "When the periodic interest rate needs to be recalculated for certain activities, this field in combination with RECALCULATE may be used to setup the activity for which interest needs to be recalculated.\nValidation Rules:\n1. Applicable only for Periodic interest rate recalculation.\n2. Must be a valid activity in AA.ACTIVITY.\n"
                                                    },
                                                    "recalculate": {
                                                        "type": "string",
                                                        "description": "Related to ON.ACTIVITY activity, when flagged to RATE, system will recalculate Periodic rate when the activity setup in ON.ACTIVITY is processed. When the value is NOTHING periodic rate would not be recalculated when the activity setup in ON.ACTIVITY is processed.\nValidation Rules:\n1. Mandatory when ON.ACTIVITY is setup.\nThe fields ON.ACTIVITY and RECALCULATE in interest property class will be enhanced to allow user to define when to recalculate â€˜Profit Amountâ€™.\nAll activities which could result in payment schedule recalculation can be configured to recalculate â€˜Profit Amountâ€™ i.e., activities with payment schedule calculate and update action.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "references": {
                                            "type": "array",
                                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "customType": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    },
                                                    "customName": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    },
                                                    "customValue": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "tiers": {
                                            "type": "string",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n"
                                        },
                                        "linkedProperty": {
                                            "type": "string",
                                            "description": "This field will be used to specify the Interest Property of the Linked Arrangement that should be referred to, for getting the Interest Rate.\nWhere at least one tier is set to be â€˜Linked Rateâ€™, this must be specified.\n"
                                        },
                                        "dayBasis": {
                                            "type": "string",
                                            "description": "T24 can calculate interest based upon several different day basis types. Each T24 Interest Day Basis type is represented as a numerator and denominator.\nNumerator (interest days).\no 360 Each month is considered to have 30 days.\no 366 The exact number of days will be used.\nDenominator (days in the year).\no 360 Each year is considered to have 360 days.\no 365 Each year is considered to have 365 days.\no 366 The exact number of days in the year will be used (365 or 366).\nT24 allows the following interest day basis types:.\nType Notes.\nA (360/360) A1 and A2 are variations which alter the method of treating a month as 30 days.\nB (366/360).\nC (366/366).\nD (360/366).\nE (366/365).\nF (360/365) F1 and F2 are variations which alter the method of treating a month as 30 days.\nThis is a Mandatory field.\n"
                                        },
                                        "calcThreshold": {
                                            "type": "string",
                                            "description": "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated.\n"
                                        },
                                        "accrualRule": {
                                            "type": "string",
                                            "description": "When accruing interest,T24 must determine which amounts to include in each day's balance, the actual days to include in the period (e.g. first day, last day) and how to round any calculations.\nT24 allows users to define the calculation method to use, by specifying an accrual rule in EB.ACCRUAL.PARAM. Users can define the following:.\nFirst Day Inclusive (Yes/No).\nLast Day Inclusive (Yes/No).\nRounding Rule (Natural, Down, Up, Currency, None).\nIntermediate Calculation Rounding (Yes/No).\nCredit value date adjustment.\nDebit value date adjustment.\n"
                                        },
                                        "compounding": {
                                            "type": "string",
                                            "description": "T24 supports the compounding of both debit and credit interest.\nCompounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year. This field defines the number of compounding periods to be applied.\nNote that the compounding type provides a factor in the calculation only and does not actually cause the base principal amount to be actually increased by the calculated interest amount.\nThe following compound frequencies are supported:.\nDAILY.\nInterest is compounded 360/5/6 times a year (from days in year in INTEREST.BASIS).\nWEEKn.\nInterest is compounded 52/n times per year based on a number of WEEKS.\n-- Bi-weekly compounding should be defined as WEEK2 and will result in 26 periods.\n-- Four-Weekly compounding should be defined as WEEK4 and results in 13 periods.\nMnn.\nInterest is compounded 12/n times a year based on a numberof months.\n-- Monthly compounding should be defined as M01 and will result in 12 periods.\n-- Bi-Monthly should be defined as M02 and will result in 6 periods.\n-- Quarterly should be defined as M03 and will result in 4 periods.\n-- Semi-Annual should be defined as M06 and will result in 6 periods.\n-- Annual should be defined as M12 and will result in 1 period.\n-- Bi-Annual should be defined as M24 and will result in 0.5 periods.\n-- Any number of months up to 99 may be defined and results in 12/n periods.\nTWMTH.\nInterest is compounded twice a month resulting in 24 periods as opposed to WEEK2.\nwhich results in 26 periods.\nNnnn.\n- Compounding takes place nnn times per year.\n"
                                        },
                                        "compoundYieldMethod": {
                                            "type": "string",
                                            "description": "This field indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate. System uses the below formula to calculate the interest amount,.\nDaily Effective Rate(ERd) = (1+Interest Rate)^(1/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\nWhen the field is set as NULL the effective rate is calculated based on the compounding frequency defined in the field COMPOUND.TYPE using the below formula,.\nDaily Effective Rate(ERd) = (1+Interest Rate/Compound Freq)^(Compound Freq/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\n"
                                        },
                                        "minIntAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field indicates the minimum interest amount to be posted for an arrangement/account.\nIf the calculated interest amount is less than the amount specified in this field, system will waive the interest amount or adjust the interest amount based on the option set in the field MIN.INT.WAIVE.\n"
                                        },
                                        "minIntWaive": {
                                            "type": "string",
                                            "description": "This field indicates if the calculated interest amount has to be waived or adjusted.\nIf the field is set to YES, then the system will waive the interest amount if it is less than the MIN.INT.AMOUNT specified.\nIf NULL value is set and if the calculated interest amount is less than the MIN.INT.AMOUNT specified, then system will post the minimum interest amount.\n"
                                        },
                                        "referLimit": {
                                            "type": "string",
                                            "description": "For an arrangement under ACCOUNTS Product Line, it is possible link the first tier amount of debit interest to the LIMIT record attached.\nIt can be achieved by setting the field REFER.LIMIT in INTEREST property condition as â€˜YESâ€™. This functionality can be enabled only if the LIMIT is managed by AA.\n"
                                        },
                                        "suppressAccrual": {
                                            "type": "string",
                                            "description": "The Field accepts the options 'YES' or 'ALTERNATE'.\nIndicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property.\nFor Example:.\nIt will be set as YES by the system if the DONOR.ACCRUAL field is set as SUPPRESS for any product / arrangement in INTEREST.COMPENSTION property of a Bundle arrangement.\nIf it is set as 'ALTERNATE' for a property then the Accrual will be suppressed for the property for which it is set and Accrual will happen for the Alternate property which is set in Activity Restriction.\nBlank value in this field denotes that there is no suppression of accrual.\nThis is a Non Mandatory field.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "principalint": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "interest": {
                                            "type": "array",
                                            "description": "",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "fixed": {
                                                        "type": "string",
                                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA fixed rate is directly entered by the user specifying the Defined Property and is not defined by an index table. Fixed rates are entered as positive numbers unless a negative rate is allowed.\nThis field is part of a multi value set of fields including FIXED.RATE, FLOATING.INDEX, PERIODIC.INDEX, PERIODIC.PERIOD, PERIODIC.BASE, MARGIN.TYPE, MARGIN.OPER, MARGIN.RATE, TIER.MIN.RATE, TIER.MAX.RATE, TIER.AMOUNT,TIER.PERCENT.\n"
                                                    },
                                                    "floating": {
                                                        "type": "string",
                                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA floating interest rate is tied to a variable base rate (i.e. BASIC.INTEREST). During interest calculation, T24 will use the currency specific rate applicable for the calculation date (i.e. the rate used for the calculation will change whenever the base rate is changed).\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "spread": {
                                                        "type": "string",
                                                        "description": "It would be possible to specify that the rate for a given tier be â€˜Linkedâ€™, by setting the field Linked Rate to Yes.\nThis can be mixed with normal rate calculations as well.\nWhere the Linked Rate is set to Yes, system would expect that an Arrangement reference in given in the â€˜Linked Arrangementâ€™ field along with the Interest property to be linked to.\n"
                                                    },
                                                    "minMaxRate": {
                                                        "type": "string",
                                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "maxRate": {
                                                        "type": "string",
                                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "effectiveRate": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "negativeRate": {
                                                        "type": "string",
                                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                                    },
                                                    "orPercent": {
                                                        "type": "number",
                                                        "description": "The tier percent relates to the field RATE.TIER.TYPE and percentages can be entered if BAND is selected.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. Either TIER.PERCENT or TIER.AMOUNT can be entered by not both. If TIER.PERCENT is defined, then the Sum of Tier percentage should be 100%.\n"
                                                    },
                                                    "margins": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "margin": {
                                                                    "type": "string",
                                                                    "description": "Identifies whether there are single or multiple margins.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                                },
                                                                "marginOperation": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "attributes": {
                                                        "type": "string",
                                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "description": "This field along with FIELD and OPERAND, helps the user to set the conditions for the Alert to be triggered. Holds the actual value of the field on which the criteria is based. If a value is provided at the event definition level, then that value is defaulted here. If not, the user can provide the value at the time of Subscribing.\nThe fields from FIELD to VALUE are displayed in this subscription screen only when INHERIT is set to Yes in the corresponding TEC.ITEMS record. These set of fields define the criteria for alerts.\n"
                                                    },
                                                    "linkedArrangement": {
                                                        "type": "string",
                                                        "description": "Where at least one tier is set to be Linked Rate, the Arrangement to be linked for calculating the Interest Rate, must be specified here (or automatically defaulted by the system, where a Limit is attached)\n"
                                                    },
                                                    "attribute": {
                                                        "type": "string",
                                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "periodicInterest": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "periodicIndex": {
                                                        "type": "string",
                                                        "description": "A periodic rate is tied to an index (e.g. LIBOR) which is dependent on a period of time (e.g. term) and possibly an amount. Once the arrangement is active, the rate is fixed until it is reset. Periodic rates can be reset at a pre-determined frequency.\nTo define a periodic rate, the user specifies:.\nPERIODIC.INTEREST index to use.\nPeriod (this will default to TERM if a Term Amount Property exists).\nInterest selection method if the term is not found on the index. The option currently available is INTERPOLATE.\nRate Reset period.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "periodicRate": {
                                                        "type": "string",
                                                        "description": "Indicates the rate on which the index runs on the date stated in the key. When a periodic index is used and the field is left blank, then system computes the rate from PERIODIC.INTEREST and defaults it here. When a rate is already present(say, the user changes the system computed rate), then system does not compute the new rate.\nValidation Rules:\nSystem defaulted and modifiable.\nStandard Rate field.\nValid only if Periodic index is stated.\n"
                                                    },
                                                    "periodicPeriodType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "periodicPeriod": {
                                                        "type": "string",
                                                        "description": "Defines the interest period to be used when linking to PERIODIC.INTEREST.(This will default to TERM if a Term Amount Property exists),. When a period is stated in Years or Weeks, they would be converted to Months and Days respectively and then located on the PI table.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "periodicMethod": {
                                                        "type": "string",
                                                        "description": "If system does not find a interest rate in the correct bucket of PERIODIC.INTEREST table, it automatically applies a method to arrive at a rate chosen by this method.\nValid method is:.\nINTERPOLATE - System automatically interpolates the rate. This is the DEFAULT option as well.\n"
                                                    },
                                                    "initialResetDate": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": ""
                                                    },
                                                    "periodicReset": {
                                                        "type": "string",
                                                        "description": "This indicates the reset period of the index stated. System would automatically reset the PERIODIC.RATE at the frequency stated in this field. Applicable only at Arrangement level. Periodic index may still be used without this field meaning, it never resets the computed rate.\nValidation rule:.\nValid PERIOD field.\n"
                                                    },
                                                    "effectiveRate": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "negativeRate": {
                                                        "type": "string",
                                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                                    },
                                                    "margins": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "marginType": {
                                                                    "type": "string",
                                                                    "description": "Identifies whether there are single or multiple margins\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                                },
                                                                "marginOperation": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "activites": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "onActivity": {
                                                        "type": "string",
                                                        "description": "When the periodic interest rate needs to be recalculated for certain activities, this field in combination with RECALCULATE may be used to setup the activity for which interest needs to be recalculated.\nValidation Rules:\n1. Applicable only for Periodic interest rate recalculation.\n2. Must be a valid activity in AA.ACTIVITY.\n"
                                                    },
                                                    "recalculate": {
                                                        "type": "string",
                                                        "description": "Related to ON.ACTIVITY activity, when flagged to RATE, system will recalculate Periodic rate when the activity setup in ON.ACTIVITY is processed. When the value is NOTHING periodic rate would not be recalculated when the activity setup in ON.ACTIVITY is processed.\nValidation Rules:\n1. Mandatory when ON.ACTIVITY is setup.\nThe fields ON.ACTIVITY and RECALCULATE in interest property class will be enhanced to allow user to define when to recalculate â€˜Profit Amountâ€™.\nAll activities which could result in payment schedule recalculation can be configured to recalculate â€˜Profit Amountâ€™ i.e., activities with payment schedule calculate and update action.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "references": {
                                            "type": "array",
                                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "customType": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    },
                                                    "customName": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    },
                                                    "customValue": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "tiers": {
                                            "type": "string",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n"
                                        },
                                        "linkedProperty": {
                                            "type": "string",
                                            "description": "This field will be used to specify the Interest Property of the Linked Arrangement that should be referred to, for getting the Interest Rate.\nWhere at least one tier is set to be â€˜Linked Rateâ€™, this must be specified.\n"
                                        },
                                        "dayBasis": {
                                            "type": "string",
                                            "description": "T24 can calculate interest based upon several different day basis types. Each T24 Interest Day Basis type is represented as a numerator and denominator.\nNumerator (interest days).\no 360 Each month is considered to have 30 days.\no 366 The exact number of days will be used.\nDenominator (days in the year).\no 360 Each year is considered to have 360 days.\no 365 Each year is considered to have 365 days.\no 366 The exact number of days in the year will be used (365 or 366).\nT24 allows the following interest day basis types:.\nType Notes.\nA (360/360) A1 and A2 are variations which alter the method of treating a month as 30 days.\nB (366/360).\nC (366/366).\nD (360/366).\nE (366/365).\nF (360/365) F1 and F2 are variations which alter the method of treating a month as 30 days.\nThis is a Mandatory field.\n"
                                        },
                                        "calcThreshold": {
                                            "type": "string",
                                            "description": "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated.\n"
                                        },
                                        "accrualRule": {
                                            "type": "string",
                                            "description": "When accruing interest,T24 must determine which amounts to include in each day's balance, the actual days to include in the period (e.g. first day, last day) and how to round any calculations.\nT24 allows users to define the calculation method to use, by specifying an accrual rule in EB.ACCRUAL.PARAM. Users can define the following:.\nFirst Day Inclusive (Yes/No).\nLast Day Inclusive (Yes/No).\nRounding Rule (Natural, Down, Up, Currency, None).\nIntermediate Calculation Rounding (Yes/No).\nCredit value date adjustment.\nDebit value date adjustment.\n"
                                        },
                                        "compounding": {
                                            "type": "string",
                                            "description": "T24 supports the compounding of both debit and credit interest.\nCompounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year. This field defines the number of compounding periods to be applied.\nNote that the compounding type provides a factor in the calculation only and does not actually cause the base principal amount to be actually increased by the calculated interest amount.\nThe following compound frequencies are supported:.\nDAILY.\nInterest is compounded 360/5/6 times a year (from days in year in INTEREST.BASIS).\nWEEKn.\nInterest is compounded 52/n times per year based on a number of WEEKS.\n-- Bi-weekly compounding should be defined as WEEK2 and will result in 26 periods.\n-- Four-Weekly compounding should be defined as WEEK4 and results in 13 periods.\nMnn.\nInterest is compounded 12/n times a year based on a numberof months.\n-- Monthly compounding should be defined as M01 and will result in 12 periods.\n-- Bi-Monthly should be defined as M02 and will result in 6 periods.\n-- Quarterly should be defined as M03 and will result in 4 periods.\n-- Semi-Annual should be defined as M06 and will result in 6 periods.\n-- Annual should be defined as M12 and will result in 1 period.\n-- Bi-Annual should be defined as M24 and will result in 0.5 periods.\n-- Any number of months up to 99 may be defined and results in 12/n periods.\nTWMTH.\nInterest is compounded twice a month resulting in 24 periods as opposed to WEEK2.\nwhich results in 26 periods.\nNnnn.\n- Compounding takes place nnn times per year.\n"
                                        },
                                        "compoundYieldMethod": {
                                            "type": "string",
                                            "description": "This field indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate. System uses the below formula to calculate the interest amount,.\nDaily Effective Rate(ERd) = (1+Interest Rate)^(1/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\nWhen the field is set as NULL the effective rate is calculated based on the compounding frequency defined in the field COMPOUND.TYPE using the below formula,.\nDaily Effective Rate(ERd) = (1+Interest Rate/Compound Freq)^(Compound Freq/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\n"
                                        },
                                        "minIntAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field indicates the minimum interest amount to be posted for an arrangement/account.\nIf the calculated interest amount is less than the amount specified in this field, system will waive the interest amount or adjust the interest amount based on the option set in the field MIN.INT.WAIVE.\n"
                                        },
                                        "minIntWaive": {
                                            "type": "string",
                                            "description": "This field indicates if the calculated interest amount has to be waived or adjusted.\nIf the field is set to YES, then the system will waive the interest amount if it is less than the MIN.INT.AMOUNT specified.\nIf NULL value is set and if the calculated interest amount is less than the MIN.INT.AMOUNT specified, then system will post the minimum interest amount.\n"
                                        },
                                        "referLimit": {
                                            "type": "string",
                                            "description": "For an arrangement under ACCOUNTS Product Line, it is possible link the first tier amount of debit interest to the LIMIT record attached.\nIt can be achieved by setting the field REFER.LIMIT in INTEREST property condition as â€˜YESâ€™. This functionality can be enabled only if the LIMIT is managed by AA.\n"
                                        },
                                        "suppressAccrual": {
                                            "type": "string",
                                            "description": "The Field accepts the options 'YES' or 'ALTERNATE'.\nIndicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property.\nFor Example:.\nIt will be set as YES by the system if the DONOR.ACCRUAL field is set as SUPPRESS for any product / arrangement in INTEREST.COMPENSTION property of a Bundle arrangement.\nIf it is set as 'ALTERNATE' for a property then the Accrual will be suppressed for the property for which it is set and Accrual will happen for the Alternate property which is set in Activity Restriction.\nBlank value in this field denotes that there is no suppression of accrual.\nThis is a Non Mandatory field.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "limit": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "limitReference": {
                                            "type": "string",
                                            "description": "If the Customer has a Credit Limit covering this Account, this field identifies the type of limit applicable to the Account and forms part of the key to the Limit record containing Credit Limit details. This field is also used to indicate Nostro Accounts.\nExcept for Nostro and Internal Accounts, this field is accessed by the Limits System whenever a debit transaction is processed for this Account.\nIf no Limit Reference is specified, an 'UNAUTHORISED OVERDRAFT' message is displayed and an Override is required before the transaction will be accepted.\nIf a Limit Reference is specified, the corresponding Limit record is checked (see below). If it covers the new Working Balance, the transaction is accepted, otherwise a message is displayed and an Override is required before the transaction will be accepted.\nThe key to the corresponding Limit record is built up as follows: cccccc.nnnnnnn.ss\nWhere 'cccccc' is the Liability number for the Customer in Field CUSTOMER of this record and 'nnnnnnn.ss' is the Limit Reference specified in this field.\n3-9 numeric characters consisting of a 3-7 digit Limit Reference Code and optionally, a 2 digit sequence number separated by '.' Or 'NOSTRO' to denote a Nostro Account (generated automatically by the system). (Optional input. No default.)\nThe Limit Reference Code (nnnnnnn) must be an existing code on the LIMIT.REF table.\nLimit Reference code must be a suitable one for Account records, as defined in the Limit Parameter table.\nThere must be a Limit record corresponding to the key built up as described above.\nError message is generated if single limit is set to 'Y' and one more accounts is attached to same limit (If single limit field is set to 'Y' then the limit can be utilised by one account. If multiple accounts are to utilise a single limit then, single limit field to be defined as 'N' for all such accounts.\n"
                                        },
                                        "expiryDate": {
                                            "type": "string",
                                            "format": "date",
                                            "description": "Specifies the date on which the Limit will expire. But if there are contracts against this limit,  then the limit will move to history only after the contracts mature. Any new drawings against this limit would raise overrides stating that the limit expires before the maturity date.\nWarning of the approach of this date is given on the Limits Approaching Expiry Date overnight report. The number of days prior to Expiry Date that the warning starts to appear is defined by the Expiries Reporting field on the LIMIT.PARAMETER table.\n6 to 11 type D (date) characters. (Defaults to a year from the current run     date.) The date input must be greater than or equal to the Limit Review Date\n"
                                        },
                                        "limitAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "The limit amount which is actually available for use.\nThe amount available under the limit, against which all system limit checks are performed. The value of the ONLINE LIMIT is calculated by the system as described below.\nIf the limit is an unsecured limit, a sub-limit or a secured but fixed limit, the value in this field is always equal to the value in field 21, MAXIMUM TOTAL.\nIf the limit is a variable secured limit, the value in this field is equal to the lower of (a) the MAXIMUM TOTAL or (b) the sum of the SECURED AMT's in field 24 plus the MAXIMUM UNSECURED in field 20.\nNote:      If time bands are in effect (field 25, TIME CODE), the            ONLINE LIMIT amount will reflect the split of the            available limit across these periods. In the case of an            unsecured limit, a sub-limit or a fixed secured limit,            this field will contain the same values as field 26, LIMIT            BAND.            In the case of a variable secured limit, this field will            contain either the same values as field 26, LIMIT BAND            or, if the total ONLINE LIMIT amount is lower than the            MAXIMUM TOTAL in field 21, the ONLINE LIMIT amount            apportioned pro-rata across the time bands in line with            the specified LIMIT BAND split.\n1 to 19 type AMT (standard amount format). (No input, system-generated field) Multivalue field associated with fields 25 to 45.\n"
                                        },
                                        "reviewFreq": {
                                            "type": "string",
                                            "description": "Specifies the next date on which the limit is to be reviewed. This field is mapped to LIMIT record linked to the Arrangement.\nValidation Rules:\nStandard T24 frequency code.\nThe first review date must not be later than the Limit EXPIRY.DATE.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "officers": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "officrers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "otherOfficer": {
                                                        "type": "string",
                                                        "description": ""
                                                    }
                                                }
                                            }
                                        },
                                        "primaryOfficer": {
                                            "type": "string",
                                            "description": "The primary officer responsible for the product/arrangement can be specified. All officers must exist on the T24 DEPT.ACCT.OFFICER file.\nThe primary officer is used as the ACCOUNT.OFFICER in the created ACCOUNT record.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "overdue": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "prRepayment": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "prPrincipalDecrease": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "prPayoff": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "prCurrentBalances": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "schedule": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "payment": {
                                            "type": "array",
                                            "description": "payment",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "paymentType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "paymentMethod": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "paymentFrequency": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "billType": {
                                                        "type": "string",
                                                        "description": "Bill Type would be picked from EB.LOOKUP instead of the hard-coded values of PAYMENT, EXPECTED.\nHowever all the options would not be available for this field within PAYMENT.SCHEDULE.\nThe following values would not be available,.\n1.INFO.\n2.PR.CHARGE.\n3.ACT.CHARGE.\n4.DEF.CHARGE.\n5.DISBURSEMENT.\nOther user defined values may be given which then can be used in Overdue PC to define different aging rules for the BillType.\nWhen a user defined value is captured it would be assumed as PAYMENT type Bill, and not 'Expected' type bill.\nValidations:.\nâ€¢Standard lookup field.\nâ€¢Maximum number of characters is restricted to 15.\nâ€¢INFO, PR.CHARGE, ACT.CHARGE, DEF.CHARGE options not applicable for this field although it is part of the lookup values.\n"
                                                    },
                                                    "billProduced": {
                                                        "type": "string",
                                                        "description": "By default T24 will create the Bill on the due date, however for products which require a Bill notice to be sent in advance of the due date, it is possible for the user to enter the number of days prior. This will result in the due amounts being projected and recorded on the bill.\nNumber of working days prior to the due date when the bill needs to be produced is defined in the field BILL.PRODUCED.\n"
                                                    },
                                                    "autoSettle": {
                                                        "type": "string",
                                                        "description": "By default NULL. If set to NULL, indicates AUTO.SETTLE is not enabled.\n"
                                                    },
                                                    "property": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "propertyId": {
                                                                    "type": "string",
                                                                    "description": "Any alphanumeric character can be used to define the name of the property.\nMaximum of 15 characters are allowed.\n"
                                                                },
                                                                "dueFrequency": {
                                                                    "type": "string",
                                                                    "description": "Indicates the actual frequency when the payment needs to be made due. Due frequency is defined for each payment property under a payment type.\nPayment frequency is defaulted when due frequency is null.\nGenerally both payment and due frequency has same value. When multiple properties are defined for a given payment type, due frequency of one of the property can de different from the payment frequency.\nExample:.\na) M 01 31. M = Monthly. 01 = one monthly intervals. 31 = the last day of the month.\nb) M 03 31 M = Monthly. 03 = three monthly intervals. 31 = the last day of the month.\nc) M 01 10 M=Monthly, 01 = at monthly intervals10 = 10th of the month.\nd) 31 MAR 2006 W , where W= weekly. In this case, the first schedule would fall on 31March 2006.\ne) 31 Mar 2006 BSNSS, where BSNSS = every business day. In this case, the first schedule would fall on 31March 2006.\nStandard T24 Recurrence frequency field.\nInput prohibited for a date prior to the system date.\n"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "payments": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "percentage": {
                                                                    "type": "number",
                                                                    "description": "This field stores the Percentage of holdings to be redeemed/subscribed.This input is only recorded and not used for calculations.\nInput is allowed for SWITCH orders alone.\n"
                                                                },
                                                                "startDate": {
                                                                    "type": "string",
                                                                    "format": "date",
                                                                    "description": "Identifies the Date & Frequency of the Standalone DD for execution.\nThe claim value date is the date component of this field. Hence the date & the frequency has to be given after considering the Claim value date as given in DD.PARAMETER.\nThe date is cycled with the given frequency and this mandate reference is updated in DD.STANDALONE.FQU.LIST with the next execution date.\nWhenever the frequency is modified, then the underlying claim (DD.ITEM) is marked as 'DELETED' and new claim is raised for the given frequency. Incase the Claim is already sent(DD.ITEM status is 'CLAIMSENT'), then override is raised. However the DD.ITEM will not be marked as 'DELETED' as claim file is already generated.\nMandatory when STAND.ALONE.DDI set to Yes\nThis field is sub-divided into two elements: 1. Date 1-9 type D (date format in range 1950-2049) characters. 2. Optional Frequency 1-5 type SS (uppercase alpha or numeric, first character alpha) characters. (Mandatory input)\nThe date input or generated will correspond to the first execution of the Standalone DD.\nUsing the date & frequency in case given , DD.STANDALONE.FQU.LIST is updated with the next execution date.\nAn override will be required if the date input is a non-working day.\nDate entered should be greater than today and should not be more than Termination date.\n"
                                                                },
                                                                "endDate": {
                                                                    "type": "string",
                                                                    "format": "date",
                                                                    "description": ""
                                                                },
                                                                "numberPayments": {
                                                                    "type": "string",
                                                                    "description": "If a frequency has been specified the user can specify a Start Date or it can be defaulted from the Base Date. Additionally an End Date or a Number of Payments can be specified to indicate to T24 when the payments should terminate.\nThis field is part of a multi value set of fields with START.DATE, END.DATE and ACTUAL.AMT.\n"
                                                                },
                                                                "calcAmount": {
                                                                    "type": "number",
                                                                    "format": "int64",
                                                                    "description": "There can be two amounts for each payment definition; Calculated Amount and Actual Amount.\nA calculated amount is determined by T24 based upon the Payment Type and Properties involved.\nSystem maintained(NOINPUT) field.\n"
                                                                },
                                                                "actualAmount": {
                                                                    "type": "number",
                                                                    "format": "int64",
                                                                    "description": "There can be two amounts for each payment definition; Calculated Amount and Actual Amount. An actual amount can be entered by the user to override the calculated amount or manual payments. When adhoc payments are defined we need to define the actual anount for each payment date This field is part of a multi value set of fields with START.DATE, END.DATE and NUM.PAYMENTS.\nFor Disbursement Schedule(Account - Pay), the field is mandatory and sum of the future schedules should sum up to the CUR<Term Amount>.\nValidation Rules:\n1-9 numeric characters plus decimal point and commas.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "amortisationTerm": {
                                            "type": "string",
                                            "description": "If specific amount (residual amount) needs to be collected at the maturity date of the term, we can achieve this either by actually defining the residual amount or by defininng a amortisation term.\nThis field indicates the term for amortisation. The actual payment amount is calculated based on the amortisation term and not on the actual term defined in TERM.AMOUNT property of the arrangement. This calculated payment is then spread across actual term of the arrangement. If the amortisation term is greater than the actual term then we would be left with residual amount at the maturity date.\nAny residual amount must then be paid by the client on maturity of the arrangement. Input in this field is allowed only for Constant, linear payment types. The term can be entered as a number of Days (D), Weeks(W), Months(M) or Years(Y).\n"
                                        },
                                        "residualAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "If a specific amount needs to be collected on the final schedule date, that amount may be stated in this field. The amount stated in this field is 'Exclusive' of any scheduled calculated amount on the final schedule and is always considered to be belonging to ACCOUNT property.\nAs an illustration, if an Annuity Arrangement for 100000 is assumed and an amount of 20000 is stated as RESIDUAL.AMOUNT, the Annuity amount(CALC.AMOUNT) would be computed based on only 80000. If the Annuity amount is say 1500, on the final schedule date, system would make due 1500+20000 = 21500.\nThe residual amount would be recorded in bills under a special payment type called 'RESIDUAL.PRINCIPAL'.\nThe amount stated in this field would be automatically made due on PAYMENT.END.DATE.\nStandard T24 amount field in the arrangement currency.\n"
                                        },
                                        "billsCombined": {
                                            "type": "string",
                                            "description": "Indicates whether bills which have the same due date and are produced on the same date should be combined. In case of capitalisation (where we have two payment one is made due and other capitalised) even if bills combined set to YES, system would generate two separate bills. In another scenario where have one payment type to be made due and two payment types to be capitalised, then system would combine the those two payment types.\nInput allowed should be either YES or NO.\n"
                                        },
                                        "recalcFrequency": {
                                            "type": "string",
                                            "description": "If 'Nothing' is selected in field RECALCULATE, a recalculation frequency should be specified.\nExample:.\na) M 01 31. M = Monthly. 01 = one monthly intervals. 31 = the last day of the month.\nb) M 03 31 M = Monthly. 03 = three monthly intervals. 31 = the last day of the month.\nc) M 01 10 M=Monthly, 01 = at monthly intervals10 = 10th of the month.\nd) 31 MAR 2006 W , where W= weekly. In this case, the first schedule would fall on 31March 2006.\ne) 31 Mar 2006 BSNSS, where BSNSS = every business day. In this case, the first schedule would fall on 31March 2006.\nStandard date format.\nMust be a valid date.\nAn override will be required if the date is not defined on the HOLIDAY table.\nAn override will be required if the date as defined on the HOLIDAY table is a non working day.\nInput prohibited for a date prior to the system date.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "payoff": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "payoutDisburse": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "settlement": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "linkedAccounts": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "linkedAccountType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "linkedAccount": {
                                                        "type": "string",
                                                        "description": ""
                                                    }
                                                }
                                            }
                                        },
                                        "payin": {
                                            "type": "array",
                                            "description": "When PAYIN.ACCOUNT used is an Arrangement Account, then an activity has to be specified to debit that arrangement as well. That activity need to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Debit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYIN.ACCOUNT Required only if the PAYIN.ACCOUNT is an AA Account.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "payinSettlement": {
                                                        "type": "string",
                                                        "description": "The field may be used as a switch to turn off the Settlement instruction temporarily without having the need to clear or delete the field contents. If the field is set to NO, then it means the instructions are not active. Validation Rules: Valid input is Yes or No. Default value is Yes.\n"
                                                    },
                                                    "paymentTypes": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "paymentTypeAccount": {
                                                                    "type": "string",
                                                                    "description": "Payment types for the AA contract that require settlement by DD to be defined.\nValid payment type from AA.PAYMENT.TYPE.\n"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "payinActivity": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "mandateReference": {
                                                                    "type": "string",
                                                                    "format": "date",
                                                                    "description": "The DD mandate to be used if the settlement method is DD. The DD number must be the account of the arrangement.\nShould be a valid Mandate Ref from DD.DDI.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "settlement": {
                                            "type": "array",
                                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "payinAccount": {
                                                        "type": "string",
                                                        "description": "Contains the Account number from where funds are to be debited and Credited against this payment type. Multiple accounts could be defined here and the rules of funding is governed by the PAYIN.AC.DB.RULE field. Validation Rules: Should be a valid T24 ACCOUNT Number.\n"
                                                    },
                                                    "paymentType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "reference": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "payinActivity": {
                                                                    "type": "string",
                                                                    "description": "When PAYIN.ACCOUNT used is an Arrangement Account, then an activity has to be specified to debit that arrangement as well. That activity need to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Debit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYIN.ACCOUNT Required only if the PAYIN.ACCOUNT is an AA Account.\n"
                                                                },
                                                                "payinDbRule": {
                                                                    "type": "string",
                                                                    "description": "The field decides the manner in which system should utilise the funds available in PAYIN.ACCOUNT during settlement process. 1) FULL: System debits the PAYIN account to the extent of the bill amount irrespective of whether or not the funds are avaliable in the specified account. For this purpose, system creates an overdraft in the PAYIN.ACCOUNT in case funds are only partially available provided the PAYIN.ACCOUNT has a limit attached to it. 2) PARTIAL: System debits the PAYIN.ACCOUNT only to the extent of funds availabe. 3) NONE: System would not debit the PAYIN.ACCOUNT if funds are not fully available to settle the bill.\n"
                                                                },
                                                                "payinSettleActivity": {
                                                                    "type": "string",
                                                                    "description": "Activity to be used to settle the Dues of the current Arrangement. Typically this would be a APPLYPAYMENT activity. User activity may also be stated in this field. Validation Rules: Should be a valid record in AA.ACTIVITY.\n"
                                                                },
                                                                "payinRcType": {
                                                                    "type": "string",
                                                                    "description": "Defines the RC.TYPE reference to be used during handoff to inform the recycler what type of transaction is being handed-off.\nValidation Rules:\nShould be a valid entry in RC.TYPE.\nValid only if PAYIN.TXN.TYPE is defined.\n"
                                                                },
                                                                "payinRcCondition": {
                                                                    "type": "string",
                                                                    "description": "Defines the RC.CONDITION to be used for the payment type to allow variation of different retry conditions.\nValidation Rules:\nShould be a valid entry in RC.CONDITION.\nValid only if PAYIN.TXN.TYPE is defined.\n"
                                                                },
                                                                "transactionType": {
                                                                    "type": "string",
                                                                    "description": "Indicates whether the Customer is placing an order to buy or sell.\nThe transaction code is user defined for convenience and adaptability to cover all eventualities within theSecuritys Module From Coupon Payments to Redemptions and Capital Increase Type updates. Within the Open Orderapplication it is suggested that the same codes as for the Sec.Trade application i.e. For A purchase of securitiesSPR and for a Sale SSL be used.\n1-3 type S (uppercase alpha) character Sc.Trans.Name. (Mandatory Input.)\nMust be a valid code on the SC.TRANS.NAME file.\n"
                                                                },
                                                                "nominatedAmount": {
                                                                    "type": "number",
                                                                    "format": "int64",
                                                                    "description": ""
                                                                },
                                                                "additionalAmount": {
                                                                    "type": "number",
                                                                    "format": "int64",
                                                                    "description": ""
                                                                },
                                                                "excludeProperties": {
                                                                    "type": "string",
                                                                    "description": ""
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "payout": {
                                            "type": "array",
                                            "description": "When PAYOUT.ACCOUNT used is an Arrangement Account, then an activity has to be specified to Credit the Account arrangement as well. That activity needs to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Credit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYOUT.ACCOUNT Required only if the PAYOUT.ACCOUNT is an AA Account.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "payoutSettlement": {
                                                        "type": "string",
                                                        "description": "The field may be used as a switch to turn off the Settlement instruction temporarily without having the need to clear or delete the field contents. If the field is set to NO, then it means the instructions are not active. Validation Rules: Valid input is Yes or No. Default value is Yes.\n"
                                                    },
                                                    "payoutSettleActivity": {
                                                        "type": "string",
                                                        "description": "Contains the PROPERTY based on which the Payout settlement instruction would be processed. This definition allows users to configure multiple payouts happening to multiple accounts. For example, user can configure Current Interest to be paid out to one account, whilst the Maturity deposit amount may be credited to another account. Validation Rules: Should be a valid record in AA.PROPERTY.\n"
                                                    },
                                                    "propertyClasses": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "payoutPropertyClass": {
                                                                    "type": "string",
                                                                    "description": "Contains the PROPERTY CLASS based on which the Payout settlement instruction would be processed. This definition allows users to configure multiple payouts happening to multiple accounts. For example, user can configure Interest to be paid out to one account, whilst the Maturity deposit amount to be credited to another account. Validation Rules: Should be a valid record in AA.PROPERTY.CLASS.\n"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "properties": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "payoutProperty": {
                                                                    "type": "string",
                                                                    "description": "Contains the PROPERTY based on which the Payout settlement instruction would be processed. This definition allows users to configure multiple payouts happening to multiple accounts. For example, user can configure Current Interest to be paid out to one account, whilst the Maturity deposit amount may be credited to another account. Validation Rules: Should be a valid record in AA.PROPERTY.\n"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "payoutActivity": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "payoutAccount": {
                                                                    "type": "string",
                                                                    "description": "Contains the Account to which funds are to be credited from this Arrangement. Validation Rules: Should be a valid T24 ACCOUNT Number.\n"
                                                                },
                                                                "payoutBeneficiary": {
                                                                    "type": "string",
                                                                    "description": "This field is a link to the core BENEFICIARY table and is used to define who is the ultimate beneficiary of the funds.\nWhen configured a PAYMENT.ORDER will be generated and the routing will be decided via the PAYMENT.ORDER.PARAMETER.\nBased on the setting in PAYMENT.ORDER.PARAMETER either a FUNDS.TRANSFER or TPH message will be produced.\nAlong with values from the PAYMENT.ORDER.PRODUCT record the BENEFICIARY record is mapped through to the PAYMENT.ORDER application and then mapped through to FUNDS.TRANSFER or TPH.\nCurrent functionality also allows for a T24 account to be defined in the Beneficiary record which will be credited.\no Optional field.\no Mutually exclusive with PAYOUT.ACCOUNT.\no Is used in conjunction with PAYOUT.PO.PRODUCT.\no Drills down to the BENEFICIARY table.\n"
                                                                },
                                                                "payoutPoProduct": {
                                                                    "type": "string",
                                                                    "description": "This field is linked to the PAYMENT.ORDER.PRODUCT table and its value is passed through to the PAYMENT.ORDER application.\nIts main purpose will be to control parameters for TPH processing and pass outgoing messages parameters.\no Optional field.\no Is used in conjunction with PAYOUT.BENEFICIARY.\no Drills down to the PAYMENT.ORDER.PRODUCT table.\n"
                                                                },
                                                                "payoutPercentage": {
                                                                    "type": "number",
                                                                    "description": "Will allow the ability to define only a percentage value.\nThe system will cascade 'from top-to bottom' down the multiple fields taking the percentages in order (a blank field will be considered for processing last).\nThe percentage defined is the % portion of the Billed amount, which will be settled from the respective account.\nThe total percentages may not exceed 100%, The total percentages may not total 100%.\nIn the case of any rounding issues the last account will be deemed as the account to process any required adjustments.\nA blank field can be defined at last, In this case the remainder of the bill will be settled from this account.\n"
                                                                },
                                                                "payoutAmount": {
                                                                    "type": "number",
                                                                    "format": "int64",
                                                                    "description": "Will allow the ability to define only a fixed value.\nThe system will cascade 'from top-to bottom' down the multiple fields taking the amounts defined in order (a blank field will be considered for processing last).\nWhen a bill is generated to be collected the individual amounts or total amounts defined may exceed the billed amount.\nIn this case the amount defined is classed as an 'up-to' amount. This is the maximum that can be taken and will honour the ACCOUNT.DEBIT.RULE field.\nTo satisfy the bill a lesser amount can also be taken.\nWhen a bill is generated to be collected the individual amounts or total amounts defined may not satisfy the billed amount.\nThe amount defined will be the amount to be taken.\nIn this case any remainder of the bill will be made due.\n"
                                                                },
                                                                "payoutActivity": {
                                                                    "type": "string",
                                                                    "description": "When PAYOUT.ACCOUNT used is an Arrangement Account, then an activity has to be specified to Credit the Account arrangement as well. That activity needs to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Credit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYOUT.ACCOUNT Required only if the PAYOUT.ACCOUNT is an AA Account.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "retryDays": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "defaultSettlementAccount": {
                                            "type": "string",
                                            "description": "An account specified here will be used as the settlement account for all PAYIN or PAYOUT entries which do not have a Settlement Account, Beneficiary or DD Mandate Reference defined.\nInput in this field is optional. Must be a valid account.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "commitment": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "amount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field contains the cash amount that is to be traded.\nWhen the ORDER.TYPE is CASH,If the CASH.CHRGS field is set to GROSS then the cash amount will be used to calculate the nominal anycharges/commissions that apply will be added to this value, however, if the CASH.CHRGS field is set to NET the cashamount will include all charges/commissions, adjusting the nominal to achieve this.\nMandatory if ORDER.TYPE is CASH\n"
                                        },
                                        "changeAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "The original commitment amout can be increased or decreased using INCREASE or DECREASE action. This field represent the amount to increase or decrease on the original amount.\nFor increase action, the input in this field should be greater than zero.\nFor decrease action the input in this field should be less than zero.\nStandard T24 amount field.\n"
                                        },
                                        "term": {
                                            "type": "string",
                                            "description": "Indicates the period to which a rate applies.\n'R' for Remaining, NND for Rest period in Days where D  Number of Days,      NNNM for Rest Period in Months where M Number of Months and NNY for rest     period in years where Y Number of years. e.g. a 10 day rest period would be     written as 10D, a 120 month rest period as 120M and a 20 year rest period as     20Y. R must be the last rest period entered. Multi value field. (Mandatory     input. No default.)\nThe number of days or months must be entered in logical order i.e. in     ascending sequence.\nFor days the range 01-31 will be allowed while for months 01-360 will be     accepted. For years the range 01-30 is accepted.\nWhen 'R' is defined, at least one additional rest period must be defined.\nWhen more than one rest period is defined, 'R' must be entered on the last     entered rest period.\n"
                                        },
                                        "revolving": {
                                            "type": "string",
                                            "description": "Defines the revolving term amounts for lending products. The effect of a revolving product is to increase the available amount from which a customer may drawdown as a result of certain payments. The options are:.\nNO - the available amount will not increase when any payments are made.\nPAYMENT - any payment against the outstanding amount(due or not due) will result in the available amount increasing.\nPREPAYMENT - only repayments agains the outstanding amount (balance not yet due) will result in the available amount increasing.\n",
                                            "enum": [
                                                "NO",
                                                "PAYMENT",
                                                "PREPAYMENT"
                                            ]
                                        },
                                        "updateLimit": {
                                            "type": "string",
                                            "description": "Defines whether the commitment amount of the Limit used for the arrangement should be updated and shown on the LIMIT record.\n",
                                            "enum": [
                                                "YES",
                                                "NO"
                                            ]
                                        },
                                        "topupAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "agent": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "agents": {
                                            "type": "array",
                                            "description": "",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "agentId": {
                                                        "type": "string",
                                                        "description": "Holds the agent ID from CUSTOMER table.\n"
                                                    },
                                                    "agentArrangementId": {
                                                        "type": "string",
                                                        "description": "Hold the agentâ€™s arrangement ID, based on which commissions have to be calculated. Should be a valid AA.ARRANGEMENT (AGENT LINE).\n"
                                                    },
                                                    "agentRole": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "events": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "fixedAmount": {
                                                                    "type": "number",
                                                                    "format": "int64",
                                                                    "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                                                },
                                                                "marginOperand": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                },
                                                                "marginPercent": {
                                                                    "type": "number",
                                                                    "description": "Defines a percentage is applied over the default commission amount, to calculate the final commission for a financial arrangement. Is used in conjunction with MARGIN.OPERAND.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "periodiccharges": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "amount": {
                                            "type": "array",
                                            "description": "This field contains the cash amount that is to be traded.\nWhen the ORDER.TYPE is CASH,If the CASH.CHRGS field is set to GROSS then the cash amount will be used to calculate the nominal anycharges/commissions that apply will be added to this value, however, if the CASH.CHRGS field is set to NET the cashamount will include all charges/commissions, adjusting the nominal to achieve this.\nMandatory if ORDER.TYPE is CASH\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "debitCharge": {
                                                        "type": "string",
                                                        "description": "Minimum charge amount can be specified for associated currency attribute. AA.CHARGE.DETAILS will be updated with the actual calculated charge amount and the charge amount that has been billed after applying MIN.CHG.AMOUNT. If currency is input either of Maximum or Minimum charge amount is mandatory.\n"
                                                    },
                                                    "chargeAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Holds the charge amount equivalent in charge account currency\n"
                                                    },
                                                    "creditCharge": {
                                                        "type": "string",
                                                        "description": "Defines minimum charge amount to be paid for the currency attribute if the net charge amount is a Credit.\n"
                                                    },
                                                    "maxCreditCharge": {
                                                        "type": "string",
                                                        "description": "Defines maximum charge amount to be paid for the currency attribute if the net charge amount is a Credit.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "waiveCharge": {
                                            "type": "string",
                                            "description": "Input of 'NO' indicates that charges are collected on this PAYMENT.STOP.TYPE and an input of 'YES' indicates that charges are to be waived for this particular stop payment. If there is no input defaults to 'NO'.\nOptional input. Valid input 'YES' or 'NO'. Defaults to 'NO'.Multi value       field associated with fields 2 to 24.\nAlphanumeric - Maximum of 3 characters\n"
                                        },
                                        "includeDeferred": {
                                            "type": "string",
                                            "description": "Indicates if all deferred charges should be included or not. Valid options - YES and NO.\n"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "createHLSimErrorResponse": {
            "properties": {
                "header": {
                    "$ref": "#/definitions/ArrangementHeader"
                },
                "body": {
                    "$ref": "#/definitions/createHLSimErrorResponseBody"
                }
            },
            "description": "createHLSimErrorResponse"
        },
        "createHLSimErrorResponseBody": {
            "type": "object",
            "properties": {
                "errorDetails": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "fieldName": {
                                "type": "string"
                            },
                            "property": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            },
                            "code": {
                                "type": "string"
                            }
                        }
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "createBLSim": {
            "properties": {
                "header": {
                    "$ref": "#/definitions/PayloadHeader"
                },
                "body": {
                    "$ref": "#/definitions/createBLSimBody"
                }
            },
            "description": "createBLSim"
        },
        "createBLSimBody": {
            "type": "object",
            "properties": {
                "parties": {
                    "type": "array",
                    "description": "",
                    "items": {
                        "type": "object",
                        "properties": {
                            "partyId": {
                                "type": "string",
                                "description": "This field denotes the customer(s) of the Arrangement contract.\nThis field is required to be input for new arrangement, takeover, and Change primary customer activities.\nAssociated multi-value with CUSTOMER.ROLE field.\nValidation Rules:\n1 -6 numeric character customer number. or 3 - 10 alphanumeric character customer mnemonic. (mandatory input).\nMust be either a valid customer number or customer mnemonic of a customer on the CUSTOMER file.\n"
                            },
                            "partyRole": {
                                "type": "string",
                                "description": "Associated with CUSTOMER field. Denotes the role of the customer in the Arrangement.\nValidation Rules:\nMandatory input. If not input by the user, defaulted with the system created role 'Owner'.\nMust be a valid record in AA.CUSTOMER.ROLE table.\n"
                            }
                        }
                    }
                },
                "agents": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "agentId": {
                                "type": "string",
                                "description": "Holds the agent ID from CUSTOMER table.\n"
                            },
                            "agentArrangementId": {
                                "type": "string",
                                "description": "Hold the agentâ€™s arrangement ID, based on which commissions have to be calculated. Should be a valid AA.ARRANGEMENT (AGENT LINE).\n"
                            },
                            "agentRole": {
                                "type": "string",
                                "description": ""
                            }
                        }
                    }
                },
                "arrangmentId": {
                    "type": "string",
                    "description": "Unique identification number for the arrangement contract. The format of the ID is as follows.\nAA YYDDD xxxxx.\nwhere: AA - Arrangement Architecture module identifier, YYDDD - Year and date of input in julian date format, xxxxx - Is a system generated unique identifier.\nFor 'New Arrangement' activity this field should be input as 'NEW' and will be updated by the system while processing the activity with the unique reference number.\nWhen attempting an activity for a existing arrangement and the arrangement has generated a underlying ACCOUNT record, then the ACCOUNT id may be used as an alternate id.\nValidation Rules:\nMust be 'NEW' or an existing Arrangement ID.\n"
                },
                "productId": {
                    "type": "string",
                    "description": "This field denotes product of the arrangement contract. The characteristics of the arrangement is derived from the Product to which it is linked to.\nAn arrangement product and arrangement contract is a series of properties (AA.PROPERTY) relating to different components (AA.PROPERTY.CLASS). Each product has a set of mandatory components and optional components.\nIt is possible to change the product of the arrangement during its life-cycle subject to certain restrictions. For each product change this field is updated along with the effective date of change.\n"
                },
                "variation": {
                    "type": "string",
                    "description": "The field specifies the variation of the product that the arrangement is running. When selecting a product from the catalogue, entering the customer number and validating, AA will automatically choose the correct variation based upon the eligibility rules and priority specified. If a user manually specified the variation, eligibility will still be checked and if the user is not eligible but the rules are configured to raise an override, the user can choose to accept the override.\n"
                },
                "currency": {
                    "type": "string",
                    "description": "The SWIFT Currency Code for the entry. The Currency of the Account in Field 1.  Not used in Entries over local currency Accounts.\n3 type S (upper-case alpha or numeric) characters Currency Code, or blank. (Internal file, no input.)\n"
                },
                "pricing": {
                    "type": "string",
                    "description": "Method used to assign a Relationship Pricing Arrangement(s) to the financial arrangement.\nAutomatic (or blank) â€“ The conditions in the productâ€™s Pricing Rules property will determine the pricing plan to apply. This option is valid if the Pricing Rules are set to 'Automatic' or 'Automatic or Manual'.\nManual â€“ The user will manually assign a plan with the following field. This option is valid if the Pricing Rules are set to 'Manual' or 'Automatic or Manual'.\nNo Pricing â€“ No plan will be applied.\nNone â€“ No plan will be applied.\nThis is an optional field.\nShould be either AUTOMATIC, MANUAL or NO.PRICING or NONE.\n"
                },
                "pricingPlan": {
                    "type": "string",
                    "description": "If 'Automatic' is specified in PRICING.SELECTION field, then AA will determine the best plan and populate this field with the Plan Product ID. If 'Manual' is selected the user must enter the Plan Product ID. AA will validate to ensure that a valid Relationship Pricing Arrangement exists for the customer. This Plan ID/Variation will also be stored in AA.ARRANGEMENT.\n"
                },
                "rewardsArrangementId": {
                    "type": "string",
                    "description": "Hold the Rewardsâ€™s arrangement ID, based on which rewards have to be calculated. Should be a valid AA.ARRANGEMENT (REWARDS LINE).\n"
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Standard date field, which is the trade date of the contract. Can be input during NEW/ROLLOVER/CHANGE.PRODUCT activities, amendment during other activities would cause error.\nValidations\n1. A date field type only.\n2. Initially defaulted to the effective date, if it is a forward dated activity then the current system date will be defaulted.\n3. Can be changed but must be equal to or less than the current system date.\n4. A back dated date is acceptable but must be within the parameters of the Product Proofing.\n5. Cannot have a date that is greater than the existing field EFFECTIVE.DATE in AA.ARRANGEMENT.ACTIVITY.\n"
                },
                "activityId": {
                    "type": "string",
                    "description": ""
                },
                "effectiveDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Effective date of the Activity to be processed. This is always required for processing any activity.\nStandard date field.\n"
                },
                "reason": {
                    "type": "string",
                    "description": "A text field to store the reason behind performing the current activity. For example, if the rate is manually revised or product changed or redeemed(and not restricted to the above activities alone), a user may record a reason for performing such activity for future verification and audit.\n"
                },
                "activityCharges": {
                    "type": "object",
                    "properties": {
                        "activities": {
                            "type": "array",
                            "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "activityId": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "charges": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "chargePropertyId": {
                                                    "type": "string",
                                                    "description": "This field indicates the charge that would be collected when the corresponding activity is triggered. This field is associated with the ACTIVITY.ID field. The charge defined will correspond to the CHARGE property. These properties and their conditions would be defined in the product designer of an product.\nValidation rule.\nShould be a valid AA.PROPERTY belonging to the CHARGE property class.\n"
                                                },
                                                "appplicationPeriod": {
                                                    "type": "string",
                                                    "description": "This will have to accept a valid T24 period.This Field will denote the application period for current aplication Method.\n"
                                                },
                                                "applicationMethod": {
                                                    "type": "string",
                                                    "description": "This will hold three values either DUE or CAPITALISE or DEFER.This Field denote which application method(DUE or CAPITALISE or DEFER)should be taken while applying activity charges.\n",
                                                    "enum": [
                                                        "DUE",
                                                        "CAPITALISE",
                                                        "DEFER"
                                                    ]
                                                },
                                                "chargeAutoSettle": {
                                                    "type": "string",
                                                    "description": "This field aids turning off the automatic settlement for the corresponding charge property. If the field is set as â€˜Yesâ€™ settlement processing will be done for the assocaited charge property when settlement property class is configured for â€˜Chargeâ€™ payment type.\nAllowed Values:.\nâ€˜Yesâ€™ or â€˜Noâ€™.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "settleActivity": {
                            "type": "string",
                            "description": "Defines the repayment activity to be triggered when there is unallocated credit. Triggered as secondary activity of Activity charge make due.\n"
                        }
                    }
                },
                "changeProduct": {
                    "type": "object",
                    "properties": {
                        "changelPeriod": {
                            "type": "string",
                            "description": "The user can define a Product for the arrangement to change to after a period of time (e.g. 6 months) or on a specific date. A period (say 6M, 12M) may be stated in this field. The arrangement start date would be considered as the base date for computing the period. For subsequent.\nchange product events, the last change product date is considered as base date and not the arrangement start date.\nValidation rule:.\nValid PERIOD field.\nMaximum of 4 characters.\n"
                        },
                        "changeActivity": {
                            "type": "string",
                            "description": "This Field will determine which Activity will be trigger during Loan Renewal.\nMandatory if RENEWAL.DATE is used. Options:.\nROLLOVER.\nRESET.\nCHANGE.PRODUCT.\n"
                        },
                        "productId": {
                            "type": "string",
                            "description": "This field denotes product of the arrangement contract. The characteristics of the arrangement is derived from the Product to which it is linked to.\nAn arrangement product and arrangement contract is a series of properties (AA.PROPERTY) relating to different components (AA.PROPERTY.CLASS). Each product has a set of mandatory components and optional components.\nIt is possible to change the product of the arrangement during its life-cycle subject to certain restrictions. For each product change this field is updated along with the effective date of change.\n"
                        },
                        "changeDate": {
                            "type": "string",
                            "format": "date",
                            "description": "This field indicates the date on which the arrangement would change from a existing product to a new product.\nBoth date and period are not allowed together. System would ignore the DATE.CONVENTION stated.\nValidation rule:.\nMust be a valid Date.\nMaximum of 11 Alphanumeric characters allowed.\n"
                        }
                    }
                },
                "documentfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "preclosurefee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "newarrfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "judoloanvarfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "ddrejectfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "dischargefee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "rtgsfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "sundryfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "mandatefee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "facilityfee": {
                    "type": "object",
                    "properties": {
                        "tiers": {
                            "type": "array",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tierType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "calculationType": {
                                        "type": "string",
                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                    },
                                    "charge": {
                                        "type": "string",
                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                    },
                                    "chgAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                    },
                                    "tier": {
                                        "type": "string",
                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "tierMaxCharge": {
                                        "type": "string",
                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "tierCount": {
                                        "type": "string",
                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                    }
                                }
                            }
                        },
                        "chargeId": {
                            "type": "string",
                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                        },
                        "fixedAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                        },
                        "chargeRoutine": {
                            "type": "string",
                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                        },
                        "tierGroups": {
                            "type": "string",
                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                        },
                        "relationshipProduct": {
                            "type": "string",
                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                        },
                        "relationshipPercentage": {
                            "type": "number",
                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                        },
                        "relationshipAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                        },
                        "relationshipVariation": {
                            "type": "string",
                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                        },
                        "swapKey": {
                            "type": "string",
                            "description": ""
                        },
                        "coolingDays": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "customer": {
                    "type": "object",
                    "properties": {
                        "customers": {
                            "type": "array",
                            "description": "This field denotes the customer(s) of the Arrangement contract.\nThis field is required to be input for new arrangement, takeover, and Change primary customer activities.\nAssociated multi-value with CUSTOMER.ROLE field.\n1 -6 numeric character customer number. or 3 - 10 alphanumeric character customer mnemonic. (mandatory input)\nMust be either a valid customer number or customer mnemonic of a customer on the CUSTOMER file.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "partyId": {
                                        "type": "string",
                                        "description": "This field denotes the customer(s) of the Arrangement contract.\nThis field is required to be input for new arrangement, takeover, and Change primary customer activities.\nAssociated multi-value with CUSTOMER.ROLE field.\nValidation Rules:\n1 -6 numeric character customer number. or 3 - 10 alphanumeric character customer mnemonic. (mandatory input).\nMust be either a valid customer number or customer mnemonic of a customer on the CUSTOMER file.\n"
                                    },
                                    "partyRole": {
                                        "type": "string",
                                        "description": "Associated with CUSTOMER field. Denotes the role of the customer in the Arrangement.\nValidation Rules:\nMandatory input. If not input by the user, defaulted with the system created role 'Owner'.\nMust be a valid record in AA.CUSTOMER.ROLE table.\n"
                                    },
                                    "taxLiabilityPercentage": {
                                        "type": "number",
                                        "description": "This field indicates the ownership percentage of the customer in the arrangement with respect to tax liability. Based on the percentage defined for each customer, income will be split and tax will be calculated using the respective tax percentage of each customer and the income split.\nExample:.\nCustomer 1 - 50%.\nCustomer 2 - 50%.\nInterest capitalization amount: $1000.\nTax percentage for customer 1 is 10% and for customer 2 is 0% (since the customer is minor).\nNow the Tax will be calculated by applying 10% on $500 and 0% on $ 500. So the net tax amount will be $50 for which tax accounting will be raised.\nAssociated with CUSTOMER field.\nValidation Rules:\n* Must be equal or less than 100%.\n* Sum of the percentage cannot be more than 100%.\n"
                                    },
                                    "limitAllocactionPercentage": {
                                        "type": "number",
                                        "description": "This field indicates the ownership percentage of the customer in the arrangement with respect to limit liability. Limit will be checked for the customer for whom this field is defined.\nAssociated with CUSTOMER field.\nValidation Rules:\nMust be equal to 100% and definition can be done only for one customer who is also the limit customer.\nSum of the percentage cannot be more than 100%.\n"
                                    },
                                    "GLAllocactionPercentage": {
                                        "type": "number",
                                        "description": "This field indicates the ownership percentage of the customer in the arrangement with respect to GL reporting. Customer in the associated field will be used for balance sheet reporting purposes.\nAssociated with CUSTOMER field.\nValidation Rules:\nMust be equal to 100% and definition can be done only for one customer who is also the limit customer.\nSum of the percentage cannot be more than 100%.\n"
                                    }
                                }
                            }
                        },
                        "jointLiability": {
                            "type": "string",
                            "description": ""
                        }
                    }
                },
                "principaldrint": {
                    "type": "object",
                    "properties": {
                        "interest": {
                            "type": "array",
                            "description": "",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "fixed": {
                                        "type": "string",
                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA fixed rate is directly entered by the user specifying the Defined Property and is not defined by an index table. Fixed rates are entered as positive numbers unless a negative rate is allowed.\nThis field is part of a multi value set of fields including FIXED.RATE, FLOATING.INDEX, PERIODIC.INDEX, PERIODIC.PERIOD, PERIODIC.BASE, MARGIN.TYPE, MARGIN.OPER, MARGIN.RATE, TIER.MIN.RATE, TIER.MAX.RATE, TIER.AMOUNT,TIER.PERCENT.\n"
                                    },
                                    "floating": {
                                        "type": "string",
                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA floating interest rate is tied to a variable base rate (i.e. BASIC.INTEREST). During interest calculation, T24 will use the currency specific rate applicable for the calculation date (i.e. the rate used for the calculation will change whenever the base rate is changed).\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "spread": {
                                        "type": "string",
                                        "description": "It would be possible to specify that the rate for a given tier be â€˜Linkedâ€™, by setting the field Linked Rate to Yes.\nThis can be mixed with normal rate calculations as well.\nWhere the Linked Rate is set to Yes, system would expect that an Arrangement reference in given in the â€˜Linked Arrangementâ€™ field along with the Interest property to be linked to.\n"
                                    },
                                    "minMaxRate": {
                                        "type": "string",
                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "maxRate": {
                                        "type": "string",
                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "effectiveRate": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "negativeRate": {
                                        "type": "string",
                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                    },
                                    "orPercent": {
                                        "type": "number",
                                        "description": "The tier percent relates to the field RATE.TIER.TYPE and percentages can be entered if BAND is selected.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. Either TIER.PERCENT or TIER.AMOUNT can be entered by not both. If TIER.PERCENT is defined, then the Sum of Tier percentage should be 100%.\n"
                                    },
                                    "margins": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "margin": {
                                                    "type": "string",
                                                    "description": "Identifies whether there are single or multiple margins.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                },
                                                "marginOperation": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "attributes": {
                            "type": "array",
                            "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "attributes": {
                                        "type": "string",
                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "This field along with FIELD and OPERAND, helps the user to set the conditions for the Alert to be triggered. Holds the actual value of the field on which the criteria is based. If a value is provided at the event definition level, then that value is defaulted here. If not, the user can provide the value at the time of Subscribing.\nThe fields from FIELD to VALUE are displayed in this subscription screen only when INHERIT is set to Yes in the corresponding TEC.ITEMS record. These set of fields define the criteria for alerts.\n"
                                    },
                                    "linkedArrangement": {
                                        "type": "string",
                                        "description": "Where at least one tier is set to be Linked Rate, the Arrangement to be linked for calculating the Interest Rate, must be specified here (or automatically defaulted by the system, where a Limit is attached)\n"
                                    },
                                    "attribute": {
                                        "type": "string",
                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                    }
                                }
                            }
                        },
                        "periodicInterest": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "periodicIndex": {
                                        "type": "string",
                                        "description": "A periodic rate is tied to an index (e.g. LIBOR) which is dependent on a period of time (e.g. term) and possibly an amount. Once the arrangement is active, the rate is fixed until it is reset. Periodic rates can be reset at a pre-determined frequency.\nTo define a periodic rate, the user specifies:.\nPERIODIC.INTEREST index to use.\nPeriod (this will default to TERM if a Term Amount Property exists).\nInterest selection method if the term is not found on the index. The option currently available is INTERPOLATE.\nRate Reset period.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "periodicRate": {
                                        "type": "string",
                                        "description": "Indicates the rate on which the index runs on the date stated in the key. When a periodic index is used and the field is left blank, then system computes the rate from PERIODIC.INTEREST and defaults it here. When a rate is already present(say, the user changes the system computed rate), then system does not compute the new rate.\nValidation Rules:\nSystem defaulted and modifiable.\nStandard Rate field.\nValid only if Periodic index is stated.\n"
                                    },
                                    "periodicPeriodType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "periodicPeriod": {
                                        "type": "string",
                                        "description": "Defines the interest period to be used when linking to PERIODIC.INTEREST.(This will default to TERM if a Term Amount Property exists),. When a period is stated in Years or Weeks, they would be converted to Months and Days respectively and then located on the PI table.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "periodicMethod": {
                                        "type": "string",
                                        "description": "If system does not find a interest rate in the correct bucket of PERIODIC.INTEREST table, it automatically applies a method to arrive at a rate chosen by this method.\nValid method is:.\nINTERPOLATE - System automatically interpolates the rate. This is the DEFAULT option as well.\n"
                                    },
                                    "initialResetDate": {
                                        "type": "string",
                                        "format": "date",
                                        "description": ""
                                    },
                                    "periodicReset": {
                                        "type": "string",
                                        "description": "This indicates the reset period of the index stated. System would automatically reset the PERIODIC.RATE at the frequency stated in this field. Applicable only at Arrangement level. Periodic index may still be used without this field meaning, it never resets the computed rate.\nValidation rule:.\nValid PERIOD field.\n"
                                    },
                                    "effectiveRate": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "negativeRate": {
                                        "type": "string",
                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                    },
                                    "margins": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "marginType": {
                                                    "type": "string",
                                                    "description": "Identifies whether there are single or multiple margins\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                },
                                                "marginOperation": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "activites": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "onActivity": {
                                        "type": "string",
                                        "description": "When the periodic interest rate needs to be recalculated for certain activities, this field in combination with RECALCULATE may be used to setup the activity for which interest needs to be recalculated.\nValidation Rules:\n1. Applicable only for Periodic interest rate recalculation.\n2. Must be a valid activity in AA.ACTIVITY.\n"
                                    },
                                    "recalculate": {
                                        "type": "string",
                                        "description": "Related to ON.ACTIVITY activity, when flagged to RATE, system will recalculate Periodic rate when the activity setup in ON.ACTIVITY is processed. When the value is NOTHING periodic rate would not be recalculated when the activity setup in ON.ACTIVITY is processed.\nValidation Rules:\n1. Mandatory when ON.ACTIVITY is setup.\nThe fields ON.ACTIVITY and RECALCULATE in interest property class will be enhanced to allow user to define when to recalculate â€˜Profit Amountâ€™.\nAll activities which could result in payment schedule recalculation can be configured to recalculate â€˜Profit Amountâ€™ i.e., activities with payment schedule calculate and update action.\n"
                                    }
                                }
                            }
                        },
                        "references": {
                            "type": "array",
                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "customType": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    },
                                    "customName": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    },
                                    "customValue": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    }
                                }
                            }
                        },
                        "tiers": {
                            "type": "string",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n"
                        },
                        "linkedProperty": {
                            "type": "string",
                            "description": "This field will be used to specify the Interest Property of the Linked Arrangement that should be referred to, for getting the Interest Rate.\nWhere at least one tier is set to be â€˜Linked Rateâ€™, this must be specified.\n"
                        },
                        "dayBasis": {
                            "type": "string",
                            "description": "T24 can calculate interest based upon several different day basis types. Each T24 Interest Day Basis type is represented as a numerator and denominator.\nNumerator (interest days).\no 360 Each month is considered to have 30 days.\no 366 The exact number of days will be used.\nDenominator (days in the year).\no 360 Each year is considered to have 360 days.\no 365 Each year is considered to have 365 days.\no 366 The exact number of days in the year will be used (365 or 366).\nT24 allows the following interest day basis types:.\nType Notes.\nA (360/360) A1 and A2 are variations which alter the method of treating a month as 30 days.\nB (366/360).\nC (366/366).\nD (360/366).\nE (366/365).\nF (360/365) F1 and F2 are variations which alter the method of treating a month as 30 days.\nThis is a Mandatory field.\n"
                        },
                        "calcThreshold": {
                            "type": "string",
                            "description": "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated.\n"
                        },
                        "accrualRule": {
                            "type": "string",
                            "description": "When accruing interest,T24 must determine which amounts to include in each day's balance, the actual days to include in the period (e.g. first day, last day) and how to round any calculations.\nT24 allows users to define the calculation method to use, by specifying an accrual rule in EB.ACCRUAL.PARAM. Users can define the following:.\nFirst Day Inclusive (Yes/No).\nLast Day Inclusive (Yes/No).\nRounding Rule (Natural, Down, Up, Currency, None).\nIntermediate Calculation Rounding (Yes/No).\nCredit value date adjustment.\nDebit value date adjustment.\n"
                        },
                        "compounding": {
                            "type": "string",
                            "description": "T24 supports the compounding of both debit and credit interest.\nCompounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year. This field defines the number of compounding periods to be applied.\nNote that the compounding type provides a factor in the calculation only and does not actually cause the base principal amount to be actually increased by the calculated interest amount.\nThe following compound frequencies are supported:.\nDAILY.\nInterest is compounded 360/5/6 times a year (from days in year in INTEREST.BASIS).\nWEEKn.\nInterest is compounded 52/n times per year based on a number of WEEKS.\n-- Bi-weekly compounding should be defined as WEEK2 and will result in 26 periods.\n-- Four-Weekly compounding should be defined as WEEK4 and results in 13 periods.\nMnn.\nInterest is compounded 12/n times a year based on a numberof months.\n-- Monthly compounding should be defined as M01 and will result in 12 periods.\n-- Bi-Monthly should be defined as M02 and will result in 6 periods.\n-- Quarterly should be defined as M03 and will result in 4 periods.\n-- Semi-Annual should be defined as M06 and will result in 6 periods.\n-- Annual should be defined as M12 and will result in 1 period.\n-- Bi-Annual should be defined as M24 and will result in 0.5 periods.\n-- Any number of months up to 99 may be defined and results in 12/n periods.\nTWMTH.\nInterest is compounded twice a month resulting in 24 periods as opposed to WEEK2.\nwhich results in 26 periods.\nNnnn.\n- Compounding takes place nnn times per year.\n"
                        },
                        "compoundYieldMethod": {
                            "type": "string",
                            "description": "This field indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate. System uses the below formula to calculate the interest amount,.\nDaily Effective Rate(ERd) = (1+Interest Rate)^(1/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\nWhen the field is set as NULL the effective rate is calculated based on the compounding frequency defined in the field COMPOUND.TYPE using the below formula,.\nDaily Effective Rate(ERd) = (1+Interest Rate/Compound Freq)^(Compound Freq/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\n"
                        },
                        "minIntAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field indicates the minimum interest amount to be posted for an arrangement/account.\nIf the calculated interest amount is less than the amount specified in this field, system will waive the interest amount or adjust the interest amount based on the option set in the field MIN.INT.WAIVE.\n"
                        },
                        "minIntWaive": {
                            "type": "string",
                            "description": "This field indicates if the calculated interest amount has to be waived or adjusted.\nIf the field is set to YES, then the system will waive the interest amount if it is less than the MIN.INT.AMOUNT specified.\nIf NULL value is set and if the calculated interest amount is less than the MIN.INT.AMOUNT specified, then system will post the minimum interest amount.\n"
                        },
                        "referLimit": {
                            "type": "string",
                            "description": "For an arrangement under ACCOUNTS Product Line, it is possible link the first tier amount of debit interest to the LIMIT record attached.\nIt can be achieved by setting the field REFER.LIMIT in INTEREST property condition as â€˜YESâ€™. This functionality can be enabled only if the LIMIT is managed by AA.\n"
                        },
                        "suppressAccrual": {
                            "type": "string",
                            "description": "The Field accepts the options 'YES' or 'ALTERNATE'.\nIndicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property.\nFor Example:.\nIt will be set as YES by the system if the DONOR.ACCRUAL field is set as SUPPRESS for any product / arrangement in INTEREST.COMPENSTION property of a Bundle arrangement.\nIf it is set as 'ALTERNATE' for a property then the Accrual will be suppressed for the property for which it is set and Accrual will happen for the Alternate property which is set in Activity Restriction.\nBlank value in this field denotes that there is no suppression of accrual.\nThis is a Non Mandatory field.\n"
                        }
                    }
                },
                "penalinterest": {
                    "type": "object",
                    "properties": {
                        "interest": {
                            "type": "array",
                            "description": "",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "fixed": {
                                        "type": "string",
                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA fixed rate is directly entered by the user specifying the Defined Property and is not defined by an index table. Fixed rates are entered as positive numbers unless a negative rate is allowed.\nThis field is part of a multi value set of fields including FIXED.RATE, FLOATING.INDEX, PERIODIC.INDEX, PERIODIC.PERIOD, PERIODIC.BASE, MARGIN.TYPE, MARGIN.OPER, MARGIN.RATE, TIER.MIN.RATE, TIER.MAX.RATE, TIER.AMOUNT,TIER.PERCENT.\n"
                                    },
                                    "floating": {
                                        "type": "string",
                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA floating interest rate is tied to a variable base rate (i.e. BASIC.INTEREST). During interest calculation, T24 will use the currency specific rate applicable for the calculation date (i.e. the rate used for the calculation will change whenever the base rate is changed).\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "spread": {
                                        "type": "string",
                                        "description": "It would be possible to specify that the rate for a given tier be â€˜Linkedâ€™, by setting the field Linked Rate to Yes.\nThis can be mixed with normal rate calculations as well.\nWhere the Linked Rate is set to Yes, system would expect that an Arrangement reference in given in the â€˜Linked Arrangementâ€™ field along with the Interest property to be linked to.\n"
                                    },
                                    "minMaxRate": {
                                        "type": "string",
                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "maxRate": {
                                        "type": "string",
                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "effectiveRate": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "negativeRate": {
                                        "type": "string",
                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                    },
                                    "orPercent": {
                                        "type": "number",
                                        "description": "The tier percent relates to the field RATE.TIER.TYPE and percentages can be entered if BAND is selected.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. Either TIER.PERCENT or TIER.AMOUNT can be entered by not both. If TIER.PERCENT is defined, then the Sum of Tier percentage should be 100%.\n"
                                    },
                                    "margins": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "margin": {
                                                    "type": "string",
                                                    "description": "Identifies whether there are single or multiple margins.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                },
                                                "marginOperation": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "attributes": {
                            "type": "array",
                            "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "attributes": {
                                        "type": "string",
                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "This field along with FIELD and OPERAND, helps the user to set the conditions for the Alert to be triggered. Holds the actual value of the field on which the criteria is based. If a value is provided at the event definition level, then that value is defaulted here. If not, the user can provide the value at the time of Subscribing.\nThe fields from FIELD to VALUE are displayed in this subscription screen only when INHERIT is set to Yes in the corresponding TEC.ITEMS record. These set of fields define the criteria for alerts.\n"
                                    },
                                    "linkedArrangement": {
                                        "type": "string",
                                        "description": "Where at least one tier is set to be Linked Rate, the Arrangement to be linked for calculating the Interest Rate, must be specified here (or automatically defaulted by the system, where a Limit is attached)\n"
                                    },
                                    "attribute": {
                                        "type": "string",
                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                    }
                                }
                            }
                        },
                        "periodicInterest": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "periodicIndex": {
                                        "type": "string",
                                        "description": "A periodic rate is tied to an index (e.g. LIBOR) which is dependent on a period of time (e.g. term) and possibly an amount. Once the arrangement is active, the rate is fixed until it is reset. Periodic rates can be reset at a pre-determined frequency.\nTo define a periodic rate, the user specifies:.\nPERIODIC.INTEREST index to use.\nPeriod (this will default to TERM if a Term Amount Property exists).\nInterest selection method if the term is not found on the index. The option currently available is INTERPOLATE.\nRate Reset period.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "periodicRate": {
                                        "type": "string",
                                        "description": "Indicates the rate on which the index runs on the date stated in the key. When a periodic index is used and the field is left blank, then system computes the rate from PERIODIC.INTEREST and defaults it here. When a rate is already present(say, the user changes the system computed rate), then system does not compute the new rate.\nValidation Rules:\nSystem defaulted and modifiable.\nStandard Rate field.\nValid only if Periodic index is stated.\n"
                                    },
                                    "periodicPeriodType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "periodicPeriod": {
                                        "type": "string",
                                        "description": "Defines the interest period to be used when linking to PERIODIC.INTEREST.(This will default to TERM if a Term Amount Property exists),. When a period is stated in Years or Weeks, they would be converted to Months and Days respectively and then located on the PI table.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "periodicMethod": {
                                        "type": "string",
                                        "description": "If system does not find a interest rate in the correct bucket of PERIODIC.INTEREST table, it automatically applies a method to arrive at a rate chosen by this method.\nValid method is:.\nINTERPOLATE - System automatically interpolates the rate. This is the DEFAULT option as well.\n"
                                    },
                                    "initialResetDate": {
                                        "type": "string",
                                        "format": "date",
                                        "description": ""
                                    },
                                    "periodicReset": {
                                        "type": "string",
                                        "description": "This indicates the reset period of the index stated. System would automatically reset the PERIODIC.RATE at the frequency stated in this field. Applicable only at Arrangement level. Periodic index may still be used without this field meaning, it never resets the computed rate.\nValidation rule:.\nValid PERIOD field.\n"
                                    },
                                    "effectiveRate": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "negativeRate": {
                                        "type": "string",
                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                    },
                                    "margins": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "marginType": {
                                                    "type": "string",
                                                    "description": "Identifies whether there are single or multiple margins\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                },
                                                "marginOperation": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "activites": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "onActivity": {
                                        "type": "string",
                                        "description": "When the periodic interest rate needs to be recalculated for certain activities, this field in combination with RECALCULATE may be used to setup the activity for which interest needs to be recalculated.\nValidation Rules:\n1. Applicable only for Periodic interest rate recalculation.\n2. Must be a valid activity in AA.ACTIVITY.\n"
                                    },
                                    "recalculate": {
                                        "type": "string",
                                        "description": "Related to ON.ACTIVITY activity, when flagged to RATE, system will recalculate Periodic rate when the activity setup in ON.ACTIVITY is processed. When the value is NOTHING periodic rate would not be recalculated when the activity setup in ON.ACTIVITY is processed.\nValidation Rules:\n1. Mandatory when ON.ACTIVITY is setup.\nThe fields ON.ACTIVITY and RECALCULATE in interest property class will be enhanced to allow user to define when to recalculate â€˜Profit Amountâ€™.\nAll activities which could result in payment schedule recalculation can be configured to recalculate â€˜Profit Amountâ€™ i.e., activities with payment schedule calculate and update action.\n"
                                    }
                                }
                            }
                        },
                        "references": {
                            "type": "array",
                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "customType": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    },
                                    "customName": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    },
                                    "customValue": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    }
                                }
                            }
                        },
                        "tiers": {
                            "type": "string",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n"
                        },
                        "linkedProperty": {
                            "type": "string",
                            "description": "This field will be used to specify the Interest Property of the Linked Arrangement that should be referred to, for getting the Interest Rate.\nWhere at least one tier is set to be â€˜Linked Rateâ€™, this must be specified.\n"
                        },
                        "dayBasis": {
                            "type": "string",
                            "description": "T24 can calculate interest based upon several different day basis types. Each T24 Interest Day Basis type is represented as a numerator and denominator.\nNumerator (interest days).\no 360 Each month is considered to have 30 days.\no 366 The exact number of days will be used.\nDenominator (days in the year).\no 360 Each year is considered to have 360 days.\no 365 Each year is considered to have 365 days.\no 366 The exact number of days in the year will be used (365 or 366).\nT24 allows the following interest day basis types:.\nType Notes.\nA (360/360) A1 and A2 are variations which alter the method of treating a month as 30 days.\nB (366/360).\nC (366/366).\nD (360/366).\nE (366/365).\nF (360/365) F1 and F2 are variations which alter the method of treating a month as 30 days.\nThis is a Mandatory field.\n"
                        },
                        "calcThreshold": {
                            "type": "string",
                            "description": "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated.\n"
                        },
                        "accrualRule": {
                            "type": "string",
                            "description": "When accruing interest,T24 must determine which amounts to include in each day's balance, the actual days to include in the period (e.g. first day, last day) and how to round any calculations.\nT24 allows users to define the calculation method to use, by specifying an accrual rule in EB.ACCRUAL.PARAM. Users can define the following:.\nFirst Day Inclusive (Yes/No).\nLast Day Inclusive (Yes/No).\nRounding Rule (Natural, Down, Up, Currency, None).\nIntermediate Calculation Rounding (Yes/No).\nCredit value date adjustment.\nDebit value date adjustment.\n"
                        },
                        "compounding": {
                            "type": "string",
                            "description": "T24 supports the compounding of both debit and credit interest.\nCompounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year. This field defines the number of compounding periods to be applied.\nNote that the compounding type provides a factor in the calculation only and does not actually cause the base principal amount to be actually increased by the calculated interest amount.\nThe following compound frequencies are supported:.\nDAILY.\nInterest is compounded 360/5/6 times a year (from days in year in INTEREST.BASIS).\nWEEKn.\nInterest is compounded 52/n times per year based on a number of WEEKS.\n-- Bi-weekly compounding should be defined as WEEK2 and will result in 26 periods.\n-- Four-Weekly compounding should be defined as WEEK4 and results in 13 periods.\nMnn.\nInterest is compounded 12/n times a year based on a numberof months.\n-- Monthly compounding should be defined as M01 and will result in 12 periods.\n-- Bi-Monthly should be defined as M02 and will result in 6 periods.\n-- Quarterly should be defined as M03 and will result in 4 periods.\n-- Semi-Annual should be defined as M06 and will result in 6 periods.\n-- Annual should be defined as M12 and will result in 1 period.\n-- Bi-Annual should be defined as M24 and will result in 0.5 periods.\n-- Any number of months up to 99 may be defined and results in 12/n periods.\nTWMTH.\nInterest is compounded twice a month resulting in 24 periods as opposed to WEEK2.\nwhich results in 26 periods.\nNnnn.\n- Compounding takes place nnn times per year.\n"
                        },
                        "compoundYieldMethod": {
                            "type": "string",
                            "description": "This field indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate. System uses the below formula to calculate the interest amount,.\nDaily Effective Rate(ERd) = (1+Interest Rate)^(1/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\nWhen the field is set as NULL the effective rate is calculated based on the compounding frequency defined in the field COMPOUND.TYPE using the below formula,.\nDaily Effective Rate(ERd) = (1+Interest Rate/Compound Freq)^(Compound Freq/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\n"
                        },
                        "minIntAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field indicates the minimum interest amount to be posted for an arrangement/account.\nIf the calculated interest amount is less than the amount specified in this field, system will waive the interest amount or adjust the interest amount based on the option set in the field MIN.INT.WAIVE.\n"
                        },
                        "minIntWaive": {
                            "type": "string",
                            "description": "This field indicates if the calculated interest amount has to be waived or adjusted.\nIf the field is set to YES, then the system will waive the interest amount if it is less than the MIN.INT.AMOUNT specified.\nIf NULL value is set and if the calculated interest amount is less than the MIN.INT.AMOUNT specified, then system will post the minimum interest amount.\n"
                        },
                        "referLimit": {
                            "type": "string",
                            "description": "For an arrangement under ACCOUNTS Product Line, it is possible link the first tier amount of debit interest to the LIMIT record attached.\nIt can be achieved by setting the field REFER.LIMIT in INTEREST property condition as â€˜YESâ€™. This functionality can be enabled only if the LIMIT is managed by AA.\n"
                        },
                        "suppressAccrual": {
                            "type": "string",
                            "description": "The Field accepts the options 'YES' or 'ALTERNATE'.\nIndicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property.\nFor Example:.\nIt will be set as YES by the system if the DONOR.ACCRUAL field is set as SUPPRESS for any product / arrangement in INTEREST.COMPENSTION property of a Bundle arrangement.\nIf it is set as 'ALTERNATE' for a property then the Accrual will be suppressed for the property for which it is set and Accrual will happen for the Alternate property which is set in Activity Restriction.\nBlank value in this field denotes that there is no suppression of accrual.\nThis is a Non Mandatory field.\n"
                        }
                    }
                },
                "principalint": {
                    "type": "object",
                    "properties": {
                        "interest": {
                            "type": "array",
                            "description": "",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "fixed": {
                                        "type": "string",
                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA fixed rate is directly entered by the user specifying the Defined Property and is not defined by an index table. Fixed rates are entered as positive numbers unless a negative rate is allowed.\nThis field is part of a multi value set of fields including FIXED.RATE, FLOATING.INDEX, PERIODIC.INDEX, PERIODIC.PERIOD, PERIODIC.BASE, MARGIN.TYPE, MARGIN.OPER, MARGIN.RATE, TIER.MIN.RATE, TIER.MAX.RATE, TIER.AMOUNT,TIER.PERCENT.\n"
                                    },
                                    "floating": {
                                        "type": "string",
                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA floating interest rate is tied to a variable base rate (i.e. BASIC.INTEREST). During interest calculation, T24 will use the currency specific rate applicable for the calculation date (i.e. the rate used for the calculation will change whenever the base rate is changed).\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "spread": {
                                        "type": "string",
                                        "description": "It would be possible to specify that the rate for a given tier be â€˜Linkedâ€™, by setting the field Linked Rate to Yes.\nThis can be mixed with normal rate calculations as well.\nWhere the Linked Rate is set to Yes, system would expect that an Arrangement reference in given in the â€˜Linked Arrangementâ€™ field along with the Interest property to be linked to.\n"
                                    },
                                    "minMaxRate": {
                                        "type": "string",
                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "maxRate": {
                                        "type": "string",
                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "effectiveRate": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "upTo": {
                                        "type": "string",
                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                    },
                                    "negativeRate": {
                                        "type": "string",
                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                    },
                                    "orPercent": {
                                        "type": "number",
                                        "description": "The tier percent relates to the field RATE.TIER.TYPE and percentages can be entered if BAND is selected.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. Either TIER.PERCENT or TIER.AMOUNT can be entered by not both. If TIER.PERCENT is defined, then the Sum of Tier percentage should be 100%.\n"
                                    },
                                    "margins": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "margin": {
                                                    "type": "string",
                                                    "description": "Identifies whether there are single or multiple margins.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                },
                                                "marginOperation": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "attributes": {
                            "type": "array",
                            "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "attributes": {
                                        "type": "string",
                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "This field along with FIELD and OPERAND, helps the user to set the conditions for the Alert to be triggered. Holds the actual value of the field on which the criteria is based. If a value is provided at the event definition level, then that value is defaulted here. If not, the user can provide the value at the time of Subscribing.\nThe fields from FIELD to VALUE are displayed in this subscription screen only when INHERIT is set to Yes in the corresponding TEC.ITEMS record. These set of fields define the criteria for alerts.\n"
                                    },
                                    "linkedArrangement": {
                                        "type": "string",
                                        "description": "Where at least one tier is set to be Linked Rate, the Arrangement to be linked for calculating the Interest Rate, must be specified here (or automatically defaulted by the system, where a Limit is attached)\n"
                                    },
                                    "attribute": {
                                        "type": "string",
                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                    }
                                }
                            }
                        },
                        "periodicInterest": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "periodicIndex": {
                                        "type": "string",
                                        "description": "A periodic rate is tied to an index (e.g. LIBOR) which is dependent on a period of time (e.g. term) and possibly an amount. Once the arrangement is active, the rate is fixed until it is reset. Periodic rates can be reset at a pre-determined frequency.\nTo define a periodic rate, the user specifies:.\nPERIODIC.INTEREST index to use.\nPeriod (this will default to TERM if a Term Amount Property exists).\nInterest selection method if the term is not found on the index. The option currently available is INTERPOLATE.\nRate Reset period.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "periodicRate": {
                                        "type": "string",
                                        "description": "Indicates the rate on which the index runs on the date stated in the key. When a periodic index is used and the field is left blank, then system computes the rate from PERIODIC.INTEREST and defaults it here. When a rate is already present(say, the user changes the system computed rate), then system does not compute the new rate.\nValidation Rules:\nSystem defaulted and modifiable.\nStandard Rate field.\nValid only if Periodic index is stated.\n"
                                    },
                                    "periodicPeriodType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "periodicPeriod": {
                                        "type": "string",
                                        "description": "Defines the interest period to be used when linking to PERIODIC.INTEREST.(This will default to TERM if a Term Amount Property exists),. When a period is stated in Years or Weeks, they would be converted to Months and Days respectively and then located on the PI table.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                    },
                                    "periodicMethod": {
                                        "type": "string",
                                        "description": "If system does not find a interest rate in the correct bucket of PERIODIC.INTEREST table, it automatically applies a method to arrive at a rate chosen by this method.\nValid method is:.\nINTERPOLATE - System automatically interpolates the rate. This is the DEFAULT option as well.\n"
                                    },
                                    "initialResetDate": {
                                        "type": "string",
                                        "format": "date",
                                        "description": ""
                                    },
                                    "periodicReset": {
                                        "type": "string",
                                        "description": "This indicates the reset period of the index stated. System would automatically reset the PERIODIC.RATE at the frequency stated in this field. Applicable only at Arrangement level. Periodic index may still be used without this field meaning, it never resets the computed rate.\nValidation rule:.\nValid PERIOD field.\n"
                                    },
                                    "effectiveRate": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "negativeRate": {
                                        "type": "string",
                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                    },
                                    "margins": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "marginType": {
                                                    "type": "string",
                                                    "description": "Identifies whether there are single or multiple margins\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                },
                                                "marginOperation": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "activites": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "onActivity": {
                                        "type": "string",
                                        "description": "When the periodic interest rate needs to be recalculated for certain activities, this field in combination with RECALCULATE may be used to setup the activity for which interest needs to be recalculated.\nValidation Rules:\n1. Applicable only for Periodic interest rate recalculation.\n2. Must be a valid activity in AA.ACTIVITY.\n"
                                    },
                                    "recalculate": {
                                        "type": "string",
                                        "description": "Related to ON.ACTIVITY activity, when flagged to RATE, system will recalculate Periodic rate when the activity setup in ON.ACTIVITY is processed. When the value is NOTHING periodic rate would not be recalculated when the activity setup in ON.ACTIVITY is processed.\nValidation Rules:\n1. Mandatory when ON.ACTIVITY is setup.\nThe fields ON.ACTIVITY and RECALCULATE in interest property class will be enhanced to allow user to define when to recalculate â€˜Profit Amountâ€™.\nAll activities which could result in payment schedule recalculation can be configured to recalculate â€˜Profit Amountâ€™ i.e., activities with payment schedule calculate and update action.\n"
                                    }
                                }
                            }
                        },
                        "references": {
                            "type": "array",
                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "customType": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    },
                                    "customName": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    },
                                    "customValue": {
                                        "type": "string",
                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                    }
                                }
                            }
                        },
                        "tiers": {
                            "type": "string",
                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n"
                        },
                        "linkedProperty": {
                            "type": "string",
                            "description": "This field will be used to specify the Interest Property of the Linked Arrangement that should be referred to, for getting the Interest Rate.\nWhere at least one tier is set to be â€˜Linked Rateâ€™, this must be specified.\n"
                        },
                        "dayBasis": {
                            "type": "string",
                            "description": "T24 can calculate interest based upon several different day basis types. Each T24 Interest Day Basis type is represented as a numerator and denominator.\nNumerator (interest days).\no 360 Each month is considered to have 30 days.\no 366 The exact number of days will be used.\nDenominator (days in the year).\no 360 Each year is considered to have 360 days.\no 365 Each year is considered to have 365 days.\no 366 The exact number of days in the year will be used (365 or 366).\nT24 allows the following interest day basis types:.\nType Notes.\nA (360/360) A1 and A2 are variations which alter the method of treating a month as 30 days.\nB (366/360).\nC (366/366).\nD (360/366).\nE (366/365).\nF (360/365) F1 and F2 are variations which alter the method of treating a month as 30 days.\nThis is a Mandatory field.\n"
                        },
                        "calcThreshold": {
                            "type": "string",
                            "description": "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated.\n"
                        },
                        "accrualRule": {
                            "type": "string",
                            "description": "When accruing interest,T24 must determine which amounts to include in each day's balance, the actual days to include in the period (e.g. first day, last day) and how to round any calculations.\nT24 allows users to define the calculation method to use, by specifying an accrual rule in EB.ACCRUAL.PARAM. Users can define the following:.\nFirst Day Inclusive (Yes/No).\nLast Day Inclusive (Yes/No).\nRounding Rule (Natural, Down, Up, Currency, None).\nIntermediate Calculation Rounding (Yes/No).\nCredit value date adjustment.\nDebit value date adjustment.\n"
                        },
                        "compounding": {
                            "type": "string",
                            "description": "T24 supports the compounding of both debit and credit interest.\nCompounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year. This field defines the number of compounding periods to be applied.\nNote that the compounding type provides a factor in the calculation only and does not actually cause the base principal amount to be actually increased by the calculated interest amount.\nThe following compound frequencies are supported:.\nDAILY.\nInterest is compounded 360/5/6 times a year (from days in year in INTEREST.BASIS).\nWEEKn.\nInterest is compounded 52/n times per year based on a number of WEEKS.\n-- Bi-weekly compounding should be defined as WEEK2 and will result in 26 periods.\n-- Four-Weekly compounding should be defined as WEEK4 and results in 13 periods.\nMnn.\nInterest is compounded 12/n times a year based on a numberof months.\n-- Monthly compounding should be defined as M01 and will result in 12 periods.\n-- Bi-Monthly should be defined as M02 and will result in 6 periods.\n-- Quarterly should be defined as M03 and will result in 4 periods.\n-- Semi-Annual should be defined as M06 and will result in 6 periods.\n-- Annual should be defined as M12 and will result in 1 period.\n-- Bi-Annual should be defined as M24 and will result in 0.5 periods.\n-- Any number of months up to 99 may be defined and results in 12/n periods.\nTWMTH.\nInterest is compounded twice a month resulting in 24 periods as opposed to WEEK2.\nwhich results in 26 periods.\nNnnn.\n- Compounding takes place nnn times per year.\n"
                        },
                        "compoundYieldMethod": {
                            "type": "string",
                            "description": "This field indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate. System uses the below formula to calculate the interest amount,.\nDaily Effective Rate(ERd) = (1+Interest Rate)^(1/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\nWhen the field is set as NULL the effective rate is calculated based on the compounding frequency defined in the field COMPOUND.TYPE using the below formula,.\nDaily Effective Rate(ERd) = (1+Interest Rate/Compound Freq)^(Compound Freq/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\n"
                        },
                        "minIntAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field indicates the minimum interest amount to be posted for an arrangement/account.\nIf the calculated interest amount is less than the amount specified in this field, system will waive the interest amount or adjust the interest amount based on the option set in the field MIN.INT.WAIVE.\n"
                        },
                        "minIntWaive": {
                            "type": "string",
                            "description": "This field indicates if the calculated interest amount has to be waived or adjusted.\nIf the field is set to YES, then the system will waive the interest amount if it is less than the MIN.INT.AMOUNT specified.\nIf NULL value is set and if the calculated interest amount is less than the MIN.INT.AMOUNT specified, then system will post the minimum interest amount.\n"
                        },
                        "referLimit": {
                            "type": "string",
                            "description": "For an arrangement under ACCOUNTS Product Line, it is possible link the first tier amount of debit interest to the LIMIT record attached.\nIt can be achieved by setting the field REFER.LIMIT in INTEREST property condition as â€˜YESâ€™. This functionality can be enabled only if the LIMIT is managed by AA.\n"
                        },
                        "suppressAccrual": {
                            "type": "string",
                            "description": "The Field accepts the options 'YES' or 'ALTERNATE'.\nIndicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property.\nFor Example:.\nIt will be set as YES by the system if the DONOR.ACCRUAL field is set as SUPPRESS for any product / arrangement in INTEREST.COMPENSTION property of a Bundle arrangement.\nIf it is set as 'ALTERNATE' for a property then the Accrual will be suppressed for the property for which it is set and Accrual will happen for the Alternate property which is set in Activity Restriction.\nBlank value in this field denotes that there is no suppression of accrual.\nThis is a Non Mandatory field.\n"
                        }
                    }
                },
                "limit": {
                    "type": "object",
                    "properties": {
                        "limitReference": {
                            "type": "string",
                            "description": "If the Customer has a Credit Limit covering this Account, this field identifies the type of limit applicable to the Account and forms part of the key to the Limit record containing Credit Limit details. This field is also used to indicate Nostro Accounts.\nExcept for Nostro and Internal Accounts, this field is accessed by the Limits System whenever a debit transaction is processed for this Account.\nIf no Limit Reference is specified, an 'UNAUTHORISED OVERDRAFT' message is displayed and an Override is required before the transaction will be accepted.\nIf a Limit Reference is specified, the corresponding Limit record is checked (see below). If it covers the new Working Balance, the transaction is accepted, otherwise a message is displayed and an Override is required before the transaction will be accepted.\nThe key to the corresponding Limit record is built up as follows: cccccc.nnnnnnn.ss\nWhere 'cccccc' is the Liability number for the Customer in Field CUSTOMER of this record and 'nnnnnnn.ss' is the Limit Reference specified in this field.\n3-9 numeric characters consisting of a 3-7 digit Limit Reference Code and optionally, a 2 digit sequence number separated by '.' Or 'NOSTRO' to denote a Nostro Account (generated automatically by the system). (Optional input. No default.)\nThe Limit Reference Code (nnnnnnn) must be an existing code on the LIMIT.REF table.\nLimit Reference code must be a suitable one for Account records, as defined in the Limit Parameter table.\nThere must be a Limit record corresponding to the key built up as described above.\nError message is generated if single limit is set to 'Y' and one more accounts is attached to same limit (If single limit field is set to 'Y' then the limit can be utilised by one account. If multiple accounts are to utilise a single limit then, single limit field to be defined as 'N' for all such accounts.\n"
                        },
                        "expiryDate": {
                            "type": "string",
                            "format": "date",
                            "description": "Specifies the date on which the Limit will expire. But if there are contracts against this limit,  then the limit will move to history only after the contracts mature. Any new drawings against this limit would raise overrides stating that the limit expires before the maturity date.\nWarning of the approach of this date is given on the Limits Approaching Expiry Date overnight report. The number of days prior to Expiry Date that the warning starts to appear is defined by the Expiries Reporting field on the LIMIT.PARAMETER table.\n6 to 11 type D (date) characters. (Defaults to a year from the current run     date.) The date input must be greater than or equal to the Limit Review Date\n"
                        },
                        "limitAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "The limit amount which is actually available for use.\nThe amount available under the limit, against which all system limit checks are performed. The value of the ONLINE LIMIT is calculated by the system as described below.\nIf the limit is an unsecured limit, a sub-limit or a secured but fixed limit, the value in this field is always equal to the value in field 21, MAXIMUM TOTAL.\nIf the limit is a variable secured limit, the value in this field is equal to the lower of (a) the MAXIMUM TOTAL or (b) the sum of the SECURED AMT's in field 24 plus the MAXIMUM UNSECURED in field 20.\nNote:      If time bands are in effect (field 25, TIME CODE), the            ONLINE LIMIT amount will reflect the split of the            available limit across these periods. In the case of an            unsecured limit, a sub-limit or a fixed secured limit,            this field will contain the same values as field 26, LIMIT            BAND.            In the case of a variable secured limit, this field will            contain either the same values as field 26, LIMIT BAND            or, if the total ONLINE LIMIT amount is lower than the            MAXIMUM TOTAL in field 21, the ONLINE LIMIT amount            apportioned pro-rata across the time bands in line with            the specified LIMIT BAND split.\n1 to 19 type AMT (standard amount format). (No input, system-generated field) Multivalue field associated with fields 25 to 45.\n"
                        },
                        "reviewFreq": {
                            "type": "string",
                            "description": "Specifies the next date on which the limit is to be reviewed. This field is mapped to LIMIT record linked to the Arrangement.\nValidation Rules:\nStandard T24 frequency code.\nThe first review date must not be later than the Limit EXPIRY.DATE.\n"
                        }
                    }
                },
                "officers": {
                    "type": "object",
                    "properties": {
                        "officrers": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "otherOfficer": {
                                        "type": "string",
                                        "description": ""
                                    }
                                }
                            }
                        },
                        "primaryOfficer": {
                            "type": "string",
                            "description": "The primary officer responsible for the product/arrangement can be specified. All officers must exist on the T24 DEPT.ACCT.OFFICER file.\nThe primary officer is used as the ACCOUNT.OFFICER in the created ACCOUNT record.\n"
                        }
                    }
                },
                "schedule": {
                    "type": "object",
                    "properties": {
                        "payment": {
                            "type": "array",
                            "description": "payment",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "paymentType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "paymentMethod": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "paymentFrequency": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "billType": {
                                        "type": "string",
                                        "description": "Bill Type would be picked from EB.LOOKUP instead of the hard-coded values of PAYMENT, EXPECTED.\nHowever all the options would not be available for this field within PAYMENT.SCHEDULE.\nThe following values would not be available,.\n1.INFO.\n2.PR.CHARGE.\n3.ACT.CHARGE.\n4.DEF.CHARGE.\n5.DISBURSEMENT.\nOther user defined values may be given which then can be used in Overdue PC to define different aging rules for the BillType.\nWhen a user defined value is captured it would be assumed as PAYMENT type Bill, and not 'Expected' type bill.\nValidations:.\nâ€¢Standard lookup field.\nâ€¢Maximum number of characters is restricted to 15.\nâ€¢INFO, PR.CHARGE, ACT.CHARGE, DEF.CHARGE options not applicable for this field although it is part of the lookup values.\n"
                                    },
                                    "billProduced": {
                                        "type": "string",
                                        "description": "By default T24 will create the Bill on the due date, however for products which require a Bill notice to be sent in advance of the due date, it is possible for the user to enter the number of days prior. This will result in the due amounts being projected and recorded on the bill.\nNumber of working days prior to the due date when the bill needs to be produced is defined in the field BILL.PRODUCED.\n"
                                    },
                                    "autoSettle": {
                                        "type": "string",
                                        "description": "By default NULL. If set to NULL, indicates AUTO.SETTLE is not enabled.\n"
                                    },
                                    "property": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "propertyId": {
                                                    "type": "string",
                                                    "description": "Any alphanumeric character can be used to define the name of the property.\nMaximum of 15 characters are allowed.\n"
                                                },
                                                "dueFrequency": {
                                                    "type": "string",
                                                    "description": "Indicates the actual frequency when the payment needs to be made due. Due frequency is defined for each payment property under a payment type.\nPayment frequency is defaulted when due frequency is null.\nGenerally both payment and due frequency has same value. When multiple properties are defined for a given payment type, due frequency of one of the property can de different from the payment frequency.\nExample:.\na) M 01 31. M = Monthly. 01 = one monthly intervals. 31 = the last day of the month.\nb) M 03 31 M = Monthly. 03 = three monthly intervals. 31 = the last day of the month.\nc) M 01 10 M=Monthly, 01 = at monthly intervals10 = 10th of the month.\nd) 31 MAR 2006 W , where W= weekly. In this case, the first schedule would fall on 31March 2006.\ne) 31 Mar 2006 BSNSS, where BSNSS = every business day. In this case, the first schedule would fall on 31March 2006.\nStandard T24 Recurrence frequency field.\nInput prohibited for a date prior to the system date.\n"
                                                }
                                            }
                                        }
                                    },
                                    "payments": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "percentage": {
                                                    "type": "number",
                                                    "description": "This field stores the Percentage of holdings to be redeemed/subscribed.This input is only recorded and not used for calculations.\nInput is allowed for SWITCH orders alone.\n"
                                                },
                                                "startDate": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Identifies the Date & Frequency of the Standalone DD for execution.\nThe claim value date is the date component of this field. Hence the date & the frequency has to be given after considering the Claim value date as given in DD.PARAMETER.\nThe date is cycled with the given frequency and this mandate reference is updated in DD.STANDALONE.FQU.LIST with the next execution date.\nWhenever the frequency is modified, then the underlying claim (DD.ITEM) is marked as 'DELETED' and new claim is raised for the given frequency. Incase the Claim is already sent(DD.ITEM status is 'CLAIMSENT'), then override is raised. However the DD.ITEM will not be marked as 'DELETED' as claim file is already generated.\nMandatory when STAND.ALONE.DDI set to Yes\nThis field is sub-divided into two elements: 1. Date 1-9 type D (date format in range 1950-2049) characters. 2. Optional Frequency 1-5 type SS (uppercase alpha or numeric, first character alpha) characters. (Mandatory input)\nThe date input or generated will correspond to the first execution of the Standalone DD.\nUsing the date & frequency in case given , DD.STANDALONE.FQU.LIST is updated with the next execution date.\nAn override will be required if the date input is a non-working day.\nDate entered should be greater than today and should not be more than Termination date.\n"
                                                },
                                                "endDate": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": ""
                                                },
                                                "numberPayments": {
                                                    "type": "string",
                                                    "description": "If a frequency has been specified the user can specify a Start Date or it can be defaulted from the Base Date. Additionally an End Date or a Number of Payments can be specified to indicate to T24 when the payments should terminate.\nThis field is part of a multi value set of fields with START.DATE, END.DATE and ACTUAL.AMT.\n"
                                                },
                                                "calcAmount": {
                                                    "type": "number",
                                                    "format": "int64",
                                                    "description": "There can be two amounts for each payment definition; Calculated Amount and Actual Amount.\nA calculated amount is determined by T24 based upon the Payment Type and Properties involved.\nSystem maintained(NOINPUT) field.\n"
                                                },
                                                "actualAmount": {
                                                    "type": "number",
                                                    "format": "int64",
                                                    "description": "There can be two amounts for each payment definition; Calculated Amount and Actual Amount. An actual amount can be entered by the user to override the calculated amount or manual payments. When adhoc payments are defined we need to define the actual anount for each payment date This field is part of a multi value set of fields with START.DATE, END.DATE and NUM.PAYMENTS.\nFor Disbursement Schedule(Account - Pay), the field is mandatory and sum of the future schedules should sum up to the CUR<Term Amount>.\nValidation Rules:\n1-9 numeric characters plus decimal point and commas.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "amortisationTerm": {
                            "type": "string",
                            "description": "If specific amount (residual amount) needs to be collected at the maturity date of the term, we can achieve this either by actually defining the residual amount or by defininng a amortisation term.\nThis field indicates the term for amortisation. The actual payment amount is calculated based on the amortisation term and not on the actual term defined in TERM.AMOUNT property of the arrangement. This calculated payment is then spread across actual term of the arrangement. If the amortisation term is greater than the actual term then we would be left with residual amount at the maturity date.\nAny residual amount must then be paid by the client on maturity of the arrangement. Input in this field is allowed only for Constant, linear payment types. The term can be entered as a number of Days (D), Weeks(W), Months(M) or Years(Y).\n"
                        },
                        "residualAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "If a specific amount needs to be collected on the final schedule date, that amount may be stated in this field. The amount stated in this field is 'Exclusive' of any scheduled calculated amount on the final schedule and is always considered to be belonging to ACCOUNT property.\nAs an illustration, if an Annuity Arrangement for 100000 is assumed and an amount of 20000 is stated as RESIDUAL.AMOUNT, the Annuity amount(CALC.AMOUNT) would be computed based on only 80000. If the Annuity amount is say 1500, on the final schedule date, system would make due 1500+20000 = 21500.\nThe residual amount would be recorded in bills under a special payment type called 'RESIDUAL.PRINCIPAL'.\nThe amount stated in this field would be automatically made due on PAYMENT.END.DATE.\nStandard T24 amount field in the arrangement currency.\n"
                        },
                        "billsCombined": {
                            "type": "string",
                            "description": "Indicates whether bills which have the same due date and are produced on the same date should be combined. In case of capitalisation (where we have two payment one is made due and other capitalised) even if bills combined set to YES, system would generate two separate bills. In another scenario where have one payment type to be made due and two payment types to be capitalised, then system would combine the those two payment types.\nInput allowed should be either YES or NO.\n"
                        },
                        "recalcFrequency": {
                            "type": "string",
                            "description": "If 'Nothing' is selected in field RECALCULATE, a recalculation frequency should be specified.\nExample:.\na) M 01 31. M = Monthly. 01 = one monthly intervals. 31 = the last day of the month.\nb) M 03 31 M = Monthly. 03 = three monthly intervals. 31 = the last day of the month.\nc) M 01 10 M=Monthly, 01 = at monthly intervals10 = 10th of the month.\nd) 31 MAR 2006 W , where W= weekly. In this case, the first schedule would fall on 31March 2006.\ne) 31 Mar 2006 BSNSS, where BSNSS = every business day. In this case, the first schedule would fall on 31March 2006.\nStandard date format.\nMust be a valid date.\nAn override will be required if the date is not defined on the HOLIDAY table.\nAn override will be required if the date as defined on the HOLIDAY table is a non working day.\nInput prohibited for a date prior to the system date.\n"
                        }
                    }
                },
                "settlement": {
                    "type": "object",
                    "properties": {
                        "linkedAccounts": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "linkedAccountType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "linkedAccount": {
                                        "type": "string",
                                        "description": ""
                                    }
                                }
                            }
                        },
                        "payin": {
                            "type": "array",
                            "description": "When PAYIN.ACCOUNT used is an Arrangement Account, then an activity has to be specified to debit that arrangement as well. That activity need to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Debit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYIN.ACCOUNT Required only if the PAYIN.ACCOUNT is an AA Account.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "payinSettlement": {
                                        "type": "string",
                                        "description": "The field may be used as a switch to turn off the Settlement instruction temporarily without having the need to clear or delete the field contents. If the field is set to NO, then it means the instructions are not active. Validation Rules: Valid input is Yes or No. Default value is Yes.\n"
                                    },
                                    "paymentTypes": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "paymentTypeAccount": {
                                                    "type": "string",
                                                    "description": "Payment types for the AA contract that require settlement by DD to be defined.\nValid payment type from AA.PAYMENT.TYPE.\n"
                                                }
                                            }
                                        }
                                    },
                                    "payinActivity": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "mandateReference": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "The DD mandate to be used if the settlement method is DD. The DD number must be the account of the arrangement.\nShould be a valid Mandate Ref from DD.DDI.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "settlement": {
                            "type": "array",
                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "payinAccount": {
                                        "type": "string",
                                        "description": "Contains the Account number from where funds are to be debited and Credited against this payment type. Multiple accounts could be defined here and the rules of funding is governed by the PAYIN.AC.DB.RULE field. Validation Rules: Should be a valid T24 ACCOUNT Number.\n"
                                    },
                                    "paymentType": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "reference": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payinActivity": {
                                                    "type": "string",
                                                    "description": "When PAYIN.ACCOUNT used is an Arrangement Account, then an activity has to be specified to debit that arrangement as well. That activity need to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Debit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYIN.ACCOUNT Required only if the PAYIN.ACCOUNT is an AA Account.\n"
                                                },
                                                "payinDbRule": {
                                                    "type": "string",
                                                    "description": "The field decides the manner in which system should utilise the funds available in PAYIN.ACCOUNT during settlement process. 1) FULL: System debits the PAYIN account to the extent of the bill amount irrespective of whether or not the funds are avaliable in the specified account. For this purpose, system creates an overdraft in the PAYIN.ACCOUNT in case funds are only partially available provided the PAYIN.ACCOUNT has a limit attached to it. 2) PARTIAL: System debits the PAYIN.ACCOUNT only to the extent of funds availabe. 3) NONE: System would not debit the PAYIN.ACCOUNT if funds are not fully available to settle the bill.\n"
                                                },
                                                "payinSettleActivity": {
                                                    "type": "string",
                                                    "description": "Activity to be used to settle the Dues of the current Arrangement. Typically this would be a APPLYPAYMENT activity. User activity may also be stated in this field. Validation Rules: Should be a valid record in AA.ACTIVITY.\n"
                                                },
                                                "payinRcType": {
                                                    "type": "string",
                                                    "description": "Defines the RC.TYPE reference to be used during handoff to inform the recycler what type of transaction is being handed-off.\nValidation Rules:\nShould be a valid entry in RC.TYPE.\nValid only if PAYIN.TXN.TYPE is defined.\n"
                                                },
                                                "payinRcCondition": {
                                                    "type": "string",
                                                    "description": "Defines the RC.CONDITION to be used for the payment type to allow variation of different retry conditions.\nValidation Rules:\nShould be a valid entry in RC.CONDITION.\nValid only if PAYIN.TXN.TYPE is defined.\n"
                                                },
                                                "transactionType": {
                                                    "type": "string",
                                                    "description": "Indicates whether the Customer is placing an order to buy or sell.\nThe transaction code is user defined for convenience and adaptability to cover all eventualities within theSecuritys Module From Coupon Payments to Redemptions and Capital Increase Type updates. Within the Open Orderapplication it is suggested that the same codes as for the Sec.Trade application i.e. For A purchase of securitiesSPR and for a Sale SSL be used.\n1-3 type S (uppercase alpha) character Sc.Trans.Name. (Mandatory Input.)\nMust be a valid code on the SC.TRANS.NAME file.\n"
                                                },
                                                "nominatedAmount": {
                                                    "type": "number",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "additionalAmount": {
                                                    "type": "number",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "excludeProperties": {
                                                    "type": "string",
                                                    "description": ""
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "payout": {
                            "type": "array",
                            "description": "When PAYOUT.ACCOUNT used is an Arrangement Account, then an activity has to be specified to Credit the Account arrangement as well. That activity needs to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Credit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYOUT.ACCOUNT Required only if the PAYOUT.ACCOUNT is an AA Account.\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "payoutSettlement": {
                                        "type": "string",
                                        "description": "The field may be used as a switch to turn off the Settlement instruction temporarily without having the need to clear or delete the field contents. If the field is set to NO, then it means the instructions are not active. Validation Rules: Valid input is Yes or No. Default value is Yes.\n"
                                    },
                                    "payoutSettleActivity": {
                                        "type": "string",
                                        "description": "Contains the PROPERTY based on which the Payout settlement instruction would be processed. This definition allows users to configure multiple payouts happening to multiple accounts. For example, user can configure Current Interest to be paid out to one account, whilst the Maturity deposit amount may be credited to another account. Validation Rules: Should be a valid record in AA.PROPERTY.\n"
                                    },
                                    "propertyClasses": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payoutPropertyClass": {
                                                    "type": "string",
                                                    "description": "Contains the PROPERTY CLASS based on which the Payout settlement instruction would be processed. This definition allows users to configure multiple payouts happening to multiple accounts. For example, user can configure Interest to be paid out to one account, whilst the Maturity deposit amount to be credited to another account. Validation Rules: Should be a valid record in AA.PROPERTY.CLASS.\n"
                                                }
                                            }
                                        }
                                    },
                                    "properties": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payoutProperty": {
                                                    "type": "string",
                                                    "description": "Contains the PROPERTY based on which the Payout settlement instruction would be processed. This definition allows users to configure multiple payouts happening to multiple accounts. For example, user can configure Current Interest to be paid out to one account, whilst the Maturity deposit amount may be credited to another account. Validation Rules: Should be a valid record in AA.PROPERTY.\n"
                                                }
                                            }
                                        }
                                    },
                                    "payoutActivity": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payoutAccount": {
                                                    "type": "string",
                                                    "description": "Contains the Account to which funds are to be credited from this Arrangement. Validation Rules: Should be a valid T24 ACCOUNT Number.\n"
                                                },
                                                "payoutBeneficiary": {
                                                    "type": "string",
                                                    "description": "This field is a link to the core BENEFICIARY table and is used to define who is the ultimate beneficiary of the funds.\nWhen configured a PAYMENT.ORDER will be generated and the routing will be decided via the PAYMENT.ORDER.PARAMETER.\nBased on the setting in PAYMENT.ORDER.PARAMETER either a FUNDS.TRANSFER or TPH message will be produced.\nAlong with values from the PAYMENT.ORDER.PRODUCT record the BENEFICIARY record is mapped through to the PAYMENT.ORDER application and then mapped through to FUNDS.TRANSFER or TPH.\nCurrent functionality also allows for a T24 account to be defined in the Beneficiary record which will be credited.\no Optional field.\no Mutually exclusive with PAYOUT.ACCOUNT.\no Is used in conjunction with PAYOUT.PO.PRODUCT.\no Drills down to the BENEFICIARY table.\n"
                                                },
                                                "payoutPoProduct": {
                                                    "type": "string",
                                                    "description": "This field is linked to the PAYMENT.ORDER.PRODUCT table and its value is passed through to the PAYMENT.ORDER application.\nIts main purpose will be to control parameters for TPH processing and pass outgoing messages parameters.\no Optional field.\no Is used in conjunction with PAYOUT.BENEFICIARY.\no Drills down to the PAYMENT.ORDER.PRODUCT table.\n"
                                                },
                                                "payoutPercentage": {
                                                    "type": "number",
                                                    "description": "Will allow the ability to define only a percentage value.\nThe system will cascade 'from top-to bottom' down the multiple fields taking the percentages in order (a blank field will be considered for processing last).\nThe percentage defined is the % portion of the Billed amount, which will be settled from the respective account.\nThe total percentages may not exceed 100%, The total percentages may not total 100%.\nIn the case of any rounding issues the last account will be deemed as the account to process any required adjustments.\nA blank field can be defined at last, In this case the remainder of the bill will be settled from this account.\n"
                                                },
                                                "payoutAmount": {
                                                    "type": "number",
                                                    "format": "int64",
                                                    "description": "Will allow the ability to define only a fixed value.\nThe system will cascade 'from top-to bottom' down the multiple fields taking the amounts defined in order (a blank field will be considered for processing last).\nWhen a bill is generated to be collected the individual amounts or total amounts defined may exceed the billed amount.\nIn this case the amount defined is classed as an 'up-to' amount. This is the maximum that can be taken and will honour the ACCOUNT.DEBIT.RULE field.\nTo satisfy the bill a lesser amount can also be taken.\nWhen a bill is generated to be collected the individual amounts or total amounts defined may not satisfy the billed amount.\nThe amount defined will be the amount to be taken.\nIn this case any remainder of the bill will be made due.\n"
                                                },
                                                "payoutActivity": {
                                                    "type": "string",
                                                    "description": "When PAYOUT.ACCOUNT used is an Arrangement Account, then an activity has to be specified to Credit the Account arrangement as well. That activity needs to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Credit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYOUT.ACCOUNT Required only if the PAYOUT.ACCOUNT is an AA Account.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "retryDays": {
                            "type": "string",
                            "description": ""
                        },
                        "defaultSettlementAccount": {
                            "type": "string",
                            "description": "An account specified here will be used as the settlement account for all PAYIN or PAYOUT entries which do not have a Settlement Account, Beneficiary or DD Mandate Reference defined.\nInput in this field is optional. Must be a valid account.\n"
                        }
                    }
                },
                "commitment": {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "type": "number",
                            "format": "int64",
                            "description": "This field contains the cash amount that is to be traded.\nWhen the ORDER.TYPE is CASH,If the CASH.CHRGS field is set to GROSS then the cash amount will be used to calculate the nominal anycharges/commissions that apply will be added to this value, however, if the CASH.CHRGS field is set to NET the cashamount will include all charges/commissions, adjusting the nominal to achieve this.\nMandatory if ORDER.TYPE is CASH\n"
                        },
                        "changeAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": "The original commitment amout can be increased or decreased using INCREASE or DECREASE action. This field represent the amount to increase or decrease on the original amount.\nFor increase action, the input in this field should be greater than zero.\nFor decrease action the input in this field should be less than zero.\nStandard T24 amount field.\n"
                        },
                        "term": {
                            "type": "string",
                            "description": "Indicates the period to which a rate applies.\n'R' for Remaining, NND for Rest period in Days where D  Number of Days,      NNNM for Rest Period in Months where M Number of Months and NNY for rest     period in years where Y Number of years. e.g. a 10 day rest period would be     written as 10D, a 120 month rest period as 120M and a 20 year rest period as     20Y. R must be the last rest period entered. Multi value field. (Mandatory     input. No default.)\nThe number of days or months must be entered in logical order i.e. in     ascending sequence.\nFor days the range 01-31 will be allowed while for months 01-360 will be     accepted. For years the range 01-30 is accepted.\nWhen 'R' is defined, at least one additional rest period must be defined.\nWhen more than one rest period is defined, 'R' must be entered on the last     entered rest period.\n"
                        },
                        "revolving": {
                            "type": "string",
                            "description": "Defines the revolving term amounts for lending products. The effect of a revolving product is to increase the available amount from which a customer may drawdown as a result of certain payments. The options are:.\nNO - the available amount will not increase when any payments are made.\nPAYMENT - any payment against the outstanding amount(due or not due) will result in the available amount increasing.\nPREPAYMENT - only repayments agains the outstanding amount (balance not yet due) will result in the available amount increasing.\n",
                            "enum": [
                                "NO",
                                "PAYMENT",
                                "PREPAYMENT"
                            ]
                        },
                        "updateLimit": {
                            "type": "string",
                            "description": "Defines whether the commitment amount of the Limit used for the arrangement should be updated and shown on the LIMIT record.\n",
                            "enum": [
                                "YES",
                                "NO"
                            ]
                        },
                        "topupAmount": {
                            "type": "number",
                            "format": "int64",
                            "description": ""
                        }
                    }
                },
                "agent": {
                    "type": "object",
                    "properties": {
                        "agents": {
                            "type": "array",
                            "description": "",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "agentId": {
                                        "type": "string",
                                        "description": "Holds the agent ID from CUSTOMER table.\n"
                                    },
                                    "agentArrangementId": {
                                        "type": "string",
                                        "description": "Hold the agentâ€™s arrangement ID, based on which commissions have to be calculated. Should be a valid AA.ARRANGEMENT (AGENT LINE).\n"
                                    },
                                    "agentRole": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "events": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "fixedAmount": {
                                                    "type": "number",
                                                    "format": "int64",
                                                    "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                                },
                                                "marginOperand": {
                                                    "type": "string",
                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                },
                                                "marginRate": {
                                                    "type": "string",
                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                },
                                                "marginPercent": {
                                                    "type": "number",
                                                    "description": "Defines a percentage is applied over the default commission amount, to calculate the final commission for a financial arrangement. Is used in conjunction with MARGIN.OPERAND.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "periodiccharges": {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "type": "array",
                            "description": "This field contains the cash amount that is to be traded.\nWhen the ORDER.TYPE is CASH,If the CASH.CHRGS field is set to GROSS then the cash amount will be used to calculate the nominal anycharges/commissions that apply will be added to this value, however, if the CASH.CHRGS field is set to NET the cashamount will include all charges/commissions, adjusting the nominal to achieve this.\nMandatory if ORDER.TYPE is CASH\n",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "debitCharge": {
                                        "type": "string",
                                        "description": "Minimum charge amount can be specified for associated currency attribute. AA.CHARGE.DETAILS will be updated with the actual calculated charge amount and the charge amount that has been billed after applying MIN.CHG.AMOUNT. If currency is input either of Maximum or Minimum charge amount is mandatory.\n"
                                    },
                                    "chargeAmount": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Holds the charge amount equivalent in charge account currency\n"
                                    },
                                    "creditCharge": {
                                        "type": "string",
                                        "description": "Defines minimum charge amount to be paid for the currency attribute if the net charge amount is a Credit.\n"
                                    },
                                    "maxCreditCharge": {
                                        "type": "string",
                                        "description": "Defines maximum charge amount to be paid for the currency attribute if the net charge amount is a Credit.\n"
                                    }
                                }
                            }
                        },
                        "waiveCharge": {
                            "type": "string",
                            "description": "Input of 'NO' indicates that charges are collected on this PAYMENT.STOP.TYPE and an input of 'YES' indicates that charges are to be waived for this particular stop payment. If there is no input defaults to 'NO'.\nOptional input. Valid input 'YES' or 'NO'. Defaults to 'NO'.Multi value       field associated with fields 2 to 24.\nAlphanumeric - Maximum of 3 characters\n"
                        },
                        "includeDeferred": {
                            "type": "string",
                            "description": "Indicates if all deferred charges should be included or not. Valid options - YES and NO.\n"
                        }
                    }
                }
            }
        },
        "createBLSimResponse": {
            "properties": {
                "header": {
                    "$ref": "#/definitions/ArrangementHeader"
                },
                "body": {
                    "$ref": "#/definitions/createBLSimResponseBody"
                }
            },
            "description": "createBLSimResponse"
        },
        "createBLSimResponseBody": {
            "type": "object",
            "properties": {
                "arrangementActivity": {
                    "type": "object",
                    "properties": {
                        "parties": {
                            "type": "array",
                            "description": "",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "partyId": {
                                        "type": "string",
                                        "description": "This field denotes the customer(s) of the Arrangement contract.\nThis field is required to be input for new arrangement, takeover, and Change primary customer activities.\nAssociated multi-value with CUSTOMER.ROLE field.\nValidation Rules:\n1 -6 numeric character customer number. or 3 - 10 alphanumeric character customer mnemonic. (mandatory input).\nMust be either a valid customer number or customer mnemonic of a customer on the CUSTOMER file.\n"
                                    },
                                    "partyRole": {
                                        "type": "string",
                                        "description": "Associated with CUSTOMER field. Denotes the role of the customer in the Arrangement.\nValidation Rules:\nMandatory input. If not input by the user, defaulted with the system created role 'Owner'.\nMust be a valid record in AA.CUSTOMER.ROLE table.\n"
                                    }
                                }
                            }
                        },
                        "agents": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "agentId": {
                                        "type": "string",
                                        "description": "Holds the agent ID from CUSTOMER table.\n"
                                    },
                                    "agentArrangementId": {
                                        "type": "string",
                                        "description": "Hold the agentâ€™s arrangement ID, based on which commissions have to be calculated. Should be a valid AA.ARRANGEMENT (AGENT LINE).\n"
                                    },
                                    "agentRole": {
                                        "type": "string",
                                        "description": ""
                                    }
                                }
                            }
                        },
                        "arrangmentId": {
                            "type": "string",
                            "description": "Unique identification number for the arrangement contract. The format of the ID is as follows.\nAA YYDDD xxxxx.\nwhere: AA - Arrangement Architecture module identifier, YYDDD - Year and date of input in julian date format, xxxxx - Is a system generated unique identifier.\nFor 'New Arrangement' activity this field should be input as 'NEW' and will be updated by the system while processing the activity with the unique reference number.\nWhen attempting an activity for a existing arrangement and the arrangement has generated a underlying ACCOUNT record, then the ACCOUNT id may be used as an alternate id.\nValidation Rules:\nMust be 'NEW' or an existing Arrangement ID.\n"
                        },
                        "productId": {
                            "type": "string",
                            "description": "This field denotes product of the arrangement contract. The characteristics of the arrangement is derived from the Product to which it is linked to.\nAn arrangement product and arrangement contract is a series of properties (AA.PROPERTY) relating to different components (AA.PROPERTY.CLASS). Each product has a set of mandatory components and optional components.\nIt is possible to change the product of the arrangement during its life-cycle subject to certain restrictions. For each product change this field is updated along with the effective date of change.\n"
                        },
                        "variation": {
                            "type": "string",
                            "description": "The field specifies the variation of the product that the arrangement is running. When selecting a product from the catalogue, entering the customer number and validating, AA will automatically choose the correct variation based upon the eligibility rules and priority specified. If a user manually specified the variation, eligibility will still be checked and if the user is not eligible but the rules are configured to raise an override, the user can choose to accept the override.\n"
                        },
                        "currency": {
                            "type": "string",
                            "description": "The SWIFT Currency Code for the entry. The Currency of the Account in Field 1.  Not used in Entries over local currency Accounts.\n3 type S (upper-case alpha or numeric) characters Currency Code, or blank. (Internal file, no input.)\n"
                        },
                        "pricing": {
                            "type": "string",
                            "description": "Method used to assign a Relationship Pricing Arrangement(s) to the financial arrangement.\nAutomatic (or blank) â€“ The conditions in the productâ€™s Pricing Rules property will determine the pricing plan to apply. This option is valid if the Pricing Rules are set to 'Automatic' or 'Automatic or Manual'.\nManual â€“ The user will manually assign a plan with the following field. This option is valid if the Pricing Rules are set to 'Manual' or 'Automatic or Manual'.\nNo Pricing â€“ No plan will be applied.\nNone â€“ No plan will be applied.\nThis is an optional field.\nShould be either AUTOMATIC, MANUAL or NO.PRICING or NONE.\n"
                        },
                        "pricingPlan": {
                            "type": "string",
                            "description": "If 'Automatic' is specified in PRICING.SELECTION field, then AA will determine the best plan and populate this field with the Plan Product ID. If 'Manual' is selected the user must enter the Plan Product ID. AA will validate to ensure that a valid Relationship Pricing Arrangement exists for the customer. This Plan ID/Variation will also be stored in AA.ARRANGEMENT.\n"
                        },
                        "rewardsArrangementId": {
                            "type": "string",
                            "description": "Hold the Rewardsâ€™s arrangement ID, based on which rewards have to be calculated. Should be a valid AA.ARRANGEMENT (REWARDS LINE).\n"
                        },
                        "tradeDate": {
                            "type": "string",
                            "format": "date",
                            "description": "Standard date field, which is the trade date of the contract. Can be input during NEW/ROLLOVER/CHANGE.PRODUCT activities, amendment during other activities would cause error.\nValidations\n1. A date field type only.\n2. Initially defaulted to the effective date, if it is a forward dated activity then the current system date will be defaulted.\n3. Can be changed but must be equal to or less than the current system date.\n4. A back dated date is acceptable but must be within the parameters of the Product Proofing.\n5. Cannot have a date that is greater than the existing field EFFECTIVE.DATE in AA.ARRANGEMENT.ACTIVITY.\n"
                        },
                        "activityId": {
                            "type": "string",
                            "description": ""
                        },
                        "effectiveDate": {
                            "type": "string",
                            "format": "date",
                            "description": "Effective date of the Activity to be processed. This is always required for processing any activity.\nStandard date field.\n"
                        },
                        "reason": {
                            "type": "string",
                            "description": "A text field to store the reason behind performing the current activity. For example, if the rate is manually revised or product changed or redeemed(and not restricted to the above activities alone), a user may record a reason for performing such activity for future verification and audit.\n"
                        }
                    }
                },
                "activities": {
                    "type": "object",
                    "properties": {
                        "{activityName}": {
                            "type": "object",
                            "properties": {
                                "activity": {
                                    "type": "string"
                                },
                                "transactionStatus": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "properties": {
                    "type": "object",
                    "properties": {
                        "account": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "activityCharges": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "activities": {
                                            "type": "array",
                                            "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "activityId": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "charges": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "chargePropertyId": {
                                                                    "type": "string",
                                                                    "description": "This field indicates the charge that would be collected when the corresponding activity is triggered. This field is associated with the ACTIVITY.ID field. The charge defined will correspond to the CHARGE property. These properties and their conditions would be defined in the product designer of an product.\nValidation rule.\nShould be a valid AA.PROPERTY belonging to the CHARGE property class.\n"
                                                                },
                                                                "appplicationPeriod": {
                                                                    "type": "string",
                                                                    "description": "This will have to accept a valid T24 period.This Field will denote the application period for current aplication Method.\n"
                                                                },
                                                                "applicationMethod": {
                                                                    "type": "string",
                                                                    "description": "This will hold three values either DUE or CAPITALISE or DEFER.This Field denote which application method(DUE or CAPITALISE or DEFER)should be taken while applying activity charges.\n",
                                                                    "enum": [
                                                                        "DUE",
                                                                        "CAPITALISE",
                                                                        "DEFER"
                                                                    ]
                                                                },
                                                                "chargeAutoSettle": {
                                                                    "type": "string",
                                                                    "description": "This field aids turning off the automatic settlement for the corresponding charge property. If the field is set as â€˜Yesâ€™ settlement processing will be done for the assocaited charge property when settlement property class is configured for â€˜Chargeâ€™ payment type.\nAllowed Values:.\nâ€˜Yesâ€™ or â€˜Noâ€™.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "settleActivity": {
                                            "type": "string",
                                            "description": "Defines the repayment activity to be triggered when there is unallocated credit. Triggered as secondary activity of Activity charge make due.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "messaging": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "restriction": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "alerts": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "changeProduct": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "changelPeriod": {
                                            "type": "string",
                                            "description": "The user can define a Product for the arrangement to change to after a period of time (e.g. 6 months) or on a specific date. A period (say 6M, 12M) may be stated in this field. The arrangement start date would be considered as the base date for computing the period. For subsequent.\nchange product events, the last change product date is considered as base date and not the arrangement start date.\nValidation rule:.\nValid PERIOD field.\nMaximum of 4 characters.\n"
                                        },
                                        "changeActivity": {
                                            "type": "string",
                                            "description": "This Field will determine which Activity will be trigger during Loan Renewal.\nMandatory if RENEWAL.DATE is used. Options:.\nROLLOVER.\nRESET.\nCHANGE.PRODUCT.\n"
                                        },
                                        "productId": {
                                            "type": "string",
                                            "description": "This field denotes product of the arrangement contract. The characteristics of the arrangement is derived from the Product to which it is linked to.\nAn arrangement product and arrangement contract is a series of properties (AA.PROPERTY) relating to different components (AA.PROPERTY.CLASS). Each product has a set of mandatory components and optional components.\nIt is possible to change the product of the arrangement during its life-cycle subject to certain restrictions. For each product change this field is updated along with the effective date of change.\n"
                                        },
                                        "changeDate": {
                                            "type": "string",
                                            "format": "date",
                                            "description": "This field indicates the date on which the arrangement would change from a existing product to a new product.\nBoth date and period are not allowed together. System would ignore the DATE.CONVENTION stated.\nValidation rule:.\nMust be a valid Date.\nMaximum of 11 Alphanumeric characters allowed.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "documentfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "preclosurefee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "newarrfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "judoloanvarfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "ddrejectfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "dischargefee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "rtgsfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "sundryfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "breakcost": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "mandatefee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "facilityfee": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "tiers": {
                                            "type": "array",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tierType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "calculationType": {
                                                        "type": "string",
                                                        "description": "Defines charge calculation type to be applied for charge calculations.\nIt will accept FLAT, PERCENTAGE, UNIT.\nFLAT - Amount defined in CHG.AMOUNT to used for the associated tier set. PERCENTAGE - Rate defined in CHARGE.RATE to be applied for the associated tier set.\nUNIT - Multiplication factor defined in CHG.AMOUNT to be applied for calculating charge.\nThis field is mandatory when CHARGE.TYPE is CALCULATED.\nEx1: Calc Type = Flat.\nCharge rate = NULL.\nChg Amount = 10.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 10.\nEX2: Calc type = Percentage.\nCharge rate = 1.\nChg Amount = NULL.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 1% = 10.\nThis is less than Tier Min charge and therefore Charge amount = 12.\nEx3: Calc Type = UNIT.\nCharge rate = NULL.\nChg Amount = 0.1.\nTier Max Charge = 15.\nTier Min Charge = 12.\nTier Amount = 1000.\nCharge amount for this tier = 1000 * 0.1 = 100.\nThis is greater than Tier Max Charge and therefore Charge amount = 15.\n"
                                                    },
                                                    "charge": {
                                                        "type": "string",
                                                        "description": "Records the charges levied against the Customer for the transaction. This is defaulted based on customer chargeconditions set for SC.TRADING but could be manually amended\n1-14 numeric characters . (number of decimal places dependant on the currency of the Security).(Optional input)\n"
                                                    },
                                                    "chgAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Behaviour of this field is based on CALC.TYPE.\nIf CALC.TYPE is FLAT then amount defined in this field will be taken as charge amount for the associated tier.\nIf CALC.TYPE is UNIT then value defined in this field will be multiplied with the amount that falls in this tier set to get the charge amount.\nThis field is mandatory when CALC.TYPE is FLAT or UNIT.\n"
                                                    },
                                                    "tier": {
                                                        "type": "string",
                                                        "description": "Defines the minimum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.\nOptinal field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "tierMaxCharge": {
                                                        "type": "string",
                                                        "description": "Defines the maximum charge amount to be applied for the tier to calculate charges.\nIf the charge calculated for this tier is less than the amount defined in this field then maximum amount will be the charge amount for this tier.\nOptional field.\nThis field cannot be input if CALC.TYPE is FLAT.\n"
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "tierCount": {
                                                        "type": "string",
                                                        "description": "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed. Calculation based on TIER.COUNT is linked to definition in AA.SOURCE.CALC.TYPE file. If the source balance for a charge is linked to a record in AA.SOURCE.CALC.TYPE which has the definition SOURCE.TYPE set to ACTIVITY and CALC.TYPE set to COUNT, then those charges are eligible to be calculated based on activity count.\nValidation Rules:\nIt is possible to specify either TIER.AMOUNT or TIER.COUNT. Both cannot be specified simultaneously.\nTIER.COUNT should be defined in ascending order.\nLast multi value of TIER.COUNT should be blank.\nEx:.\nCurrency : USD.\nCharge Type : CALCULATED.\nTier Groups: BANDS.\nCalc Tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 10.\nTier Count: 3.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 7.\nTier Count: 5.\nCalc tier Type: BAND.\nCalc Type: FLAT.\nChg Amount: 3.\nTier Count:.\nAssume the activity count of the activity linked to this charge property definition is 7 during a period. Since, it is BAND definition charge has to be calculated for each TIER.\nFor the first 3 count of activity, charge amount = 10.\nFor the remaining 4 count of activity, charge amount = 7.\nFinal Charge Amount: 17.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "chargeId": {
                                            "type": "string",
                                            "description": "Any valid FT.CHARGE.TYPE or FT.COMMISSION.TYPE codes with flat amounts can be input . If populated then charges as per this charge code/codes will be calculated and the charge code/codes attached to the PAYMENT.STOP.TYPE will be ignored, provided WAIVE.CHARGE field is set to 'NO'.\nAlphanumeric -maximum of 15 characters. Multi value field. Associated to fields 2 to 24.\n"
                                        },
                                        "fixedAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                        },
                                        "chargeRoutine": {
                                            "type": "string",
                                            "description": "This field provides an user exit to apply complex conditions to calculate the charge amount as required by the user.\nTier groups defined along with routine will be consumed at routine level.\nThis field is optional and should be a valid record in EB.API.\n"
                                        },
                                        "tierGroups": {
                                            "type": "string",
                                            "description": "This field defines the method of calculation of charge amount for the currency.\nThis field will accept two values, BANDS or LEVELS.\nThe tier set CALC.TIER.TYPE till TIER.AMOUNT will define the values needed for Calculation and this field will specify the method to calculate charge using the tier set.\nTier set can be multivalued to as many times as required and can have BAND or LEVEL specified for individual tier set, but the overall method to calculate charge is based on this field.\nIf BANDS then separate calculations are to be made for each band till the base amount is reached.\nIf LEVELS then only one is calculated and this is dependent on the level of the base Amount.\nNot allowed if CHARGE.TYPE is FIXED.\nEx :.\nTier Groups: BANDS.\nThe tier set is defined as below.\nCalc tier type: Band.\nCalc type: FLAT.\nChg Amount: 10.\nTier Amount: 10000.\nCalc tier type: Band.\nCalc type : FLAT.\nChg Amount : 15.\nTier Amount: 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume Base amount to be 35000 and is located in 4th tier set. Calculation of.\ncharge will be as below.\n1. For first 10000 Charge amount = 10.\n2. For the next 10000 (20000 - 10000) Charge amount = 20.\n3. For the next 15000 (35000 - 20000) Charge amount = 15000 * 3% = 450.\nOverall Charge Amount = 450 + 20 + 10 = 480/-.\nTier Groups: LEVELS.\nAssume Base amount to be 60000 which is located in the final tier set.\nCalculation of charge will be as below.\n1. For first 10000 charge amount = 10.\n2. For the next 10000 (20000 - 10000) charge amount = 20.\n3. For the next 40000 (60000 - 20000) charge amount = 40000 * 0.01 = 400.\nFinal Charge amount = 400 + 20 + 10 = 430/-.\n"
                                        },
                                        "relationshipProduct": {
                                            "type": "string",
                                            "description": "Field to indicate the relationship pricing plan(if any) that has influenced the rate on this arrangement. If a customer has a relationship with the bank which entitles for special margins, then the plan which has contributed to this margin would be updated here. Validation: System maintained field. Would be a valid RELATIONSHIP.PRICING product for this customer.\n"
                                        },
                                        "relationshipPercentage": {
                                            "type": "number",
                                            "description": "Rate of margin(discount or uplift) due to the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product.\nValidation: System maintained field.\nWould be a percentage would be added or subtracted to the original charge amount.\n"
                                        },
                                        "relationshipAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "Flat amount as evaluated by the relationship of the customer with the bank. Would be evaluated based on the RELATIONSHIP arrangements held by the customer and also the definitions in PREFERENTIAL.PRICING as well as the rules in PRICING.RULES of this arrangement product. Validation: System maintained field. Would replace the system calculated amount for this property.\n"
                                        },
                                        "relationshipVariation": {
                                            "type": "string",
                                            "description": "This field holds the variation selected for the arrangement for charge pricing condition.\nValidation Rules:\nSystem maintained, NOINPUT allowed.\n"
                                        },
                                        "swapKey": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "coolingDays": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "closure": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "constraint": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "customer": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "customers": {
                                            "type": "array",
                                            "description": "This field denotes the customer(s) of the Arrangement contract.\nThis field is required to be input for new arrangement, takeover, and Change primary customer activities.\nAssociated multi-value with CUSTOMER.ROLE field.\n1 -6 numeric character customer number. or 3 - 10 alphanumeric character customer mnemonic. (mandatory input)\nMust be either a valid customer number or customer mnemonic of a customer on the CUSTOMER file.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "partyId": {
                                                        "type": "string",
                                                        "description": "This field denotes the customer(s) of the Arrangement contract.\nThis field is required to be input for new arrangement, takeover, and Change primary customer activities.\nAssociated multi-value with CUSTOMER.ROLE field.\nValidation Rules:\n1 -6 numeric character customer number. or 3 - 10 alphanumeric character customer mnemonic. (mandatory input).\nMust be either a valid customer number or customer mnemonic of a customer on the CUSTOMER file.\n"
                                                    },
                                                    "partyRole": {
                                                        "type": "string",
                                                        "description": "Associated with CUSTOMER field. Denotes the role of the customer in the Arrangement.\nValidation Rules:\nMandatory input. If not input by the user, defaulted with the system created role 'Owner'.\nMust be a valid record in AA.CUSTOMER.ROLE table.\n"
                                                    },
                                                    "taxLiabilityPercentage": {
                                                        "type": "number",
                                                        "description": "This field indicates the ownership percentage of the customer in the arrangement with respect to tax liability. Based on the percentage defined for each customer, income will be split and tax will be calculated using the respective tax percentage of each customer and the income split.\nExample:.\nCustomer 1 - 50%.\nCustomer 2 - 50%.\nInterest capitalization amount: $1000.\nTax percentage for customer 1 is 10% and for customer 2 is 0% (since the customer is minor).\nNow the Tax will be calculated by applying 10% on $500 and 0% on $ 500. So the net tax amount will be $50 for which tax accounting will be raised.\nAssociated with CUSTOMER field.\nValidation Rules:\n* Must be equal or less than 100%.\n* Sum of the percentage cannot be more than 100%.\n"
                                                    },
                                                    "limitAllocactionPercentage": {
                                                        "type": "number",
                                                        "description": "This field indicates the ownership percentage of the customer in the arrangement with respect to limit liability. Limit will be checked for the customer for whom this field is defined.\nAssociated with CUSTOMER field.\nValidation Rules:\nMust be equal to 100% and definition can be done only for one customer who is also the limit customer.\nSum of the percentage cannot be more than 100%.\n"
                                                    },
                                                    "GLAllocactionPercentage": {
                                                        "type": "number",
                                                        "description": "This field indicates the ownership percentage of the customer in the arrangement with respect to GL reporting. Customer in the associated field will be used for balance sheet reporting purposes.\nAssociated with CUSTOMER field.\nValidation Rules:\nMust be equal to 100% and definition can be done only for one customer who is also the limit customer.\nSum of the percentage cannot be more than 100%.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "jointLiability": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "principaldrint": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "interest": {
                                            "type": "array",
                                            "description": "",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "fixed": {
                                                        "type": "string",
                                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA fixed rate is directly entered by the user specifying the Defined Property and is not defined by an index table. Fixed rates are entered as positive numbers unless a negative rate is allowed.\nThis field is part of a multi value set of fields including FIXED.RATE, FLOATING.INDEX, PERIODIC.INDEX, PERIODIC.PERIOD, PERIODIC.BASE, MARGIN.TYPE, MARGIN.OPER, MARGIN.RATE, TIER.MIN.RATE, TIER.MAX.RATE, TIER.AMOUNT,TIER.PERCENT.\n"
                                                    },
                                                    "floating": {
                                                        "type": "string",
                                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA floating interest rate is tied to a variable base rate (i.e. BASIC.INTEREST). During interest calculation, T24 will use the currency specific rate applicable for the calculation date (i.e. the rate used for the calculation will change whenever the base rate is changed).\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "spread": {
                                                        "type": "string",
                                                        "description": "It would be possible to specify that the rate for a given tier be â€˜Linkedâ€™, by setting the field Linked Rate to Yes.\nThis can be mixed with normal rate calculations as well.\nWhere the Linked Rate is set to Yes, system would expect that an Arrangement reference in given in the â€˜Linked Arrangementâ€™ field along with the Interest property to be linked to.\n"
                                                    },
                                                    "minMaxRate": {
                                                        "type": "string",
                                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "maxRate": {
                                                        "type": "string",
                                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "effectiveRate": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "negativeRate": {
                                                        "type": "string",
                                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                                    },
                                                    "orPercent": {
                                                        "type": "number",
                                                        "description": "The tier percent relates to the field RATE.TIER.TYPE and percentages can be entered if BAND is selected.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. Either TIER.PERCENT or TIER.AMOUNT can be entered by not both. If TIER.PERCENT is defined, then the Sum of Tier percentage should be 100%.\n"
                                                    },
                                                    "margins": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "margin": {
                                                                    "type": "string",
                                                                    "description": "Identifies whether there are single or multiple margins.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                                },
                                                                "marginOperation": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "attributes": {
                                                        "type": "string",
                                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "description": "This field along with FIELD and OPERAND, helps the user to set the conditions for the Alert to be triggered. Holds the actual value of the field on which the criteria is based. If a value is provided at the event definition level, then that value is defaulted here. If not, the user can provide the value at the time of Subscribing.\nThe fields from FIELD to VALUE are displayed in this subscription screen only when INHERIT is set to Yes in the corresponding TEC.ITEMS record. These set of fields define the criteria for alerts.\n"
                                                    },
                                                    "linkedArrangement": {
                                                        "type": "string",
                                                        "description": "Where at least one tier is set to be Linked Rate, the Arrangement to be linked for calculating the Interest Rate, must be specified here (or automatically defaulted by the system, where a Limit is attached)\n"
                                                    },
                                                    "attribute": {
                                                        "type": "string",
                                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "periodicInterest": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "periodicIndex": {
                                                        "type": "string",
                                                        "description": "A periodic rate is tied to an index (e.g. LIBOR) which is dependent on a period of time (e.g. term) and possibly an amount. Once the arrangement is active, the rate is fixed until it is reset. Periodic rates can be reset at a pre-determined frequency.\nTo define a periodic rate, the user specifies:.\nPERIODIC.INTEREST index to use.\nPeriod (this will default to TERM if a Term Amount Property exists).\nInterest selection method if the term is not found on the index. The option currently available is INTERPOLATE.\nRate Reset period.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "periodicRate": {
                                                        "type": "string",
                                                        "description": "Indicates the rate on which the index runs on the date stated in the key. When a periodic index is used and the field is left blank, then system computes the rate from PERIODIC.INTEREST and defaults it here. When a rate is already present(say, the user changes the system computed rate), then system does not compute the new rate.\nValidation Rules:\nSystem defaulted and modifiable.\nStandard Rate field.\nValid only if Periodic index is stated.\n"
                                                    },
                                                    "periodicPeriodType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "periodicPeriod": {
                                                        "type": "string",
                                                        "description": "Defines the interest period to be used when linking to PERIODIC.INTEREST.(This will default to TERM if a Term Amount Property exists),. When a period is stated in Years or Weeks, they would be converted to Months and Days respectively and then located on the PI table.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "periodicMethod": {
                                                        "type": "string",
                                                        "description": "If system does not find a interest rate in the correct bucket of PERIODIC.INTEREST table, it automatically applies a method to arrive at a rate chosen by this method.\nValid method is:.\nINTERPOLATE - System automatically interpolates the rate. This is the DEFAULT option as well.\n"
                                                    },
                                                    "initialResetDate": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": ""
                                                    },
                                                    "periodicReset": {
                                                        "type": "string",
                                                        "description": "This indicates the reset period of the index stated. System would automatically reset the PERIODIC.RATE at the frequency stated in this field. Applicable only at Arrangement level. Periodic index may still be used without this field meaning, it never resets the computed rate.\nValidation rule:.\nValid PERIOD field.\n"
                                                    },
                                                    "effectiveRate": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "negativeRate": {
                                                        "type": "string",
                                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                                    },
                                                    "margins": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "marginType": {
                                                                    "type": "string",
                                                                    "description": "Identifies whether there are single or multiple margins\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                                },
                                                                "marginOperation": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "activites": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "onActivity": {
                                                        "type": "string",
                                                        "description": "When the periodic interest rate needs to be recalculated for certain activities, this field in combination with RECALCULATE may be used to setup the activity for which interest needs to be recalculated.\nValidation Rules:\n1. Applicable only for Periodic interest rate recalculation.\n2. Must be a valid activity in AA.ACTIVITY.\n"
                                                    },
                                                    "recalculate": {
                                                        "type": "string",
                                                        "description": "Related to ON.ACTIVITY activity, when flagged to RATE, system will recalculate Periodic rate when the activity setup in ON.ACTIVITY is processed. When the value is NOTHING periodic rate would not be recalculated when the activity setup in ON.ACTIVITY is processed.\nValidation Rules:\n1. Mandatory when ON.ACTIVITY is setup.\nThe fields ON.ACTIVITY and RECALCULATE in interest property class will be enhanced to allow user to define when to recalculate â€˜Profit Amountâ€™.\nAll activities which could result in payment schedule recalculation can be configured to recalculate â€˜Profit Amountâ€™ i.e., activities with payment schedule calculate and update action.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "references": {
                                            "type": "array",
                                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "customType": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    },
                                                    "customName": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    },
                                                    "customValue": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "tiers": {
                                            "type": "string",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n"
                                        },
                                        "linkedProperty": {
                                            "type": "string",
                                            "description": "This field will be used to specify the Interest Property of the Linked Arrangement that should be referred to, for getting the Interest Rate.\nWhere at least one tier is set to be â€˜Linked Rateâ€™, this must be specified.\n"
                                        },
                                        "dayBasis": {
                                            "type": "string",
                                            "description": "T24 can calculate interest based upon several different day basis types. Each T24 Interest Day Basis type is represented as a numerator and denominator.\nNumerator (interest days).\no 360 Each month is considered to have 30 days.\no 366 The exact number of days will be used.\nDenominator (days in the year).\no 360 Each year is considered to have 360 days.\no 365 Each year is considered to have 365 days.\no 366 The exact number of days in the year will be used (365 or 366).\nT24 allows the following interest day basis types:.\nType Notes.\nA (360/360) A1 and A2 are variations which alter the method of treating a month as 30 days.\nB (366/360).\nC (366/366).\nD (360/366).\nE (366/365).\nF (360/365) F1 and F2 are variations which alter the method of treating a month as 30 days.\nThis is a Mandatory field.\n"
                                        },
                                        "calcThreshold": {
                                            "type": "string",
                                            "description": "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated.\n"
                                        },
                                        "accrualRule": {
                                            "type": "string",
                                            "description": "When accruing interest,T24 must determine which amounts to include in each day's balance, the actual days to include in the period (e.g. first day, last day) and how to round any calculations.\nT24 allows users to define the calculation method to use, by specifying an accrual rule in EB.ACCRUAL.PARAM. Users can define the following:.\nFirst Day Inclusive (Yes/No).\nLast Day Inclusive (Yes/No).\nRounding Rule (Natural, Down, Up, Currency, None).\nIntermediate Calculation Rounding (Yes/No).\nCredit value date adjustment.\nDebit value date adjustment.\n"
                                        },
                                        "compounding": {
                                            "type": "string",
                                            "description": "T24 supports the compounding of both debit and credit interest.\nCompounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year. This field defines the number of compounding periods to be applied.\nNote that the compounding type provides a factor in the calculation only and does not actually cause the base principal amount to be actually increased by the calculated interest amount.\nThe following compound frequencies are supported:.\nDAILY.\nInterest is compounded 360/5/6 times a year (from days in year in INTEREST.BASIS).\nWEEKn.\nInterest is compounded 52/n times per year based on a number of WEEKS.\n-- Bi-weekly compounding should be defined as WEEK2 and will result in 26 periods.\n-- Four-Weekly compounding should be defined as WEEK4 and results in 13 periods.\nMnn.\nInterest is compounded 12/n times a year based on a numberof months.\n-- Monthly compounding should be defined as M01 and will result in 12 periods.\n-- Bi-Monthly should be defined as M02 and will result in 6 periods.\n-- Quarterly should be defined as M03 and will result in 4 periods.\n-- Semi-Annual should be defined as M06 and will result in 6 periods.\n-- Annual should be defined as M12 and will result in 1 period.\n-- Bi-Annual should be defined as M24 and will result in 0.5 periods.\n-- Any number of months up to 99 may be defined and results in 12/n periods.\nTWMTH.\nInterest is compounded twice a month resulting in 24 periods as opposed to WEEK2.\nwhich results in 26 periods.\nNnnn.\n- Compounding takes place nnn times per year.\n"
                                        },
                                        "compoundYieldMethod": {
                                            "type": "string",
                                            "description": "This field indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate. System uses the below formula to calculate the interest amount,.\nDaily Effective Rate(ERd) = (1+Interest Rate)^(1/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\nWhen the field is set as NULL the effective rate is calculated based on the compounding frequency defined in the field COMPOUND.TYPE using the below formula,.\nDaily Effective Rate(ERd) = (1+Interest Rate/Compound Freq)^(Compound Freq/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\n"
                                        },
                                        "minIntAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field indicates the minimum interest amount to be posted for an arrangement/account.\nIf the calculated interest amount is less than the amount specified in this field, system will waive the interest amount or adjust the interest amount based on the option set in the field MIN.INT.WAIVE.\n"
                                        },
                                        "minIntWaive": {
                                            "type": "string",
                                            "description": "This field indicates if the calculated interest amount has to be waived or adjusted.\nIf the field is set to YES, then the system will waive the interest amount if it is less than the MIN.INT.AMOUNT specified.\nIf NULL value is set and if the calculated interest amount is less than the MIN.INT.AMOUNT specified, then system will post the minimum interest amount.\n"
                                        },
                                        "referLimit": {
                                            "type": "string",
                                            "description": "For an arrangement under ACCOUNTS Product Line, it is possible link the first tier amount of debit interest to the LIMIT record attached.\nIt can be achieved by setting the field REFER.LIMIT in INTEREST property condition as â€˜YESâ€™. This functionality can be enabled only if the LIMIT is managed by AA.\n"
                                        },
                                        "suppressAccrual": {
                                            "type": "string",
                                            "description": "The Field accepts the options 'YES' or 'ALTERNATE'.\nIndicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property.\nFor Example:.\nIt will be set as YES by the system if the DONOR.ACCRUAL field is set as SUPPRESS for any product / arrangement in INTEREST.COMPENSTION property of a Bundle arrangement.\nIf it is set as 'ALTERNATE' for a property then the Accrual will be suppressed for the property for which it is set and Accrual will happen for the Alternate property which is set in Activity Restriction.\nBlank value in this field denotes that there is no suppression of accrual.\nThis is a Non Mandatory field.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "penalinterest": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "interest": {
                                            "type": "array",
                                            "description": "",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "fixed": {
                                                        "type": "string",
                                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA fixed rate is directly entered by the user specifying the Defined Property and is not defined by an index table. Fixed rates are entered as positive numbers unless a negative rate is allowed.\nThis field is part of a multi value set of fields including FIXED.RATE, FLOATING.INDEX, PERIODIC.INDEX, PERIODIC.PERIOD, PERIODIC.BASE, MARGIN.TYPE, MARGIN.OPER, MARGIN.RATE, TIER.MIN.RATE, TIER.MAX.RATE, TIER.AMOUNT,TIER.PERCENT.\n"
                                                    },
                                                    "floating": {
                                                        "type": "string",
                                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA floating interest rate is tied to a variable base rate (i.e. BASIC.INTEREST). During interest calculation, T24 will use the currency specific rate applicable for the calculation date (i.e. the rate used for the calculation will change whenever the base rate is changed).\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "spread": {
                                                        "type": "string",
                                                        "description": "It would be possible to specify that the rate for a given tier be â€˜Linkedâ€™, by setting the field Linked Rate to Yes.\nThis can be mixed with normal rate calculations as well.\nWhere the Linked Rate is set to Yes, system would expect that an Arrangement reference in given in the â€˜Linked Arrangementâ€™ field along with the Interest property to be linked to.\n"
                                                    },
                                                    "minMaxRate": {
                                                        "type": "string",
                                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "maxRate": {
                                                        "type": "string",
                                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "effectiveRate": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "negativeRate": {
                                                        "type": "string",
                                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                                    },
                                                    "orPercent": {
                                                        "type": "number",
                                                        "description": "The tier percent relates to the field RATE.TIER.TYPE and percentages can be entered if BAND is selected.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. Either TIER.PERCENT or TIER.AMOUNT can be entered by not both. If TIER.PERCENT is defined, then the Sum of Tier percentage should be 100%.\n"
                                                    },
                                                    "margins": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "margin": {
                                                                    "type": "string",
                                                                    "description": "Identifies whether there are single or multiple margins.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                                },
                                                                "marginOperation": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "attributes": {
                                                        "type": "string",
                                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "description": "This field along with FIELD and OPERAND, helps the user to set the conditions for the Alert to be triggered. Holds the actual value of the field on which the criteria is based. If a value is provided at the event definition level, then that value is defaulted here. If not, the user can provide the value at the time of Subscribing.\nThe fields from FIELD to VALUE are displayed in this subscription screen only when INHERIT is set to Yes in the corresponding TEC.ITEMS record. These set of fields define the criteria for alerts.\n"
                                                    },
                                                    "linkedArrangement": {
                                                        "type": "string",
                                                        "description": "Where at least one tier is set to be Linked Rate, the Arrangement to be linked for calculating the Interest Rate, must be specified here (or automatically defaulted by the system, where a Limit is attached)\n"
                                                    },
                                                    "attribute": {
                                                        "type": "string",
                                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "periodicInterest": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "periodicIndex": {
                                                        "type": "string",
                                                        "description": "A periodic rate is tied to an index (e.g. LIBOR) which is dependent on a period of time (e.g. term) and possibly an amount. Once the arrangement is active, the rate is fixed until it is reset. Periodic rates can be reset at a pre-determined frequency.\nTo define a periodic rate, the user specifies:.\nPERIODIC.INTEREST index to use.\nPeriod (this will default to TERM if a Term Amount Property exists).\nInterest selection method if the term is not found on the index. The option currently available is INTERPOLATE.\nRate Reset period.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "periodicRate": {
                                                        "type": "string",
                                                        "description": "Indicates the rate on which the index runs on the date stated in the key. When a periodic index is used and the field is left blank, then system computes the rate from PERIODIC.INTEREST and defaults it here. When a rate is already present(say, the user changes the system computed rate), then system does not compute the new rate.\nValidation Rules:\nSystem defaulted and modifiable.\nStandard Rate field.\nValid only if Periodic index is stated.\n"
                                                    },
                                                    "periodicPeriodType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "periodicPeriod": {
                                                        "type": "string",
                                                        "description": "Defines the interest period to be used when linking to PERIODIC.INTEREST.(This will default to TERM if a Term Amount Property exists),. When a period is stated in Years or Weeks, they would be converted to Months and Days respectively and then located on the PI table.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "periodicMethod": {
                                                        "type": "string",
                                                        "description": "If system does not find a interest rate in the correct bucket of PERIODIC.INTEREST table, it automatically applies a method to arrive at a rate chosen by this method.\nValid method is:.\nINTERPOLATE - System automatically interpolates the rate. This is the DEFAULT option as well.\n"
                                                    },
                                                    "initialResetDate": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": ""
                                                    },
                                                    "periodicReset": {
                                                        "type": "string",
                                                        "description": "This indicates the reset period of the index stated. System would automatically reset the PERIODIC.RATE at the frequency stated in this field. Applicable only at Arrangement level. Periodic index may still be used without this field meaning, it never resets the computed rate.\nValidation rule:.\nValid PERIOD field.\n"
                                                    },
                                                    "effectiveRate": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "negativeRate": {
                                                        "type": "string",
                                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                                    },
                                                    "margins": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "marginType": {
                                                                    "type": "string",
                                                                    "description": "Identifies whether there are single or multiple margins\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                                },
                                                                "marginOperation": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "activites": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "onActivity": {
                                                        "type": "string",
                                                        "description": "When the periodic interest rate needs to be recalculated for certain activities, this field in combination with RECALCULATE may be used to setup the activity for which interest needs to be recalculated.\nValidation Rules:\n1. Applicable only for Periodic interest rate recalculation.\n2. Must be a valid activity in AA.ACTIVITY.\n"
                                                    },
                                                    "recalculate": {
                                                        "type": "string",
                                                        "description": "Related to ON.ACTIVITY activity, when flagged to RATE, system will recalculate Periodic rate when the activity setup in ON.ACTIVITY is processed. When the value is NOTHING periodic rate would not be recalculated when the activity setup in ON.ACTIVITY is processed.\nValidation Rules:\n1. Mandatory when ON.ACTIVITY is setup.\nThe fields ON.ACTIVITY and RECALCULATE in interest property class will be enhanced to allow user to define when to recalculate â€˜Profit Amountâ€™.\nAll activities which could result in payment schedule recalculation can be configured to recalculate â€˜Profit Amountâ€™ i.e., activities with payment schedule calculate and update action.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "references": {
                                            "type": "array",
                                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "customType": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    },
                                                    "customName": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    },
                                                    "customValue": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "tiers": {
                                            "type": "string",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n"
                                        },
                                        "linkedProperty": {
                                            "type": "string",
                                            "description": "This field will be used to specify the Interest Property of the Linked Arrangement that should be referred to, for getting the Interest Rate.\nWhere at least one tier is set to be â€˜Linked Rateâ€™, this must be specified.\n"
                                        },
                                        "dayBasis": {
                                            "type": "string",
                                            "description": "T24 can calculate interest based upon several different day basis types. Each T24 Interest Day Basis type is represented as a numerator and denominator.\nNumerator (interest days).\no 360 Each month is considered to have 30 days.\no 366 The exact number of days will be used.\nDenominator (days in the year).\no 360 Each year is considered to have 360 days.\no 365 Each year is considered to have 365 days.\no 366 The exact number of days in the year will be used (365 or 366).\nT24 allows the following interest day basis types:.\nType Notes.\nA (360/360) A1 and A2 are variations which alter the method of treating a month as 30 days.\nB (366/360).\nC (366/366).\nD (360/366).\nE (366/365).\nF (360/365) F1 and F2 are variations which alter the method of treating a month as 30 days.\nThis is a Mandatory field.\n"
                                        },
                                        "calcThreshold": {
                                            "type": "string",
                                            "description": "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated.\n"
                                        },
                                        "accrualRule": {
                                            "type": "string",
                                            "description": "When accruing interest,T24 must determine which amounts to include in each day's balance, the actual days to include in the period (e.g. first day, last day) and how to round any calculations.\nT24 allows users to define the calculation method to use, by specifying an accrual rule in EB.ACCRUAL.PARAM. Users can define the following:.\nFirst Day Inclusive (Yes/No).\nLast Day Inclusive (Yes/No).\nRounding Rule (Natural, Down, Up, Currency, None).\nIntermediate Calculation Rounding (Yes/No).\nCredit value date adjustment.\nDebit value date adjustment.\n"
                                        },
                                        "compounding": {
                                            "type": "string",
                                            "description": "T24 supports the compounding of both debit and credit interest.\nCompounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year. This field defines the number of compounding periods to be applied.\nNote that the compounding type provides a factor in the calculation only and does not actually cause the base principal amount to be actually increased by the calculated interest amount.\nThe following compound frequencies are supported:.\nDAILY.\nInterest is compounded 360/5/6 times a year (from days in year in INTEREST.BASIS).\nWEEKn.\nInterest is compounded 52/n times per year based on a number of WEEKS.\n-- Bi-weekly compounding should be defined as WEEK2 and will result in 26 periods.\n-- Four-Weekly compounding should be defined as WEEK4 and results in 13 periods.\nMnn.\nInterest is compounded 12/n times a year based on a numberof months.\n-- Monthly compounding should be defined as M01 and will result in 12 periods.\n-- Bi-Monthly should be defined as M02 and will result in 6 periods.\n-- Quarterly should be defined as M03 and will result in 4 periods.\n-- Semi-Annual should be defined as M06 and will result in 6 periods.\n-- Annual should be defined as M12 and will result in 1 period.\n-- Bi-Annual should be defined as M24 and will result in 0.5 periods.\n-- Any number of months up to 99 may be defined and results in 12/n periods.\nTWMTH.\nInterest is compounded twice a month resulting in 24 periods as opposed to WEEK2.\nwhich results in 26 periods.\nNnnn.\n- Compounding takes place nnn times per year.\n"
                                        },
                                        "compoundYieldMethod": {
                                            "type": "string",
                                            "description": "This field indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate. System uses the below formula to calculate the interest amount,.\nDaily Effective Rate(ERd) = (1+Interest Rate)^(1/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\nWhen the field is set as NULL the effective rate is calculated based on the compounding frequency defined in the field COMPOUND.TYPE using the below formula,.\nDaily Effective Rate(ERd) = (1+Interest Rate/Compound Freq)^(Compound Freq/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\n"
                                        },
                                        "minIntAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field indicates the minimum interest amount to be posted for an arrangement/account.\nIf the calculated interest amount is less than the amount specified in this field, system will waive the interest amount or adjust the interest amount based on the option set in the field MIN.INT.WAIVE.\n"
                                        },
                                        "minIntWaive": {
                                            "type": "string",
                                            "description": "This field indicates if the calculated interest amount has to be waived or adjusted.\nIf the field is set to YES, then the system will waive the interest amount if it is less than the MIN.INT.AMOUNT specified.\nIf NULL value is set and if the calculated interest amount is less than the MIN.INT.AMOUNT specified, then system will post the minimum interest amount.\n"
                                        },
                                        "referLimit": {
                                            "type": "string",
                                            "description": "For an arrangement under ACCOUNTS Product Line, it is possible link the first tier amount of debit interest to the LIMIT record attached.\nIt can be achieved by setting the field REFER.LIMIT in INTEREST property condition as â€˜YESâ€™. This functionality can be enabled only if the LIMIT is managed by AA.\n"
                                        },
                                        "suppressAccrual": {
                                            "type": "string",
                                            "description": "The Field accepts the options 'YES' or 'ALTERNATE'.\nIndicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property.\nFor Example:.\nIt will be set as YES by the system if the DONOR.ACCRUAL field is set as SUPPRESS for any product / arrangement in INTEREST.COMPENSTION property of a Bundle arrangement.\nIf it is set as 'ALTERNATE' for a property then the Accrual will be suppressed for the property for which it is set and Accrual will happen for the Alternate property which is set in Activity Restriction.\nBlank value in this field denotes that there is no suppression of accrual.\nThis is a Non Mandatory field.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "principalint": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "interest": {
                                            "type": "array",
                                            "description": "",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "fixed": {
                                                        "type": "string",
                                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA fixed rate is directly entered by the user specifying the Defined Property and is not defined by an index table. Fixed rates are entered as positive numbers unless a negative rate is allowed.\nThis field is part of a multi value set of fields including FIXED.RATE, FLOATING.INDEX, PERIODIC.INDEX, PERIODIC.PERIOD, PERIODIC.BASE, MARGIN.TYPE, MARGIN.OPER, MARGIN.RATE, TIER.MIN.RATE, TIER.MAX.RATE, TIER.AMOUNT,TIER.PERCENT.\n"
                                                    },
                                                    "floating": {
                                                        "type": "string",
                                                        "description": "Three basic types of interest are supported by T24; Fixed, Floating, and Periodic. Each of these interest types can include one or more margins and can be specified in a tiered structure.\nA floating interest rate is tied to a variable base rate (i.e. BASIC.INTEREST). During interest calculation, T24 will use the currency specific rate applicable for the calculation date (i.e. the rate used for the calculation will change whenever the base rate is changed).\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "spread": {
                                                        "type": "string",
                                                        "description": "It would be possible to specify that the rate for a given tier be â€˜Linkedâ€™, by setting the field Linked Rate to Yes.\nThis can be mixed with normal rate calculations as well.\nWhere the Linked Rate is set to Yes, system would expect that an Arrangement reference in given in the â€˜Linked Arrangementâ€™ field along with the Interest property to be linked to.\n"
                                                    },
                                                    "minMaxRate": {
                                                        "type": "string",
                                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "maxRate": {
                                                        "type": "string",
                                                        "description": "For each tier defined, a user can specify a minimum and/or maximum rate for the tier. This is applicable for variable and periodic rates and allows the tier rate to be controlled.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "effectiveRate": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "upTo": {
                                                        "type": "string",
                                                        "description": "Defines the threshold amount for each tier.\nIf more than one tier is defined then values in this field should be in ascending order. This field is mandatory except for the last tier.\nEX:.\nThis example illustrates how the charge amount is being calculated based on definitions in the charge property.\nCurrency: USD.\nCharge type: Calculated.\nCharge Period: 12M.\nCalc Threshold: 10000.\nFree Amount: 500.\nTier Groups: BANDS.\nBalance Calc Type: DR.CURRENT -> AA.BALANCE.CALC.TYPE record which says current balance.\nCalc tier type : Band.\nCalc type : Flat.\nChg Amount : 10.\nTier Amount : 10000.\nCalc tier type : Band.\nCalc type : Percentage.\nChg Amount : 1%.\nTier Min Charge : 150.\nTier Amount : 20000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 2%.\nTier Amount : 30000.\nCalc tier type : Level.\nCalc type : Percentage.\nCharge Rate : 3%.\nTier Max Charge : 100.\nTier Amount : 40000.\nCalc tier type : Band.\nCalc type : Unit.\nChg Amount : 0.01.\nTier Amount :.\nAssume base amount to be 100000 GBP. Charge amount is calculated as below.\nConvert Base amount from GBP to USD.\n100000 * 1.55 = 155000 USD.\nTier 1:.\nFor the first 10000 Charge amount = 10.\nTier 2:.\nFor the next 10000 Charge amount = 10000 * 1% = 100.\nTier Min charge = 150 so charge amount = 150.\nTier 4:.\nFor the next 20000 Charge amount = 20000 * 3% = 600.\nTier max charge = 100 so charge amount = 100.\nTier 5:.\nFor the remaining amount 155000 - 40000 = 115000 * 0.01 = 1150 (Final Tier).\nCharge amount in USD = 1150 + 100 + 150 + 10 = 1410 USD.\nFinal Charge amount equivalent to GBP = 2185.5 GBP.\n"
                                                    },
                                                    "negativeRate": {
                                                        "type": "string",
                                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                                    },
                                                    "orPercent": {
                                                        "type": "number",
                                                        "description": "The tier percent relates to the field RATE.TIER.TYPE and percentages can be entered if BAND is selected.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. Either TIER.PERCENT or TIER.AMOUNT can be entered by not both. If TIER.PERCENT is defined, then the Sum of Tier percentage should be 100%.\n"
                                                    },
                                                    "margins": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "margin": {
                                                                    "type": "string",
                                                                    "description": "Identifies whether there are single or multiple margins.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                                },
                                                                "marginOperation": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "attributes": {
                                                        "type": "string",
                                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "description": "This field along with FIELD and OPERAND, helps the user to set the conditions for the Alert to be triggered. Holds the actual value of the field on which the criteria is based. If a value is provided at the event definition level, then that value is defaulted here. If not, the user can provide the value at the time of Subscribing.\nThe fields from FIELD to VALUE are displayed in this subscription screen only when INHERIT is set to Yes in the corresponding TEC.ITEMS record. These set of fields define the criteria for alerts.\n"
                                                    },
                                                    "linkedArrangement": {
                                                        "type": "string",
                                                        "description": "Where at least one tier is set to be Linked Rate, the Arrangement to be linked for calculating the Interest Rate, must be specified here (or automatically defaulted by the system, where a Limit is attached)\n"
                                                    },
                                                    "attribute": {
                                                        "type": "string",
                                                        "description": "These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time.\nInput must be a valid record from AA.PERIODIC.ATTRIBUTE.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "periodicInterest": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "periodicIndex": {
                                                        "type": "string",
                                                        "description": "A periodic rate is tied to an index (e.g. LIBOR) which is dependent on a period of time (e.g. term) and possibly an amount. Once the arrangement is active, the rate is fixed until it is reset. Periodic rates can be reset at a pre-determined frequency.\nTo define a periodic rate, the user specifies:.\nPERIODIC.INTEREST index to use.\nPeriod (this will default to TERM if a Term Amount Property exists).\nInterest selection method if the term is not found on the index. The option currently available is INTERPOLATE.\nRate Reset period.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "periodicRate": {
                                                        "type": "string",
                                                        "description": "Indicates the rate on which the index runs on the date stated in the key. When a periodic index is used and the field is left blank, then system computes the rate from PERIODIC.INTEREST and defaults it here. When a rate is already present(say, the user changes the system computed rate), then system does not compute the new rate.\nValidation Rules:\nSystem defaulted and modifiable.\nStandard Rate field.\nValid only if Periodic index is stated.\n"
                                                    },
                                                    "periodicPeriodType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "periodicPeriod": {
                                                        "type": "string",
                                                        "description": "Defines the interest period to be used when linking to PERIODIC.INTEREST.(This will default to TERM if a Term Amount Property exists),. When a period is stated in Years or Weeks, they would be converted to Months and Days respectively and then located on the PI table.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE.\n"
                                                    },
                                                    "periodicMethod": {
                                                        "type": "string",
                                                        "description": "If system does not find a interest rate in the correct bucket of PERIODIC.INTEREST table, it automatically applies a method to arrive at a rate chosen by this method.\nValid method is:.\nINTERPOLATE - System automatically interpolates the rate. This is the DEFAULT option as well.\n"
                                                    },
                                                    "initialResetDate": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": ""
                                                    },
                                                    "periodicReset": {
                                                        "type": "string",
                                                        "description": "This indicates the reset period of the index stated. System would automatically reset the PERIODIC.RATE at the frequency stated in this field. Applicable only at Arrangement level. Periodic index may still be used without this field meaning, it never resets the computed rate.\nValidation rule:.\nValid PERIOD field.\n"
                                                    },
                                                    "effectiveRate": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "negativeRate": {
                                                        "type": "string",
                                                        "description": "Originally negative rate was applicable for all of the tiers together, but through this field it is now possible to define negative rate per tier.\nDifferent values can be set in each tier and the options available are YES, BLOCK.MARGIN and NO/Blank.\nBlank or NO - Indicates that negative rates cannot be input and if a rate becomes negative as a result of the application of a margin the rate will be set to zero.\nYES - Indicates that negative rates can be input and if the application margin makes the rate more negative then the more negative rate will be used.\nBLOCK.MARGIN - Indicates that negative rates can be used but the following conditions apply.\n- If the rate is positive and the margin makes the rate negative then the rate will be set to zero.\n- If the rate is negative and the margin makes the rate more negative then the margin will be ignored and the original negative rate is used.\n"
                                                    },
                                                    "margins": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "marginType": {
                                                                    "type": "string",
                                                                    "description": "Identifies whether there are single or multiple margins\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.OPER and MARGIN.RATE.\n"
                                                                },
                                                                "marginOperation": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "activites": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "onActivity": {
                                                        "type": "string",
                                                        "description": "When the periodic interest rate needs to be recalculated for certain activities, this field in combination with RECALCULATE may be used to setup the activity for which interest needs to be recalculated.\nValidation Rules:\n1. Applicable only for Periodic interest rate recalculation.\n2. Must be a valid activity in AA.ACTIVITY.\n"
                                                    },
                                                    "recalculate": {
                                                        "type": "string",
                                                        "description": "Related to ON.ACTIVITY activity, when flagged to RATE, system will recalculate Periodic rate when the activity setup in ON.ACTIVITY is processed. When the value is NOTHING periodic rate would not be recalculated when the activity setup in ON.ACTIVITY is processed.\nValidation Rules:\n1. Mandatory when ON.ACTIVITY is setup.\nThe fields ON.ACTIVITY and RECALCULATE in interest property class will be enhanced to allow user to define when to recalculate â€˜Profit Amountâ€™.\nAll activities which could result in payment schedule recalculation can be configured to recalculate â€˜Profit Amountâ€™ i.e., activities with payment schedule calculate and update action.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "references": {
                                            "type": "array",
                                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "customType": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    },
                                                    "customName": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    },
                                                    "customValue": {
                                                        "type": "string",
                                                        "description": "This is just a meta data field that will be used by the routine in filed CUSTOM.RATE.CALC to calculate custom Rate.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "tiers": {
                                            "type": "string",
                                            "description": "T24 allows for the definition of tiers of interest rates. Each tier is specified by defining the amount up to which the interest rate applies. Additionally, each tier can be of a different interest rate type (i.e. fixed, floating, or periodic). There are three type of tiers; Single, Level, and Banded.\nSingle Rate.\nWhen a single rate tier type is specified a single nominal interest rate will apply for the entire balance amount.\nRate Levels.\nBy specifying level tiers a product can be defined which will calculate interest at different rates depending on the balance amount. A single rate of interest will be selected and applied based upon the balance amount. For example for a deposit a single product can have a higher rate of interest for accounts which maintain higher credit balances. Conversely for a loan product a higher rate of interest can be charged for accounts with higher debit balances.\nFor example, aassuming a credit balance of 15,000 and level interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. A single rate of 15 per cent will be applied to the entire amount of 15,000.\nBanded Rates.\nBanded tier interest will typically result in a blended interest rate. This is similar to Level tiers, but allows for the interest rate of each tier to be applied to the portion of the balance that falls within the tier.\nFor example, assuming a credit balance of 15,000 and banded interest which specifies an applicable rate of 10 per cent up to 10,000 and 15 per cent above 10,000. Two calculations will be performed (i.e. 10 per cent on 10,000 and 15 per cent on 5,000).\nThis field is Mandatory.\n"
                                        },
                                        "linkedProperty": {
                                            "type": "string",
                                            "description": "This field will be used to specify the Interest Property of the Linked Arrangement that should be referred to, for getting the Interest Rate.\nWhere at least one tier is set to be â€˜Linked Rateâ€™, this must be specified.\n"
                                        },
                                        "dayBasis": {
                                            "type": "string",
                                            "description": "T24 can calculate interest based upon several different day basis types. Each T24 Interest Day Basis type is represented as a numerator and denominator.\nNumerator (interest days).\no 360 Each month is considered to have 30 days.\no 366 The exact number of days will be used.\nDenominator (days in the year).\no 360 Each year is considered to have 360 days.\no 365 Each year is considered to have 365 days.\no 366 The exact number of days in the year will be used (365 or 366).\nT24 allows the following interest day basis types:.\nType Notes.\nA (360/360) A1 and A2 are variations which alter the method of treating a month as 30 days.\nB (366/360).\nC (366/366).\nD (360/366).\nE (366/365).\nF (360/365) F1 and F2 are variations which alter the method of treating a month as 30 days.\nThis is a Mandatory field.\n"
                                        },
                                        "calcThreshold": {
                                            "type": "string",
                                            "description": "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated.\n"
                                        },
                                        "accrualRule": {
                                            "type": "string",
                                            "description": "When accruing interest,T24 must determine which amounts to include in each day's balance, the actual days to include in the period (e.g. first day, last day) and how to round any calculations.\nT24 allows users to define the calculation method to use, by specifying an accrual rule in EB.ACCRUAL.PARAM. Users can define the following:.\nFirst Day Inclusive (Yes/No).\nLast Day Inclusive (Yes/No).\nRounding Rule (Natural, Down, Up, Currency, None).\nIntermediate Calculation Rounding (Yes/No).\nCredit value date adjustment.\nDebit value date adjustment.\n"
                                        },
                                        "compounding": {
                                            "type": "string",
                                            "description": "T24 supports the compounding of both debit and credit interest.\nCompounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year. This field defines the number of compounding periods to be applied.\nNote that the compounding type provides a factor in the calculation only and does not actually cause the base principal amount to be actually increased by the calculated interest amount.\nThe following compound frequencies are supported:.\nDAILY.\nInterest is compounded 360/5/6 times a year (from days in year in INTEREST.BASIS).\nWEEKn.\nInterest is compounded 52/n times per year based on a number of WEEKS.\n-- Bi-weekly compounding should be defined as WEEK2 and will result in 26 periods.\n-- Four-Weekly compounding should be defined as WEEK4 and results in 13 periods.\nMnn.\nInterest is compounded 12/n times a year based on a numberof months.\n-- Monthly compounding should be defined as M01 and will result in 12 periods.\n-- Bi-Monthly should be defined as M02 and will result in 6 periods.\n-- Quarterly should be defined as M03 and will result in 4 periods.\n-- Semi-Annual should be defined as M06 and will result in 6 periods.\n-- Annual should be defined as M12 and will result in 1 period.\n-- Bi-Annual should be defined as M24 and will result in 0.5 periods.\n-- Any number of months up to 99 may be defined and results in 12/n periods.\nTWMTH.\nInterest is compounded twice a month resulting in 24 periods as opposed to WEEK2.\nwhich results in 26 periods.\nNnnn.\n- Compounding takes place nnn times per year.\n"
                                        },
                                        "compoundYieldMethod": {
                                            "type": "string",
                                            "description": "This field indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate. System uses the below formula to calculate the interest amount,.\nDaily Effective Rate(ERd) = (1+Interest Rate)^(1/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\nWhen the field is set as NULL the effective rate is calculated based on the compounding frequency defined in the field COMPOUND.TYPE using the below formula,.\nDaily Effective Rate(ERd) = (1+Interest Rate/Compound Freq)^(Compound Freq/Days in Year) - 1.\nInterest Amount = (Source Balance + Interest accrued any for the current Period)*{ (1+ERd)^(No of Days in Int Period) â€“ 1}.\n"
                                        },
                                        "minIntAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field indicates the minimum interest amount to be posted for an arrangement/account.\nIf the calculated interest amount is less than the amount specified in this field, system will waive the interest amount or adjust the interest amount based on the option set in the field MIN.INT.WAIVE.\n"
                                        },
                                        "minIntWaive": {
                                            "type": "string",
                                            "description": "This field indicates if the calculated interest amount has to be waived or adjusted.\nIf the field is set to YES, then the system will waive the interest amount if it is less than the MIN.INT.AMOUNT specified.\nIf NULL value is set and if the calculated interest amount is less than the MIN.INT.AMOUNT specified, then system will post the minimum interest amount.\n"
                                        },
                                        "referLimit": {
                                            "type": "string",
                                            "description": "For an arrangement under ACCOUNTS Product Line, it is possible link the first tier amount of debit interest to the LIMIT record attached.\nIt can be achieved by setting the field REFER.LIMIT in INTEREST property condition as â€˜YESâ€™. This functionality can be enabled only if the LIMIT is managed by AA.\n"
                                        },
                                        "suppressAccrual": {
                                            "type": "string",
                                            "description": "The Field accepts the options 'YES' or 'ALTERNATE'.\nIndicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property.\nFor Example:.\nIt will be set as YES by the system if the DONOR.ACCRUAL field is set as SUPPRESS for any product / arrangement in INTEREST.COMPENSTION property of a Bundle arrangement.\nIf it is set as 'ALTERNATE' for a property then the Accrual will be suppressed for the property for which it is set and Accrual will happen for the Alternate property which is set in Activity Restriction.\nBlank value in this field denotes that there is no suppression of accrual.\nThis is a Non Mandatory field.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "limit": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "limitReference": {
                                            "type": "string",
                                            "description": "If the Customer has a Credit Limit covering this Account, this field identifies the type of limit applicable to the Account and forms part of the key to the Limit record containing Credit Limit details. This field is also used to indicate Nostro Accounts.\nExcept for Nostro and Internal Accounts, this field is accessed by the Limits System whenever a debit transaction is processed for this Account.\nIf no Limit Reference is specified, an 'UNAUTHORISED OVERDRAFT' message is displayed and an Override is required before the transaction will be accepted.\nIf a Limit Reference is specified, the corresponding Limit record is checked (see below). If it covers the new Working Balance, the transaction is accepted, otherwise a message is displayed and an Override is required before the transaction will be accepted.\nThe key to the corresponding Limit record is built up as follows: cccccc.nnnnnnn.ss\nWhere 'cccccc' is the Liability number for the Customer in Field CUSTOMER of this record and 'nnnnnnn.ss' is the Limit Reference specified in this field.\n3-9 numeric characters consisting of a 3-7 digit Limit Reference Code and optionally, a 2 digit sequence number separated by '.' Or 'NOSTRO' to denote a Nostro Account (generated automatically by the system). (Optional input. No default.)\nThe Limit Reference Code (nnnnnnn) must be an existing code on the LIMIT.REF table.\nLimit Reference code must be a suitable one for Account records, as defined in the Limit Parameter table.\nThere must be a Limit record corresponding to the key built up as described above.\nError message is generated if single limit is set to 'Y' and one more accounts is attached to same limit (If single limit field is set to 'Y' then the limit can be utilised by one account. If multiple accounts are to utilise a single limit then, single limit field to be defined as 'N' for all such accounts.\n"
                                        },
                                        "expiryDate": {
                                            "type": "string",
                                            "format": "date",
                                            "description": "Specifies the date on which the Limit will expire. But if there are contracts against this limit,  then the limit will move to history only after the contracts mature. Any new drawings against this limit would raise overrides stating that the limit expires before the maturity date.\nWarning of the approach of this date is given on the Limits Approaching Expiry Date overnight report. The number of days prior to Expiry Date that the warning starts to appear is defined by the Expiries Reporting field on the LIMIT.PARAMETER table.\n6 to 11 type D (date) characters. (Defaults to a year from the current run     date.) The date input must be greater than or equal to the Limit Review Date\n"
                                        },
                                        "limitAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "The limit amount which is actually available for use.\nThe amount available under the limit, against which all system limit checks are performed. The value of the ONLINE LIMIT is calculated by the system as described below.\nIf the limit is an unsecured limit, a sub-limit or a secured but fixed limit, the value in this field is always equal to the value in field 21, MAXIMUM TOTAL.\nIf the limit is a variable secured limit, the value in this field is equal to the lower of (a) the MAXIMUM TOTAL or (b) the sum of the SECURED AMT's in field 24 plus the MAXIMUM UNSECURED in field 20.\nNote:      If time bands are in effect (field 25, TIME CODE), the            ONLINE LIMIT amount will reflect the split of the            available limit across these periods. In the case of an            unsecured limit, a sub-limit or a fixed secured limit,            this field will contain the same values as field 26, LIMIT            BAND.            In the case of a variable secured limit, this field will            contain either the same values as field 26, LIMIT BAND            or, if the total ONLINE LIMIT amount is lower than the            MAXIMUM TOTAL in field 21, the ONLINE LIMIT amount            apportioned pro-rata across the time bands in line with            the specified LIMIT BAND split.\n1 to 19 type AMT (standard amount format). (No input, system-generated field) Multivalue field associated with fields 25 to 45.\n"
                                        },
                                        "reviewFreq": {
                                            "type": "string",
                                            "description": "Specifies the next date on which the limit is to be reviewed. This field is mapped to LIMIT record linked to the Arrangement.\nValidation Rules:\nStandard T24 frequency code.\nThe first review date must not be later than the Limit EXPIRY.DATE.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "officers": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "officrers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "otherOfficer": {
                                                        "type": "string",
                                                        "description": ""
                                                    }
                                                }
                                            }
                                        },
                                        "primaryOfficer": {
                                            "type": "string",
                                            "description": "The primary officer responsible for the product/arrangement can be specified. All officers must exist on the T24 DEPT.ACCT.OFFICER file.\nThe primary officer is used as the ACCOUNT.OFFICER in the created ACCOUNT record.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "overdue": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "prRepayment": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "prPrincipalDecrease": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "prPayoff": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "prCurrentBalances": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "schedule": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "payment": {
                                            "type": "array",
                                            "description": "payment",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "paymentType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "paymentMethod": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "paymentFrequency": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "billType": {
                                                        "type": "string",
                                                        "description": "Bill Type would be picked from EB.LOOKUP instead of the hard-coded values of PAYMENT, EXPECTED.\nHowever all the options would not be available for this field within PAYMENT.SCHEDULE.\nThe following values would not be available,.\n1.INFO.\n2.PR.CHARGE.\n3.ACT.CHARGE.\n4.DEF.CHARGE.\n5.DISBURSEMENT.\nOther user defined values may be given which then can be used in Overdue PC to define different aging rules for the BillType.\nWhen a user defined value is captured it would be assumed as PAYMENT type Bill, and not 'Expected' type bill.\nValidations:.\nâ€¢Standard lookup field.\nâ€¢Maximum number of characters is restricted to 15.\nâ€¢INFO, PR.CHARGE, ACT.CHARGE, DEF.CHARGE options not applicable for this field although it is part of the lookup values.\n"
                                                    },
                                                    "billProduced": {
                                                        "type": "string",
                                                        "description": "By default T24 will create the Bill on the due date, however for products which require a Bill notice to be sent in advance of the due date, it is possible for the user to enter the number of days prior. This will result in the due amounts being projected and recorded on the bill.\nNumber of working days prior to the due date when the bill needs to be produced is defined in the field BILL.PRODUCED.\n"
                                                    },
                                                    "autoSettle": {
                                                        "type": "string",
                                                        "description": "By default NULL. If set to NULL, indicates AUTO.SETTLE is not enabled.\n"
                                                    },
                                                    "property": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "propertyId": {
                                                                    "type": "string",
                                                                    "description": "Any alphanumeric character can be used to define the name of the property.\nMaximum of 15 characters are allowed.\n"
                                                                },
                                                                "dueFrequency": {
                                                                    "type": "string",
                                                                    "description": "Indicates the actual frequency when the payment needs to be made due. Due frequency is defined for each payment property under a payment type.\nPayment frequency is defaulted when due frequency is null.\nGenerally both payment and due frequency has same value. When multiple properties are defined for a given payment type, due frequency of one of the property can de different from the payment frequency.\nExample:.\na) M 01 31. M = Monthly. 01 = one monthly intervals. 31 = the last day of the month.\nb) M 03 31 M = Monthly. 03 = three monthly intervals. 31 = the last day of the month.\nc) M 01 10 M=Monthly, 01 = at monthly intervals10 = 10th of the month.\nd) 31 MAR 2006 W , where W= weekly. In this case, the first schedule would fall on 31March 2006.\ne) 31 Mar 2006 BSNSS, where BSNSS = every business day. In this case, the first schedule would fall on 31March 2006.\nStandard T24 Recurrence frequency field.\nInput prohibited for a date prior to the system date.\n"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "payments": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "percentage": {
                                                                    "type": "number",
                                                                    "description": "This field stores the Percentage of holdings to be redeemed/subscribed.This input is only recorded and not used for calculations.\nInput is allowed for SWITCH orders alone.\n"
                                                                },
                                                                "startDate": {
                                                                    "type": "string",
                                                                    "format": "date",
                                                                    "description": "Identifies the Date & Frequency of the Standalone DD for execution.\nThe claim value date is the date component of this field. Hence the date & the frequency has to be given after considering the Claim value date as given in DD.PARAMETER.\nThe date is cycled with the given frequency and this mandate reference is updated in DD.STANDALONE.FQU.LIST with the next execution date.\nWhenever the frequency is modified, then the underlying claim (DD.ITEM) is marked as 'DELETED' and new claim is raised for the given frequency. Incase the Claim is already sent(DD.ITEM status is 'CLAIMSENT'), then override is raised. However the DD.ITEM will not be marked as 'DELETED' as claim file is already generated.\nMandatory when STAND.ALONE.DDI set to Yes\nThis field is sub-divided into two elements: 1. Date 1-9 type D (date format in range 1950-2049) characters. 2. Optional Frequency 1-5 type SS (uppercase alpha or numeric, first character alpha) characters. (Mandatory input)\nThe date input or generated will correspond to the first execution of the Standalone DD.\nUsing the date & frequency in case given , DD.STANDALONE.FQU.LIST is updated with the next execution date.\nAn override will be required if the date input is a non-working day.\nDate entered should be greater than today and should not be more than Termination date.\n"
                                                                },
                                                                "endDate": {
                                                                    "type": "string",
                                                                    "format": "date",
                                                                    "description": ""
                                                                },
                                                                "numberPayments": {
                                                                    "type": "string",
                                                                    "description": "If a frequency has been specified the user can specify a Start Date or it can be defaulted from the Base Date. Additionally an End Date or a Number of Payments can be specified to indicate to T24 when the payments should terminate.\nThis field is part of a multi value set of fields with START.DATE, END.DATE and ACTUAL.AMT.\n"
                                                                },
                                                                "calcAmount": {
                                                                    "type": "number",
                                                                    "format": "int64",
                                                                    "description": "There can be two amounts for each payment definition; Calculated Amount and Actual Amount.\nA calculated amount is determined by T24 based upon the Payment Type and Properties involved.\nSystem maintained(NOINPUT) field.\n"
                                                                },
                                                                "actualAmount": {
                                                                    "type": "number",
                                                                    "format": "int64",
                                                                    "description": "There can be two amounts for each payment definition; Calculated Amount and Actual Amount. An actual amount can be entered by the user to override the calculated amount or manual payments. When adhoc payments are defined we need to define the actual anount for each payment date This field is part of a multi value set of fields with START.DATE, END.DATE and NUM.PAYMENTS.\nFor Disbursement Schedule(Account - Pay), the field is mandatory and sum of the future schedules should sum up to the CUR<Term Amount>.\nValidation Rules:\n1-9 numeric characters plus decimal point and commas.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "amortisationTerm": {
                                            "type": "string",
                                            "description": "If specific amount (residual amount) needs to be collected at the maturity date of the term, we can achieve this either by actually defining the residual amount or by defininng a amortisation term.\nThis field indicates the term for amortisation. The actual payment amount is calculated based on the amortisation term and not on the actual term defined in TERM.AMOUNT property of the arrangement. This calculated payment is then spread across actual term of the arrangement. If the amortisation term is greater than the actual term then we would be left with residual amount at the maturity date.\nAny residual amount must then be paid by the client on maturity of the arrangement. Input in this field is allowed only for Constant, linear payment types. The term can be entered as a number of Days (D), Weeks(W), Months(M) or Years(Y).\n"
                                        },
                                        "residualAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "If a specific amount needs to be collected on the final schedule date, that amount may be stated in this field. The amount stated in this field is 'Exclusive' of any scheduled calculated amount on the final schedule and is always considered to be belonging to ACCOUNT property.\nAs an illustration, if an Annuity Arrangement for 100000 is assumed and an amount of 20000 is stated as RESIDUAL.AMOUNT, the Annuity amount(CALC.AMOUNT) would be computed based on only 80000. If the Annuity amount is say 1500, on the final schedule date, system would make due 1500+20000 = 21500.\nThe residual amount would be recorded in bills under a special payment type called 'RESIDUAL.PRINCIPAL'.\nThe amount stated in this field would be automatically made due on PAYMENT.END.DATE.\nStandard T24 amount field in the arrangement currency.\n"
                                        },
                                        "billsCombined": {
                                            "type": "string",
                                            "description": "Indicates whether bills which have the same due date and are produced on the same date should be combined. In case of capitalisation (where we have two payment one is made due and other capitalised) even if bills combined set to YES, system would generate two separate bills. In another scenario where have one payment type to be made due and two payment types to be capitalised, then system would combine the those two payment types.\nInput allowed should be either YES or NO.\n"
                                        },
                                        "recalcFrequency": {
                                            "type": "string",
                                            "description": "If 'Nothing' is selected in field RECALCULATE, a recalculation frequency should be specified.\nExample:.\na) M 01 31. M = Monthly. 01 = one monthly intervals. 31 = the last day of the month.\nb) M 03 31 M = Monthly. 03 = three monthly intervals. 31 = the last day of the month.\nc) M 01 10 M=Monthly, 01 = at monthly intervals10 = 10th of the month.\nd) 31 MAR 2006 W , where W= weekly. In this case, the first schedule would fall on 31March 2006.\ne) 31 Mar 2006 BSNSS, where BSNSS = every business day. In this case, the first schedule would fall on 31March 2006.\nStandard date format.\nMust be a valid date.\nAn override will be required if the date is not defined on the HOLIDAY table.\nAn override will be required if the date as defined on the HOLIDAY table is a non working day.\nInput prohibited for a date prior to the system date.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "payoff": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "payoutDisburse": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "settlement": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "linkedAccounts": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "linkedAccountType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "linkedAccount": {
                                                        "type": "string",
                                                        "description": ""
                                                    }
                                                }
                                            }
                                        },
                                        "payin": {
                                            "type": "array",
                                            "description": "When PAYIN.ACCOUNT used is an Arrangement Account, then an activity has to be specified to debit that arrangement as well. That activity need to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Debit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYIN.ACCOUNT Required only if the PAYIN.ACCOUNT is an AA Account.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "payinSettlement": {
                                                        "type": "string",
                                                        "description": "The field may be used as a switch to turn off the Settlement instruction temporarily without having the need to clear or delete the field contents. If the field is set to NO, then it means the instructions are not active. Validation Rules: Valid input is Yes or No. Default value is Yes.\n"
                                                    },
                                                    "paymentTypes": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "paymentTypeAccount": {
                                                                    "type": "string",
                                                                    "description": "Payment types for the AA contract that require settlement by DD to be defined.\nValid payment type from AA.PAYMENT.TYPE.\n"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "payinActivity": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "mandateReference": {
                                                                    "type": "string",
                                                                    "format": "date",
                                                                    "description": "The DD mandate to be used if the settlement method is DD. The DD number must be the account of the arrangement.\nShould be a valid Mandate Ref from DD.DDI.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "settlement": {
                                            "type": "array",
                                            "description": "Identifies the  Account number,arrangement id or Portfolio No, subscribing to the alerts.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "payinAccount": {
                                                        "type": "string",
                                                        "description": "Contains the Account number from where funds are to be debited and Credited against this payment type. Multiple accounts could be defined here and the rules of funding is governed by the PAYIN.AC.DB.RULE field. Validation Rules: Should be a valid T24 ACCOUNT Number.\n"
                                                    },
                                                    "paymentType": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "reference": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "payinActivity": {
                                                                    "type": "string",
                                                                    "description": "When PAYIN.ACCOUNT used is an Arrangement Account, then an activity has to be specified to debit that arrangement as well. That activity need to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Debit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYIN.ACCOUNT Required only if the PAYIN.ACCOUNT is an AA Account.\n"
                                                                },
                                                                "payinDbRule": {
                                                                    "type": "string",
                                                                    "description": "The field decides the manner in which system should utilise the funds available in PAYIN.ACCOUNT during settlement process. 1) FULL: System debits the PAYIN account to the extent of the bill amount irrespective of whether or not the funds are avaliable in the specified account. For this purpose, system creates an overdraft in the PAYIN.ACCOUNT in case funds are only partially available provided the PAYIN.ACCOUNT has a limit attached to it. 2) PARTIAL: System debits the PAYIN.ACCOUNT only to the extent of funds availabe. 3) NONE: System would not debit the PAYIN.ACCOUNT if funds are not fully available to settle the bill.\n"
                                                                },
                                                                "payinSettleActivity": {
                                                                    "type": "string",
                                                                    "description": "Activity to be used to settle the Dues of the current Arrangement. Typically this would be a APPLYPAYMENT activity. User activity may also be stated in this field. Validation Rules: Should be a valid record in AA.ACTIVITY.\n"
                                                                },
                                                                "payinRcType": {
                                                                    "type": "string",
                                                                    "description": "Defines the RC.TYPE reference to be used during handoff to inform the recycler what type of transaction is being handed-off.\nValidation Rules:\nShould be a valid entry in RC.TYPE.\nValid only if PAYIN.TXN.TYPE is defined.\n"
                                                                },
                                                                "payinRcCondition": {
                                                                    "type": "string",
                                                                    "description": "Defines the RC.CONDITION to be used for the payment type to allow variation of different retry conditions.\nValidation Rules:\nShould be a valid entry in RC.CONDITION.\nValid only if PAYIN.TXN.TYPE is defined.\n"
                                                                },
                                                                "transactionType": {
                                                                    "type": "string",
                                                                    "description": "Indicates whether the Customer is placing an order to buy or sell.\nThe transaction code is user defined for convenience and adaptability to cover all eventualities within theSecuritys Module From Coupon Payments to Redemptions and Capital Increase Type updates. Within the Open Orderapplication it is suggested that the same codes as for the Sec.Trade application i.e. For A purchase of securitiesSPR and for a Sale SSL be used.\n1-3 type S (uppercase alpha) character Sc.Trans.Name. (Mandatory Input.)\nMust be a valid code on the SC.TRANS.NAME file.\n"
                                                                },
                                                                "nominatedAmount": {
                                                                    "type": "number",
                                                                    "format": "int64",
                                                                    "description": ""
                                                                },
                                                                "additionalAmount": {
                                                                    "type": "number",
                                                                    "format": "int64",
                                                                    "description": ""
                                                                },
                                                                "excludeProperties": {
                                                                    "type": "string",
                                                                    "description": ""
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "payout": {
                                            "type": "array",
                                            "description": "When PAYOUT.ACCOUNT used is an Arrangement Account, then an activity has to be specified to Credit the Account arrangement as well. That activity needs to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Credit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYOUT.ACCOUNT Required only if the PAYOUT.ACCOUNT is an AA Account.\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "payoutSettlement": {
                                                        "type": "string",
                                                        "description": "The field may be used as a switch to turn off the Settlement instruction temporarily without having the need to clear or delete the field contents. If the field is set to NO, then it means the instructions are not active. Validation Rules: Valid input is Yes or No. Default value is Yes.\n"
                                                    },
                                                    "payoutSettleActivity": {
                                                        "type": "string",
                                                        "description": "Contains the PROPERTY based on which the Payout settlement instruction would be processed. This definition allows users to configure multiple payouts happening to multiple accounts. For example, user can configure Current Interest to be paid out to one account, whilst the Maturity deposit amount may be credited to another account. Validation Rules: Should be a valid record in AA.PROPERTY.\n"
                                                    },
                                                    "propertyClasses": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "payoutPropertyClass": {
                                                                    "type": "string",
                                                                    "description": "Contains the PROPERTY CLASS based on which the Payout settlement instruction would be processed. This definition allows users to configure multiple payouts happening to multiple accounts. For example, user can configure Interest to be paid out to one account, whilst the Maturity deposit amount to be credited to another account. Validation Rules: Should be a valid record in AA.PROPERTY.CLASS.\n"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "properties": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "payoutProperty": {
                                                                    "type": "string",
                                                                    "description": "Contains the PROPERTY based on which the Payout settlement instruction would be processed. This definition allows users to configure multiple payouts happening to multiple accounts. For example, user can configure Current Interest to be paid out to one account, whilst the Maturity deposit amount may be credited to another account. Validation Rules: Should be a valid record in AA.PROPERTY.\n"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "payoutActivity": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "payoutAccount": {
                                                                    "type": "string",
                                                                    "description": "Contains the Account to which funds are to be credited from this Arrangement. Validation Rules: Should be a valid T24 ACCOUNT Number.\n"
                                                                },
                                                                "payoutBeneficiary": {
                                                                    "type": "string",
                                                                    "description": "This field is a link to the core BENEFICIARY table and is used to define who is the ultimate beneficiary of the funds.\nWhen configured a PAYMENT.ORDER will be generated and the routing will be decided via the PAYMENT.ORDER.PARAMETER.\nBased on the setting in PAYMENT.ORDER.PARAMETER either a FUNDS.TRANSFER or TPH message will be produced.\nAlong with values from the PAYMENT.ORDER.PRODUCT record the BENEFICIARY record is mapped through to the PAYMENT.ORDER application and then mapped through to FUNDS.TRANSFER or TPH.\nCurrent functionality also allows for a T24 account to be defined in the Beneficiary record which will be credited.\no Optional field.\no Mutually exclusive with PAYOUT.ACCOUNT.\no Is used in conjunction with PAYOUT.PO.PRODUCT.\no Drills down to the BENEFICIARY table.\n"
                                                                },
                                                                "payoutPoProduct": {
                                                                    "type": "string",
                                                                    "description": "This field is linked to the PAYMENT.ORDER.PRODUCT table and its value is passed through to the PAYMENT.ORDER application.\nIts main purpose will be to control parameters for TPH processing and pass outgoing messages parameters.\no Optional field.\no Is used in conjunction with PAYOUT.BENEFICIARY.\no Drills down to the PAYMENT.ORDER.PRODUCT table.\n"
                                                                },
                                                                "payoutPercentage": {
                                                                    "type": "number",
                                                                    "description": "Will allow the ability to define only a percentage value.\nThe system will cascade 'from top-to bottom' down the multiple fields taking the percentages in order (a blank field will be considered for processing last).\nThe percentage defined is the % portion of the Billed amount, which will be settled from the respective account.\nThe total percentages may not exceed 100%, The total percentages may not total 100%.\nIn the case of any rounding issues the last account will be deemed as the account to process any required adjustments.\nA blank field can be defined at last, In this case the remainder of the bill will be settled from this account.\n"
                                                                },
                                                                "payoutAmount": {
                                                                    "type": "number",
                                                                    "format": "int64",
                                                                    "description": "Will allow the ability to define only a fixed value.\nThe system will cascade 'from top-to bottom' down the multiple fields taking the amounts defined in order (a blank field will be considered for processing last).\nWhen a bill is generated to be collected the individual amounts or total amounts defined may exceed the billed amount.\nIn this case the amount defined is classed as an 'up-to' amount. This is the maximum that can be taken and will honour the ACCOUNT.DEBIT.RULE field.\nTo satisfy the bill a lesser amount can also be taken.\nWhen a bill is generated to be collected the individual amounts or total amounts defined may not satisfy the billed amount.\nThe amount defined will be the amount to be taken.\nIn this case any remainder of the bill will be made due.\n"
                                                                },
                                                                "payoutActivity": {
                                                                    "type": "string",
                                                                    "description": "When PAYOUT.ACCOUNT used is an Arrangement Account, then an activity has to be specified to Credit the Account arrangement as well. That activity needs to stated here. Ofcourse, if the Account is not an Arrangement account, then this field is not required to be stated since the Credit happens directly. Please be noted that this activity happens on the Arrangement from which funds are debited and is not relevant to this Arrangement. It is only a definition on this arrangement. Validation rules: Should be a Valid entry in AA.ACTIVITY Should belong to the same Product line as stated in the PAYOUT.ACCOUNT Required only if the PAYOUT.ACCOUNT is an AA Account.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "retryDays": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "defaultSettlementAccount": {
                                            "type": "string",
                                            "description": "An account specified here will be used as the settlement account for all PAYIN or PAYOUT entries which do not have a Settlement Account, Beneficiary or DD Mandate Reference defined.\nInput in this field is optional. Must be a valid account.\n"
                                        }
                                    }
                                }
                            }
                        },
                        "commitment": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "amount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "This field contains the cash amount that is to be traded.\nWhen the ORDER.TYPE is CASH,If the CASH.CHRGS field is set to GROSS then the cash amount will be used to calculate the nominal anycharges/commissions that apply will be added to this value, however, if the CASH.CHRGS field is set to NET the cashamount will include all charges/commissions, adjusting the nominal to achieve this.\nMandatory if ORDER.TYPE is CASH\n"
                                        },
                                        "changeAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": "The original commitment amout can be increased or decreased using INCREASE or DECREASE action. This field represent the amount to increase or decrease on the original amount.\nFor increase action, the input in this field should be greater than zero.\nFor decrease action the input in this field should be less than zero.\nStandard T24 amount field.\n"
                                        },
                                        "term": {
                                            "type": "string",
                                            "description": "Indicates the period to which a rate applies.\n'R' for Remaining, NND for Rest period in Days where D  Number of Days,      NNNM for Rest Period in Months where M Number of Months and NNY for rest     period in years where Y Number of years. e.g. a 10 day rest period would be     written as 10D, a 120 month rest period as 120M and a 20 year rest period as     20Y. R must be the last rest period entered. Multi value field. (Mandatory     input. No default.)\nThe number of days or months must be entered in logical order i.e. in     ascending sequence.\nFor days the range 01-31 will be allowed while for months 01-360 will be     accepted. For years the range 01-30 is accepted.\nWhen 'R' is defined, at least one additional rest period must be defined.\nWhen more than one rest period is defined, 'R' must be entered on the last     entered rest period.\n"
                                        },
                                        "revolving": {
                                            "type": "string",
                                            "description": "Defines the revolving term amounts for lending products. The effect of a revolving product is to increase the available amount from which a customer may drawdown as a result of certain payments. The options are:.\nNO - the available amount will not increase when any payments are made.\nPAYMENT - any payment against the outstanding amount(due or not due) will result in the available amount increasing.\nPREPAYMENT - only repayments agains the outstanding amount (balance not yet due) will result in the available amount increasing.\n",
                                            "enum": [
                                                "NO",
                                                "PAYMENT",
                                                "PREPAYMENT"
                                            ]
                                        },
                                        "updateLimit": {
                                            "type": "string",
                                            "description": "Defines whether the commitment amount of the Limit used for the arrangement should be updated and shown on the LIMIT record.\n",
                                            "enum": [
                                                "YES",
                                                "NO"
                                            ]
                                        },
                                        "topupAmount": {
                                            "type": "number",
                                            "format": "int64",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "agent": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "agents": {
                                            "type": "array",
                                            "description": "",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "agentId": {
                                                        "type": "string",
                                                        "description": "Holds the agent ID from CUSTOMER table.\n"
                                                    },
                                                    "agentArrangementId": {
                                                        "type": "string",
                                                        "description": "Hold the agentâ€™s arrangement ID, based on which commissions have to be calculated. Should be a valid AA.ARRANGEMENT (AGENT LINE).\n"
                                                    },
                                                    "agentRole": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "events": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "fixedAmount": {
                                                                    "type": "number",
                                                                    "format": "int64",
                                                                    "description": "This field defines the overriding that should be considered while processing commissions. When this field is defined with an amount system would ignore the default commission setup specified at agent arrangement and would consider this amount as the commission amount.\nValidation Rules:\nOption input.\nStandard T24 amount field.\nShould be greater than 0.\n"
                                                                },
                                                                "marginOperand": {
                                                                    "type": "string",
                                                                    "description": "The options are ADD or SUB. This indicates whether the MARGIN.RATE should be added or subtracted from the Floating or Periodic Rate.\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.RATE and input is only allowed if a rate is entered in MARGIN.RATE.\n"
                                                                },
                                                                "marginRate": {
                                                                    "type": "string",
                                                                    "description": "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect any rate profit realized.  The result is the nominal rate of interest.  T24 allows for the following margin configuration:\nSingle or Multiple Margins (Field MARGIN.TYPE)\nRate Adjustment Method (Field MARGIN.OPER)\nThis field is part of a multi value set of fields listed in the helptext for FIXED.RATE. It is also part of a sub value set with MARGIN.TYPE and MARGIN.OPER.\n"
                                                                },
                                                                "marginPercent": {
                                                                    "type": "number",
                                                                    "description": "Defines a percentage is applied over the default commission amount, to calculate the final commission for a financial arrangement. Is used in conjunction with MARGIN.OPERAND.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "periodiccharges": {
                            "type": "object",
                            "properties": {
                                "header": {
                                    "type": "object",
                                    "properties": {
                                        "transactionStatus": {
                                            "type": "string"
                                        },
                                        "audit": {
                                            "type": "object",
                                            "properties": {
                                                "parseTime": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "amount": {
                                            "type": "array",
                                            "description": "This field contains the cash amount that is to be traded.\nWhen the ORDER.TYPE is CASH,If the CASH.CHRGS field is set to GROSS then the cash amount will be used to calculate the nominal anycharges/commissions that apply will be added to this value, however, if the CASH.CHRGS field is set to NET the cashamount will include all charges/commissions, adjusting the nominal to achieve this.\nMandatory if ORDER.TYPE is CASH\n",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "debitCharge": {
                                                        "type": "string",
                                                        "description": "Minimum charge amount can be specified for associated currency attribute. AA.CHARGE.DETAILS will be updated with the actual calculated charge amount and the charge amount that has been billed after applying MIN.CHG.AMOUNT. If currency is input either of Maximum or Minimum charge amount is mandatory.\n"
                                                    },
                                                    "chargeAmount": {
                                                        "type": "number",
                                                        "format": "int64",
                                                        "description": "Holds the charge amount equivalent in charge account currency\n"
                                                    },
                                                    "creditCharge": {
                                                        "type": "string",
                                                        "description": "Defines minimum charge amount to be paid for the currency attribute if the net charge amount is a Credit.\n"
                                                    },
                                                    "maxCreditCharge": {
                                                        "type": "string",
                                                        "description": "Defines maximum charge amount to be paid for the currency attribute if the net charge amount is a Credit.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "waiveCharge": {
                                            "type": "string",
                                            "description": "Input of 'NO' indicates that charges are collected on this PAYMENT.STOP.TYPE and an input of 'YES' indicates that charges are to be waived for this particular stop payment. If there is no input defaults to 'NO'.\nOptional input. Valid input 'YES' or 'NO'. Defaults to 'NO'.Multi value       field associated with fields 2 to 24.\nAlphanumeric - Maximum of 3 characters\n"
                                        },
                                        "includeDeferred": {
                                            "type": "string",
                                            "description": "Indicates if all deferred charges should be included or not. Valid options - YES and NO.\n"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "createBLSimErrorResponse": {
            "properties": {
                "header": {
                    "$ref": "#/definitions/ArrangementHeader"
                },
                "body": {
                    "$ref": "#/definitions/createBLSimErrorResponseBody"
                }
            },
            "description": "createBLSimErrorResponse"
        },
        "createBLSimErrorResponseBody": {
            "type": "object",
            "properties": {
                "errorDetails": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "fieldName": {
                                "type": "string"
                            },
                            "property": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            },
                            "code": {
                                "type": "string"
                            }
                        }
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}